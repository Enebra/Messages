// Code generated by protoc-gen-go.
// source: datatypes/devices.proto
// DO NOT EDIT!

/*
Package DataTypes is a generated protocol buffer package.

It is generated from these files:
	datatypes/devices.proto

It has these top-level messages:
	AccessDevice
	DeviceUpdate
	ConnectedDevices
	Device
	DeviceStateMessage
	GenericDeviceStateMsg
	AccessDeviceStateMsg
*/
package DataTypes

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import DataTypes1 "datatypes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DeviceType int32

const (
	DeviceType_None_Type  DeviceType = 0
	DeviceType_CardReader DeviceType = 1
	DeviceType_Capture    DeviceType = 2
)

var DeviceType_name = map[int32]string{
	0: "None_Type",
	1: "CardReader",
	2: "Capture",
}
var DeviceType_value = map[string]int32{
	"None_Type":  0,
	"CardReader": 1,
	"Capture":    2,
}

func (x DeviceType) String() string {
	return proto.EnumName(DeviceType_name, int32(x))
}
func (DeviceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type DeviceState int32

const (
	DeviceState_None_State    DeviceState = 0
	DeviceState_Active        DeviceState = 1
	DeviceState_StoppedByUser DeviceState = 2
	DeviceState_Paused        DeviceState = 3
	DeviceState_Stopped       DeviceState = 4
	DeviceState_Error         DeviceState = 5
)

var DeviceState_name = map[int32]string{
	0: "None_State",
	1: "Active",
	2: "StoppedByUser",
	3: "Paused",
	4: "Stopped",
	5: "Error",
}
var DeviceState_value = map[string]int32{
	"None_State":    0,
	"Active":        1,
	"StoppedByUser": 2,
	"Paused":        3,
	"Stopped":       4,
	"Error":         5,
}

func (x DeviceState) String() string {
	return proto.EnumName(DeviceState_name, int32(x))
}
func (DeviceState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type AccessDevice struct {
	Name         string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	SerialNumber uint64 `protobuf:"fixed64,2,opt,name=serial_number,json=serialNumber" json:"serial_number,omitempty"`
}

func (m *AccessDevice) Reset()                    { *m = AccessDevice{} }
func (m *AccessDevice) String() string            { return proto.CompactTextString(m) }
func (*AccessDevice) ProtoMessage()               {}
func (*AccessDevice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type DeviceUpdate struct {
	// Types that are valid to be assigned to Update:
	//	*DeviceUpdate_ConnectedDevices
	//	*DeviceUpdate_DeviceStateMsg
	Update isDeviceUpdate_Update `protobuf_oneof:"update"`
}

func (m *DeviceUpdate) Reset()                    { *m = DeviceUpdate{} }
func (m *DeviceUpdate) String() string            { return proto.CompactTextString(m) }
func (*DeviceUpdate) ProtoMessage()               {}
func (*DeviceUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isDeviceUpdate_Update interface {
	isDeviceUpdate_Update()
}

type DeviceUpdate_ConnectedDevices struct {
	ConnectedDevices *ConnectedDevices `protobuf:"bytes,1,opt,name=connected_devices,json=connectedDevices,oneof"`
}
type DeviceUpdate_DeviceStateMsg struct {
	DeviceStateMsg *DeviceStateMessage `protobuf:"bytes,2,opt,name=device_state_msg,json=deviceStateMsg,oneof"`
}

func (*DeviceUpdate_ConnectedDevices) isDeviceUpdate_Update() {}
func (*DeviceUpdate_DeviceStateMsg) isDeviceUpdate_Update()   {}

func (m *DeviceUpdate) GetUpdate() isDeviceUpdate_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *DeviceUpdate) GetConnectedDevices() *ConnectedDevices {
	if x, ok := m.GetUpdate().(*DeviceUpdate_ConnectedDevices); ok {
		return x.ConnectedDevices
	}
	return nil
}

func (m *DeviceUpdate) GetDeviceStateMsg() *DeviceStateMessage {
	if x, ok := m.GetUpdate().(*DeviceUpdate_DeviceStateMsg); ok {
		return x.DeviceStateMsg
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DeviceUpdate) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DeviceUpdate_OneofMarshaler, _DeviceUpdate_OneofUnmarshaler, _DeviceUpdate_OneofSizer, []interface{}{
		(*DeviceUpdate_ConnectedDevices)(nil),
		(*DeviceUpdate_DeviceStateMsg)(nil),
	}
}

func _DeviceUpdate_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DeviceUpdate)
	// update
	switch x := m.Update.(type) {
	case *DeviceUpdate_ConnectedDevices:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConnectedDevices); err != nil {
			return err
		}
	case *DeviceUpdate_DeviceStateMsg:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceStateMsg); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DeviceUpdate.Update has unexpected type %T", x)
	}
	return nil
}

func _DeviceUpdate_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DeviceUpdate)
	switch tag {
	case 1: // update.connected_devices
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConnectedDevices)
		err := b.DecodeMessage(msg)
		m.Update = &DeviceUpdate_ConnectedDevices{msg}
		return true, err
	case 2: // update.device_state_msg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeviceStateMessage)
		err := b.DecodeMessage(msg)
		m.Update = &DeviceUpdate_DeviceStateMsg{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DeviceUpdate_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DeviceUpdate)
	// update
	switch x := m.Update.(type) {
	case *DeviceUpdate_ConnectedDevices:
		s := proto.Size(x.ConnectedDevices)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DeviceUpdate_DeviceStateMsg:
		s := proto.Size(x.DeviceStateMsg)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ConnectedDevices struct {
	LocationId *DataTypes1.Key `protobuf:"bytes,1,opt,name=location_id,json=locationId" json:"location_id,omitempty"`
	Devices    []*Device       `protobuf:"bytes,2,rep,name=devices" json:"devices,omitempty"`
}

func (m *ConnectedDevices) Reset()                    { *m = ConnectedDevices{} }
func (m *ConnectedDevices) String() string            { return proto.CompactTextString(m) }
func (*ConnectedDevices) ProtoMessage()               {}
func (*ConnectedDevices) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ConnectedDevices) GetLocationId() *DataTypes1.Key {
	if m != nil {
		return m.LocationId
	}
	return nil
}

func (m *ConnectedDevices) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type Device struct {
	DeviceType  DeviceType `protobuf:"varint,1,opt,name=device_type,json=deviceType,enum=DataTypes.DeviceType" json:"device_type,omitempty"`
	DeviceNames string     `protobuf:"bytes,2,opt,name=device_names,json=deviceNames" json:"device_names,omitempty"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// To notify about device update
type DeviceStateMessage struct {
	// Types that are valid to be assigned to Msg:
	//	*DeviceStateMessage_GenericDeviceStateMsg
	//	*DeviceStateMessage_AccessDeviceStateMsg
	Msg isDeviceStateMessage_Msg `protobuf_oneof:"msg"`
}

func (m *DeviceStateMessage) Reset()                    { *m = DeviceStateMessage{} }
func (m *DeviceStateMessage) String() string            { return proto.CompactTextString(m) }
func (*DeviceStateMessage) ProtoMessage()               {}
func (*DeviceStateMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type isDeviceStateMessage_Msg interface {
	isDeviceStateMessage_Msg()
}

type DeviceStateMessage_GenericDeviceStateMsg struct {
	GenericDeviceStateMsg *GenericDeviceStateMsg `protobuf:"bytes,1,opt,name=generic_device_state_msg,json=genericDeviceStateMsg,oneof"`
}
type DeviceStateMessage_AccessDeviceStateMsg struct {
	AccessDeviceStateMsg *AccessDeviceStateMsg `protobuf:"bytes,2,opt,name=access_device_state_msg,json=accessDeviceStateMsg,oneof"`
}

func (*DeviceStateMessage_GenericDeviceStateMsg) isDeviceStateMessage_Msg() {}
func (*DeviceStateMessage_AccessDeviceStateMsg) isDeviceStateMessage_Msg()  {}

func (m *DeviceStateMessage) GetMsg() isDeviceStateMessage_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *DeviceStateMessage) GetGenericDeviceStateMsg() *GenericDeviceStateMsg {
	if x, ok := m.GetMsg().(*DeviceStateMessage_GenericDeviceStateMsg); ok {
		return x.GenericDeviceStateMsg
	}
	return nil
}

func (m *DeviceStateMessage) GetAccessDeviceStateMsg() *AccessDeviceStateMsg {
	if x, ok := m.GetMsg().(*DeviceStateMessage_AccessDeviceStateMsg); ok {
		return x.AccessDeviceStateMsg
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DeviceStateMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DeviceStateMessage_OneofMarshaler, _DeviceStateMessage_OneofUnmarshaler, _DeviceStateMessage_OneofSizer, []interface{}{
		(*DeviceStateMessage_GenericDeviceStateMsg)(nil),
		(*DeviceStateMessage_AccessDeviceStateMsg)(nil),
	}
}

func _DeviceStateMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DeviceStateMessage)
	// msg
	switch x := m.Msg.(type) {
	case *DeviceStateMessage_GenericDeviceStateMsg:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GenericDeviceStateMsg); err != nil {
			return err
		}
	case *DeviceStateMessage_AccessDeviceStateMsg:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AccessDeviceStateMsg); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DeviceStateMessage.Msg has unexpected type %T", x)
	}
	return nil
}

func _DeviceStateMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DeviceStateMessage)
	switch tag {
	case 1: // msg.generic_device_state_msg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GenericDeviceStateMsg)
		err := b.DecodeMessage(msg)
		m.Msg = &DeviceStateMessage_GenericDeviceStateMsg{msg}
		return true, err
	case 2: // msg.access_device_state_msg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AccessDeviceStateMsg)
		err := b.DecodeMessage(msg)
		m.Msg = &DeviceStateMessage_AccessDeviceStateMsg{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DeviceStateMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DeviceStateMessage)
	// msg
	switch x := m.Msg.(type) {
	case *DeviceStateMessage_GenericDeviceStateMsg:
		s := proto.Size(x.GenericDeviceStateMsg)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DeviceStateMessage_AccessDeviceStateMsg:
		s := proto.Size(x.AccessDeviceStateMsg)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GenericDeviceStateMsg struct {
	LocationId *DataTypes1.Key `protobuf:"bytes,1,opt,name=location_id,json=locationId" json:"location_id,omitempty"`
	Type       DeviceType      `protobuf:"varint,2,opt,name=type,enum=DataTypes.DeviceType" json:"type,omitempty"`
	State      DeviceState     `protobuf:"varint,3,opt,name=state,enum=DataTypes.DeviceState" json:"state,omitempty"`
	Message    string          `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
}

func (m *GenericDeviceStateMsg) Reset()                    { *m = GenericDeviceStateMsg{} }
func (m *GenericDeviceStateMsg) String() string            { return proto.CompactTextString(m) }
func (*GenericDeviceStateMsg) ProtoMessage()               {}
func (*GenericDeviceStateMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GenericDeviceStateMsg) GetLocationId() *DataTypes1.Key {
	if m != nil {
		return m.LocationId
	}
	return nil
}

// Notify on door state
type AccessDeviceStateMsg struct {
	LocationId *DataTypes1.Key `protobuf:"bytes,1,opt,name=location_id,json=locationId" json:"location_id,omitempty"`
	Opened     bool            `protobuf:"varint,2,opt,name=opened" json:"opened,omitempty"`
}

func (m *AccessDeviceStateMsg) Reset()                    { *m = AccessDeviceStateMsg{} }
func (m *AccessDeviceStateMsg) String() string            { return proto.CompactTextString(m) }
func (*AccessDeviceStateMsg) ProtoMessage()               {}
func (*AccessDeviceStateMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AccessDeviceStateMsg) GetLocationId() *DataTypes1.Key {
	if m != nil {
		return m.LocationId
	}
	return nil
}

func init() {
	proto.RegisterType((*AccessDevice)(nil), "DataTypes.AccessDevice")
	proto.RegisterType((*DeviceUpdate)(nil), "DataTypes.DeviceUpdate")
	proto.RegisterType((*ConnectedDevices)(nil), "DataTypes.ConnectedDevices")
	proto.RegisterType((*Device)(nil), "DataTypes.Device")
	proto.RegisterType((*DeviceStateMessage)(nil), "DataTypes.DeviceStateMessage")
	proto.RegisterType((*GenericDeviceStateMsg)(nil), "DataTypes.GenericDeviceStateMsg")
	proto.RegisterType((*AccessDeviceStateMsg)(nil), "DataTypes.AccessDeviceStateMsg")
	proto.RegisterEnum("DataTypes.DeviceType", DeviceType_name, DeviceType_value)
	proto.RegisterEnum("DataTypes.DeviceState", DeviceState_name, DeviceState_value)
}

func init() { proto.RegisterFile("datatypes/devices.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 566 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x54, 0xd1, 0x6e, 0xd3, 0x4a,
	0x10, 0x8d, 0x9d, 0xc4, 0x69, 0xc6, 0x69, 0xee, 0x76, 0xd5, 0xb4, 0xd6, 0x45, 0x88, 0x60, 0x5e,
	0x42, 0x41, 0xa9, 0x14, 0x24, 0xc4, 0x6b, 0x93, 0xa0, 0xa4, 0x20, 0x22, 0xb4, 0x6d, 0x25, 0x24,
	0x1e, 0xcc, 0xd6, 0x3b, 0xb2, 0x2c, 0x35, 0xb6, 0xb5, 0xbb, 0xa9, 0xc8, 0xef, 0xf0, 0x03, 0x7c,
	0x00, 0x7f, 0xc1, 0x17, 0x21, 0xaf, 0x9d, 0x62, 0x9a, 0x80, 0xd4, 0x37, 0xcf, 0xcc, 0x99, 0x33,
	0x67, 0xce, 0xac, 0x0c, 0xc7, 0x82, 0x6b, 0xae, 0xd7, 0x19, 0xaa, 0x53, 0x81, 0xb7, 0x71, 0x88,
	0x6a, 0x98, 0xc9, 0x54, 0xa7, 0xb4, 0x3d, 0xe5, 0x9a, 0x5f, 0xe6, 0x85, 0xff, 0x0f, 0x2b, 0x18,
	0xae, 0x79, 0x01, 0xf0, 0x67, 0xd0, 0x39, 0x0b, 0x43, 0x54, 0x6a, 0x6a, 0xfa, 0x28, 0x85, 0x46,
	0xc2, 0x97, 0xe8, 0x59, 0x7d, 0x6b, 0xd0, 0x66, 0xe6, 0x9b, 0x3e, 0x83, 0x7d, 0x85, 0x32, 0xe6,
	0x37, 0x41, 0xb2, 0x5a, 0x5e, 0xa3, 0xf4, 0xec, 0xbe, 0x35, 0x70, 0x58, 0xa7, 0x48, 0x2e, 0x4c,
	0xce, 0xff, 0x6e, 0x41, 0xa7, 0xe0, 0xb8, 0xca, 0x04, 0xd7, 0x48, 0xdf, 0xc1, 0x41, 0x98, 0x26,
	0x09, 0x86, 0x1a, 0x45, 0x50, 0xaa, 0x32, 0xb4, 0xee, 0xe8, 0xd1, 0xf0, 0x4e, 0xd6, 0x70, 0xb2,
	0xc1, 0x14, 0xcd, 0x6a, 0x5e, 0x63, 0x24, 0xbc, 0x97, 0xa3, 0xe7, 0x40, 0x0a, 0x86, 0x40, 0x69,
	0xae, 0x31, 0x58, 0xaa, 0xc8, 0x88, 0x70, 0x47, 0x8f, 0x2b, 0x54, 0x05, 0xfa, 0x22, 0x47, 0x7c,
	0x40, 0xa5, 0x78, 0x84, 0xf3, 0x1a, 0xeb, 0x8a, 0x4a, 0x56, 0x45, 0xe3, 0x3d, 0x70, 0x56, 0x46,
	0xa0, 0x9f, 0x01, 0xb9, 0x3f, 0x9c, 0x9e, 0x82, 0x7b, 0x93, 0x86, 0x5c, 0xc7, 0x69, 0x12, 0xc4,
	0xa2, 0x94, 0xdb, 0xad, 0xcc, 0x78, 0x8f, 0x6b, 0x06, 0x1b, 0xc8, 0xb9, 0xa0, 0x2f, 0xa0, 0xb5,
	0xd9, 0xcd, 0xee, 0xd7, 0x07, 0xee, 0xe8, 0x60, 0x4b, 0x10, 0xdb, 0x20, 0xfc, 0x10, 0x9c, 0xd2,
	0xe6, 0xd7, 0xe0, 0x96, 0x0b, 0xe5, 0x17, 0x31, 0x73, 0xba, 0xa3, 0xde, 0x56, 0x6b, 0xfe, 0xcd,
	0x40, 0xdc, 0x7d, 0xd3, 0xa7, 0xd0, 0x29, 0xfb, 0xf2, 0xcb, 0x28, 0x63, 0x42, 0x9b, 0x95, 0x5c,
	0x8b, 0x3c, 0xe5, 0xff, 0xb4, 0x80, 0x6e, 0x3b, 0x41, 0x3f, 0x83, 0x17, 0x61, 0x82, 0x32, 0x0e,
	0x83, 0x2d, 0x2b, 0x8b, 0x35, 0xfb, 0x95, 0xf1, 0xb3, 0x02, 0x3a, 0xfd, 0xc3, 0xbb, 0x79, 0x8d,
	0xf5, 0xa2, 0x5d, 0x05, 0xfa, 0x09, 0x8e, 0xb9, 0x79, 0x45, 0xc1, 0x5f, 0xce, 0xf4, 0xa4, 0xc2,
	0x5d, 0x7d, 0x6f, 0x15, 0xea, 0x43, 0xbe, 0x23, 0x3f, 0x6e, 0x42, 0x7d, 0xa9, 0x22, 0xff, 0x87,
	0x05, 0xbd, 0x9d, 0x9a, 0x1e, 0x7e, 0xb1, 0xe7, 0xd0, 0x30, 0x9e, 0xdb, 0xff, 0xf2, 0xdc, 0x40,
	0xe8, 0x4b, 0x68, 0x9a, 0x45, 0xbc, 0xba, 0xc1, 0x1e, 0xed, 0x7e, 0x6b, 0xac, 0x00, 0x51, 0x0f,
	0x5a, 0xcb, 0xc2, 0x6c, 0xaf, 0x61, 0xce, 0xb2, 0x09, 0xfd, 0x00, 0x0e, 0x77, 0x2d, 0xfd, 0x70,
	0xed, 0x47, 0xe0, 0xa4, 0x19, 0x26, 0x28, 0x8c, 0xfa, 0x3d, 0x56, 0x46, 0x27, 0x6f, 0x00, 0x7e,
	0x8b, 0xa7, 0xfb, 0xd0, 0x5e, 0xa4, 0x09, 0x06, 0x79, 0x40, 0x6a, 0xb4, 0x0b, 0x30, 0xe1, 0x52,
	0x30, 0xe4, 0x02, 0x25, 0xb1, 0xa8, 0x0b, 0xad, 0x09, 0xcf, 0xf4, 0x4a, 0x22, 0xb1, 0x4f, 0xbe,
	0x80, 0x5b, 0x11, 0x95, 0x63, 0x4d, 0xab, 0x89, 0x48, 0x8d, 0x02, 0x38, 0x67, 0xa1, 0x8e, 0x6f,
	0x91, 0x58, 0xf4, 0x00, 0xf6, 0x2f, 0x74, 0x9a, 0x65, 0x28, 0xc6, 0xeb, 0x2b, 0x85, 0x92, 0xd8,
	0x79, 0xf9, 0x23, 0x5f, 0x29, 0x14, 0xa4, 0x9e, 0xd3, 0x96, 0x65, 0xd2, 0xa0, 0x6d, 0x68, 0xbe,
	0x95, 0x32, 0x95, 0xa4, 0x39, 0xfe, 0x0f, 0x5a, 0xf8, 0x75, 0x18, 0xc9, 0x2c, 0xfc, 0x66, 0xd7,
	0xd9, 0xe5, 0xec, 0xda, 0x31, 0x7f, 0x9e, 0x57, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc8, 0xf7,
	0x01, 0xbc, 0xb5, 0x04, 0x00, 0x00,
}
