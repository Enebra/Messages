// Code generated by protoc-gen-go.
// source: services/database_service.proto
// DO NOT EDIT!

/*
Package Services is a generated protocol buffer package.

It is generated from these files:
	services/database_service.proto

It has these top-level messages:
	GetResponse
	GetRequest
	CommitRequest
	CommitResponse
	MutationResult
	Mutation
	Entity
	Entities
*/
package Services

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import DataTypes5 "datatypes"
import DataTypes1 "datatypes"
import DataTypes4 "datatypes"
import DataTypes7 "datatypes"
import DataTypes8 "datatypes"
import DataTypes "datatypes"
import Services1 "services"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetResponse struct {
	Items *Entities `protobuf:"bytes,1,opt,name=items" json:"items,omitempty"`
	Count int64     `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetResponse) GetItems() *Entities {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetRequest struct {
	// Types that are valid to be assigned to RequestType:
	//	*GetRequest_PersonRequest
	//	*GetRequest_CardRequest
	//	*GetRequest_LocationRequest
	//	*GetRequest_VisitRecordRequest
	RequestType isGetRequest_RequestType `protobuf_oneof:"request_type"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isGetRequest_RequestType interface {
	isGetRequest_RequestType()
}

type GetRequest_PersonRequest struct {
	PersonRequest *Services1.GetPersonRequest `protobuf:"bytes,1,opt,name=person_request,json=personRequest,oneof"`
}
type GetRequest_CardRequest struct {
	CardRequest *Services1.GetCardRequest `protobuf:"bytes,2,opt,name=card_request,json=cardRequest,oneof"`
}
type GetRequest_LocationRequest struct {
	LocationRequest *Services1.GetLocationRequest `protobuf:"bytes,3,opt,name=location_request,json=locationRequest,oneof"`
}
type GetRequest_VisitRecordRequest struct {
	VisitRecordRequest *Services1.GetVisitRecordRequest `protobuf:"bytes,4,opt,name=visit_record_request,json=visitRecordRequest,oneof"`
}

func (*GetRequest_PersonRequest) isGetRequest_RequestType()      {}
func (*GetRequest_CardRequest) isGetRequest_RequestType()        {}
func (*GetRequest_LocationRequest) isGetRequest_RequestType()    {}
func (*GetRequest_VisitRecordRequest) isGetRequest_RequestType() {}

func (m *GetRequest) GetRequestType() isGetRequest_RequestType {
	if m != nil {
		return m.RequestType
	}
	return nil
}

func (m *GetRequest) GetPersonRequest() *Services1.GetPersonRequest {
	if x, ok := m.GetRequestType().(*GetRequest_PersonRequest); ok {
		return x.PersonRequest
	}
	return nil
}

func (m *GetRequest) GetCardRequest() *Services1.GetCardRequest {
	if x, ok := m.GetRequestType().(*GetRequest_CardRequest); ok {
		return x.CardRequest
	}
	return nil
}

func (m *GetRequest) GetLocationRequest() *Services1.GetLocationRequest {
	if x, ok := m.GetRequestType().(*GetRequest_LocationRequest); ok {
		return x.LocationRequest
	}
	return nil
}

func (m *GetRequest) GetVisitRecordRequest() *Services1.GetVisitRecordRequest {
	if x, ok := m.GetRequestType().(*GetRequest_VisitRecordRequest); ok {
		return x.VisitRecordRequest
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetRequest_OneofMarshaler, _GetRequest_OneofUnmarshaler, _GetRequest_OneofSizer, []interface{}{
		(*GetRequest_PersonRequest)(nil),
		(*GetRequest_CardRequest)(nil),
		(*GetRequest_LocationRequest)(nil),
		(*GetRequest_VisitRecordRequest)(nil),
	}
}

func _GetRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetRequest)
	// request_type
	switch x := m.RequestType.(type) {
	case *GetRequest_PersonRequest:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PersonRequest); err != nil {
			return err
		}
	case *GetRequest_CardRequest:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CardRequest); err != nil {
			return err
		}
	case *GetRequest_LocationRequest:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LocationRequest); err != nil {
			return err
		}
	case *GetRequest_VisitRecordRequest:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VisitRecordRequest); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetRequest.RequestType has unexpected type %T", x)
	}
	return nil
}

func _GetRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetRequest)
	switch tag {
	case 1: // request_type.person_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Services1.GetPersonRequest)
		err := b.DecodeMessage(msg)
		m.RequestType = &GetRequest_PersonRequest{msg}
		return true, err
	case 2: // request_type.card_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Services1.GetCardRequest)
		err := b.DecodeMessage(msg)
		m.RequestType = &GetRequest_CardRequest{msg}
		return true, err
	case 3: // request_type.location_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Services1.GetLocationRequest)
		err := b.DecodeMessage(msg)
		m.RequestType = &GetRequest_LocationRequest{msg}
		return true, err
	case 4: // request_type.visit_record_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Services1.GetVisitRecordRequest)
		err := b.DecodeMessage(msg)
		m.RequestType = &GetRequest_VisitRecordRequest{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GetRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetRequest)
	// request_type
	switch x := m.RequestType.(type) {
	case *GetRequest_PersonRequest:
		s := proto.Size(x.PersonRequest)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetRequest_CardRequest:
		s := proto.Size(x.CardRequest)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetRequest_LocationRequest:
		s := proto.Size(x.LocationRequest)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetRequest_VisitRecordRequest:
		s := proto.Size(x.VisitRecordRequest)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CommitRequest struct {
	Mutations []*Mutation `protobuf:"bytes,1,rep,name=mutations" json:"mutations,omitempty"`
}

func (m *CommitRequest) Reset()                    { *m = CommitRequest{} }
func (m *CommitRequest) String() string            { return proto.CompactTextString(m) }
func (*CommitRequest) ProtoMessage()               {}
func (*CommitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CommitRequest) GetMutations() []*Mutation {
	if m != nil {
		return m.Mutations
	}
	return nil
}

type CommitResponse struct {
	MutationResults []*MutationResult `protobuf:"bytes,1,rep,name=mutation_results,json=mutationResults" json:"mutation_results,omitempty"`
}

func (m *CommitResponse) Reset()                    { *m = CommitResponse{} }
func (m *CommitResponse) String() string            { return proto.CompactTextString(m) }
func (*CommitResponse) ProtoMessage()               {}
func (*CommitResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CommitResponse) GetMutationResults() []*MutationResult {
	if m != nil {
		return m.MutationResults
	}
	return nil
}

type MutationResult struct {
	Key   *DataTypes.Key `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Error string         `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *MutationResult) Reset()                    { *m = MutationResult{} }
func (m *MutationResult) String() string            { return proto.CompactTextString(m) }
func (*MutationResult) ProtoMessage()               {}
func (*MutationResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MutationResult) GetKey() *DataTypes.Key {
	if m != nil {
		return m.Key
	}
	return nil
}

type Mutation struct {
	// Types that are valid to be assigned to Operation:
	//	*Mutation_Insert
	//	*Mutation_Update
	//	*Mutation_Delete
	Operation isMutation_Operation `protobuf_oneof:"operation"`
}

func (m *Mutation) Reset()                    { *m = Mutation{} }
func (m *Mutation) String() string            { return proto.CompactTextString(m) }
func (*Mutation) ProtoMessage()               {}
func (*Mutation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type isMutation_Operation interface {
	isMutation_Operation()
}

type Mutation_Insert struct {
	Insert *Entity `protobuf:"bytes,1,opt,name=insert,oneof"`
}
type Mutation_Update struct {
	Update *Entity `protobuf:"bytes,2,opt,name=update,oneof"`
}
type Mutation_Delete struct {
	Delete *DataTypes.Key `protobuf:"bytes,3,opt,name=delete,oneof"`
}

func (*Mutation_Insert) isMutation_Operation() {}
func (*Mutation_Update) isMutation_Operation() {}
func (*Mutation_Delete) isMutation_Operation() {}

func (m *Mutation) GetOperation() isMutation_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *Mutation) GetInsert() *Entity {
	if x, ok := m.GetOperation().(*Mutation_Insert); ok {
		return x.Insert
	}
	return nil
}

func (m *Mutation) GetUpdate() *Entity {
	if x, ok := m.GetOperation().(*Mutation_Update); ok {
		return x.Update
	}
	return nil
}

func (m *Mutation) GetDelete() *DataTypes.Key {
	if x, ok := m.GetOperation().(*Mutation_Delete); ok {
		return x.Delete
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Mutation) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Mutation_OneofMarshaler, _Mutation_OneofUnmarshaler, _Mutation_OneofSizer, []interface{}{
		(*Mutation_Insert)(nil),
		(*Mutation_Update)(nil),
		(*Mutation_Delete)(nil),
	}
}

func _Mutation_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Mutation)
	// operation
	switch x := m.Operation.(type) {
	case *Mutation_Insert:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Insert); err != nil {
			return err
		}
	case *Mutation_Update:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Update); err != nil {
			return err
		}
	case *Mutation_Delete:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Delete); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Mutation.Operation has unexpected type %T", x)
	}
	return nil
}

func _Mutation_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Mutation)
	switch tag {
	case 1: // operation.insert
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Entity)
		err := b.DecodeMessage(msg)
		m.Operation = &Mutation_Insert{msg}
		return true, err
	case 2: // operation.update
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Entity)
		err := b.DecodeMessage(msg)
		m.Operation = &Mutation_Update{msg}
		return true, err
	case 3: // operation.delete
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DataTypes.Key)
		err := b.DecodeMessage(msg)
		m.Operation = &Mutation_Delete{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Mutation_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Mutation)
	// operation
	switch x := m.Operation.(type) {
	case *Mutation_Insert:
		s := proto.Size(x.Insert)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Mutation_Update:
		s := proto.Size(x.Update)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Mutation_Delete:
		s := proto.Size(x.Delete)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Entity struct {
	// Types that are valid to be assigned to ValueType:
	//	*Entity_Card
	//	*Entity_Person
	//	*Entity_VisitRecord
	//	*Entity_Location
	//	*Entity_Photo
	ValueType isEntity_ValueType `protobuf_oneof:"value_type"`
}

func (m *Entity) Reset()                    { *m = Entity{} }
func (m *Entity) String() string            { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()               {}
func (*Entity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type isEntity_ValueType interface {
	isEntity_ValueType()
}

type Entity_Card struct {
	Card *DataTypes1.Card `protobuf:"bytes,1,opt,name=card,oneof"`
}
type Entity_Person struct {
	Person *DataTypes5.Person `protobuf:"bytes,2,opt,name=person,oneof"`
}
type Entity_VisitRecord struct {
	VisitRecord *DataTypes8.VisitRecord `protobuf:"bytes,3,opt,name=visit_record,json=visitRecord,oneof"`
}
type Entity_Location struct {
	Location *DataTypes7.Location `protobuf:"bytes,4,opt,name=location,oneof"`
}
type Entity_Photo struct {
	Photo *DataTypes4.Photo `protobuf:"bytes,5,opt,name=Photo,json=photo,oneof"`
}

func (*Entity_Card) isEntity_ValueType()        {}
func (*Entity_Person) isEntity_ValueType()      {}
func (*Entity_VisitRecord) isEntity_ValueType() {}
func (*Entity_Location) isEntity_ValueType()    {}
func (*Entity_Photo) isEntity_ValueType()       {}

func (m *Entity) GetValueType() isEntity_ValueType {
	if m != nil {
		return m.ValueType
	}
	return nil
}

func (m *Entity) GetCard() *DataTypes1.Card {
	if x, ok := m.GetValueType().(*Entity_Card); ok {
		return x.Card
	}
	return nil
}

func (m *Entity) GetPerson() *DataTypes5.Person {
	if x, ok := m.GetValueType().(*Entity_Person); ok {
		return x.Person
	}
	return nil
}

func (m *Entity) GetVisitRecord() *DataTypes8.VisitRecord {
	if x, ok := m.GetValueType().(*Entity_VisitRecord); ok {
		return x.VisitRecord
	}
	return nil
}

func (m *Entity) GetLocation() *DataTypes7.Location {
	if x, ok := m.GetValueType().(*Entity_Location); ok {
		return x.Location
	}
	return nil
}

func (m *Entity) GetPhoto() *DataTypes4.Photo {
	if x, ok := m.GetValueType().(*Entity_Photo); ok {
		return x.Photo
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Entity) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Entity_OneofMarshaler, _Entity_OneofUnmarshaler, _Entity_OneofSizer, []interface{}{
		(*Entity_Card)(nil),
		(*Entity_Person)(nil),
		(*Entity_VisitRecord)(nil),
		(*Entity_Location)(nil),
		(*Entity_Photo)(nil),
	}
}

func _Entity_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Entity)
	// value_type
	switch x := m.ValueType.(type) {
	case *Entity_Card:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Card); err != nil {
			return err
		}
	case *Entity_Person:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Person); err != nil {
			return err
		}
	case *Entity_VisitRecord:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VisitRecord); err != nil {
			return err
		}
	case *Entity_Location:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Location); err != nil {
			return err
		}
	case *Entity_Photo:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Photo); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Entity.ValueType has unexpected type %T", x)
	}
	return nil
}

func _Entity_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Entity)
	switch tag {
	case 1: // value_type.card
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DataTypes1.Card)
		err := b.DecodeMessage(msg)
		m.ValueType = &Entity_Card{msg}
		return true, err
	case 2: // value_type.person
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DataTypes5.Person)
		err := b.DecodeMessage(msg)
		m.ValueType = &Entity_Person{msg}
		return true, err
	case 3: // value_type.visit_record
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DataTypes8.VisitRecord)
		err := b.DecodeMessage(msg)
		m.ValueType = &Entity_VisitRecord{msg}
		return true, err
	case 4: // value_type.location
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DataTypes7.Location)
		err := b.DecodeMessage(msg)
		m.ValueType = &Entity_Location{msg}
		return true, err
	case 5: // value_type.Photo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DataTypes4.Photo)
		err := b.DecodeMessage(msg)
		m.ValueType = &Entity_Photo{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Entity_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Entity)
	// value_type
	switch x := m.ValueType.(type) {
	case *Entity_Card:
		s := proto.Size(x.Card)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Entity_Person:
		s := proto.Size(x.Person)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Entity_VisitRecord:
		s := proto.Size(x.VisitRecord)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Entity_Location:
		s := proto.Size(x.Location)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Entity_Photo:
		s := proto.Size(x.Photo)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Entities struct {
	Items []*Entity `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *Entities) Reset()                    { *m = Entities{} }
func (m *Entities) String() string            { return proto.CompactTextString(m) }
func (*Entities) ProtoMessage()               {}
func (*Entities) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Entities) GetItems() []*Entity {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*GetResponse)(nil), "Services.GetResponse")
	proto.RegisterType((*GetRequest)(nil), "Services.GetRequest")
	proto.RegisterType((*CommitRequest)(nil), "Services.CommitRequest")
	proto.RegisterType((*CommitResponse)(nil), "Services.CommitResponse")
	proto.RegisterType((*MutationResult)(nil), "Services.MutationResult")
	proto.RegisterType((*Mutation)(nil), "Services.Mutation")
	proto.RegisterType((*Entity)(nil), "Services.Entity")
	proto.RegisterType((*Entities)(nil), "Services.Entities")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for DatabaseService service

type DatabaseServiceClient interface {
	Get(ctx context.Context, in *DataTypes.MessageBytes, opts ...grpc.CallOption) (*DataTypes.MessageBytes, error)
	Commit(ctx context.Context, in *DataTypes.MessageBytes, opts ...grpc.CallOption) (*DataTypes.MessageBytes, error)
}

type databaseServiceClient struct {
	cc *grpc.ClientConn
}

func NewDatabaseServiceClient(cc *grpc.ClientConn) DatabaseServiceClient {
	return &databaseServiceClient{cc}
}

func (c *databaseServiceClient) Get(ctx context.Context, in *DataTypes.MessageBytes, opts ...grpc.CallOption) (*DataTypes.MessageBytes, error) {
	out := new(DataTypes.MessageBytes)
	err := grpc.Invoke(ctx, "/Services.DatabaseService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseServiceClient) Commit(ctx context.Context, in *DataTypes.MessageBytes, opts ...grpc.CallOption) (*DataTypes.MessageBytes, error) {
	out := new(DataTypes.MessageBytes)
	err := grpc.Invoke(ctx, "/Services.DatabaseService/Commit", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DatabaseService service

type DatabaseServiceServer interface {
	Get(context.Context, *DataTypes.MessageBytes) (*DataTypes.MessageBytes, error)
	Commit(context.Context, *DataTypes.MessageBytes) (*DataTypes.MessageBytes, error)
}

func RegisterDatabaseServiceServer(s *grpc.Server, srv DatabaseServiceServer) {
	s.RegisterService(&_DatabaseService_serviceDesc, srv)
}

func _DatabaseService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataTypes.MessageBytes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Services.DatabaseService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseServiceServer).Get(ctx, req.(*DataTypes.MessageBytes))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseService_Commit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataTypes.MessageBytes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseServiceServer).Commit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Services.DatabaseService/Commit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseServiceServer).Commit(ctx, req.(*DataTypes.MessageBytes))
	}
	return interceptor(ctx, in, info, handler)
}

var _DatabaseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Services.DatabaseService",
	HandlerType: (*DatabaseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _DatabaseService_Get_Handler,
		},
		{
			MethodName: "Commit",
			Handler:    _DatabaseService_Commit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("services/database_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 647 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x94, 0x4f, 0x6f, 0xd3, 0x4c,
	0x10, 0xc6, 0x93, 0xb8, 0xc9, 0x9b, 0x4e, 0xd2, 0xa4, 0xef, 0x52, 0x4a, 0x14, 0x55, 0x6a, 0x65,
	0x09, 0x14, 0x81, 0xe4, 0x42, 0x39, 0x21, 0xe0, 0x40, 0x52, 0x14, 0x23, 0xa8, 0x54, 0x6d, 0x0b,
	0xd7, 0xc8, 0x75, 0x46, 0xc5, 0x22, 0xc9, 0xba, 0xbb, 0xeb, 0x88, 0xdc, 0x39, 0xf1, 0x0d, 0xb8,
	0xf2, 0x49, 0xf8, 0x68, 0x68, 0xff, 0xd8, 0x5e, 0x97, 0x72, 0xe1, 0x96, 0x9d, 0x79, 0xf6, 0xb7,
	0x93, 0x99, 0xc7, 0x03, 0x87, 0x02, 0xf9, 0x3a, 0x89, 0x51, 0x1c, 0xcf, 0x23, 0x19, 0x5d, 0x45,
	0x02, 0x67, 0x36, 0x12, 0xa4, 0x9c, 0x49, 0x46, 0xda, 0x17, 0x56, 0x30, 0xdc, 0x57, 0x0a, 0xb9,
	0x49, 0x51, 0x1c, 0xa7, 0xc8, 0x05, 0x5b, 0x19, 0xc5, 0x70, 0xaf, 0x8c, 0xc7, 0x11, 0x9f, 0xdb,
	0xe8, 0x7d, 0x47, 0xfd, 0x99, 0x49, 0x66, 0xc3, 0x83, 0x32, 0xbc, 0x60, 0x71, 0x24, 0x93, 0x02,
	0x73, 0x50, 0x66, 0xd6, 0x89, 0x48, 0xe4, 0x8c, 0x63, 0xcc, 0x0a, 0x9c, 0xf3, 0x88, 0xfa, 0x65,
	0xa3, 0xfb, 0x45, 0xf5, 0x37, 0x19, 0xf2, 0x04, 0x85, 0x89, 0xfb, 0x67, 0xd0, 0x99, 0xa2, 0xa4,
	0x28, 0x52, 0xb6, 0x12, 0x48, 0x46, 0xd0, 0x4c, 0x24, 0x2e, 0xc5, 0xa0, 0x7e, 0x54, 0x1f, 0x75,
	0x4e, 0x48, 0x90, 0xff, 0xa7, 0xe0, 0xed, 0x4a, 0x26, 0x32, 0x41, 0x41, 0x8d, 0x80, 0xec, 0x41,
	0x33, 0x66, 0xd9, 0x4a, 0x0e, 0x1a, 0x47, 0xf5, 0x91, 0x47, 0xcd, 0xc1, 0xff, 0xd5, 0x00, 0xd0,
	0xbc, 0x9b, 0x0c, 0x85, 0x24, 0x13, 0xe8, 0x99, 0x06, 0xcc, 0xb8, 0x89, 0x58, 0xee, 0xb0, 0xe4,
	0x4e, 0x51, 0x9e, 0x6b, 0x89, 0xbd, 0x13, 0xd6, 0xe8, 0x4e, 0xea, 0x06, 0xc8, 0x6b, 0xe8, 0xaa,
	0x6e, 0x15, 0x88, 0x86, 0x46, 0x0c, 0x2a, 0x88, 0x49, 0xc4, 0xe7, 0x25, 0xa0, 0x13, 0x97, 0x47,
	0xf2, 0x0e, 0x76, 0xf3, 0xfe, 0x15, 0x08, 0x4f, 0x23, 0x0e, 0x2a, 0x88, 0x0f, 0x56, 0x54, 0x62,
	0xfa, 0x8b, 0x6a, 0x88, 0x5c, 0xc0, 0x9e, 0xdb, 0xf0, 0x02, 0xb7, 0xa5, 0x71, 0x87, 0x15, 0xdc,
	0x27, 0x25, 0xa4, 0x5a, 0x57, 0x12, 0xc9, 0xfa, 0x8f, 0xe8, 0xb8, 0x07, 0x5d, 0xcb, 0x99, 0xa9,
	0xa9, 0xf9, 0x6f, 0x60, 0x67, 0xc2, 0x96, 0xcb, 0xa4, 0x68, 0xe2, 0x53, 0xd8, 0x5e, 0x66, 0x52,
	0x17, 0xa2, 0xe6, 0xe2, 0x55, 0xe7, 0x72, 0x66, 0x53, 0xb4, 0x14, 0xf9, 0x1f, 0xa1, 0x97, 0x23,
	0xec, 0x5c, 0x27, 0xb0, 0x9b, 0xa7, 0x67, 0x1c, 0x45, 0xb6, 0x90, 0x39, 0x6a, 0x70, 0x07, 0x4a,
	0x0b, 0x68, 0x7f, 0x59, 0x39, 0x0b, 0x3f, 0x84, 0x5e, 0x55, 0x42, 0x8e, 0xc0, 0xfb, 0x82, 0x1b,
	0x3b, 0xd4, 0x5e, 0x70, 0x1a, 0xc9, 0xe8, 0x52, 0x39, 0x2f, 0x78, 0x8f, 0x1b, 0xaa, 0x52, 0xca,
	0x26, 0xc8, 0x39, 0xe3, 0x7a, 0x6a, 0xdb, 0xd4, 0x1c, 0xfc, 0x1f, 0x75, 0x68, 0xe7, 0x28, 0xf2,
	0x18, 0x5a, 0xc9, 0x4a, 0x20, 0xcf, 0xcd, 0xb1, 0x7b, 0xcb, 0x74, 0x9b, 0xb0, 0x46, 0xad, 0x42,
	0x69, 0xb3, 0x74, 0x1e, 0x49, 0xb4, 0x2e, 0xb8, 0x53, 0x6b, 0x14, 0x64, 0x04, 0xad, 0x39, 0x2e,
	0x50, 0xa2, 0x1d, 0xf7, 0xad, 0xfa, 0x94, 0xd2, 0xe4, 0xc7, 0x1d, 0xd8, 0x66, 0x29, 0x72, 0x5d,
	0x8e, 0xff, 0xad, 0x01, 0x2d, 0xc3, 0x22, 0x0f, 0x61, 0x4b, 0x39, 0xc9, 0xd6, 0xd5, 0x77, 0xee,
	0x2b, 0xbf, 0x85, 0x35, 0xaa, 0xd3, 0xe4, 0x09, 0xb4, 0x8c, 0x63, 0x6d, 0x51, 0xff, 0x3b, 0x42,
	0xe3, 0x6d, 0xf5, 0x96, 0x91, 0x90, 0x97, 0xd0, 0x75, 0x3d, 0x64, 0x6b, 0xdb, 0x77, 0xae, 0x38,
	0xce, 0x51, 0x5e, 0x76, 0x2c, 0x43, 0x9e, 0x41, 0x3b, 0xf7, 0xa4, 0x35, 0xdd, 0x3d, 0xe7, 0x62,
	0xee, 0xe0, 0xb0, 0x46, 0x0b, 0x99, 0xfa, 0xa2, 0xcf, 0xd5, 0x56, 0x19, 0x34, 0x6d, 0xc3, 0x9c,
	0xda, 0x54, 0x3c, 0xac, 0xd1, 0xa6, 0x5e, 0x3b, 0xe3, 0x2e, 0xc0, 0x3a, 0x5a, 0x64, 0x68, 0x6c,
	0x78, 0x02, 0xed, 0xfc, 0x93, 0x27, 0x8f, 0xca, 0xad, 0xe0, 0xdd, 0xd5, 0x74, 0xbb, 0x13, 0x4e,
	0xbe, 0xd7, 0xa1, 0x7f, 0x6a, 0x97, 0xa3, 0x95, 0x90, 0x17, 0xe0, 0x4d, 0x51, 0x92, 0x07, 0xce,
	0xbb, 0x67, 0x28, 0x44, 0x74, 0x8d, 0xe3, 0x8d, 0x44, 0x31, 0xfc, 0x5b, 0xc2, 0xaf, 0x91, 0x57,
	0xd0, 0x32, 0x36, 0xfe, 0x97, 0xdb, 0xe3, 0x3e, 0xfc, 0x87, 0x5f, 0x83, 0x6b, 0x9e, 0xc6, 0x3f,
	0x1b, 0x1e, 0xbd, 0x9c, 0x5e, 0xb5, 0xf4, 0xc6, 0x7b, 0xfe, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xac,
	0x73, 0x00, 0xa3, 0xc9, 0x05, 0x00, 0x00,
}
