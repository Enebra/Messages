// Code generated by protoc-gen-go.
// source: datatypes/key.proto
// DO NOT EDIT!

/*
Package key is a generated protocol buffer package.

It is generated from these files:
	datatypes/key.proto

It has these top-level messages:
	Key
*/
package key

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Key struct {
	// Types that are valid to be assigned to IdType:
	//	*Key_Number
	//	*Key_Identifier
	//	*Key_Guid
	IdType isKey_IdType `protobuf_oneof:"id_type"`
}

func (m *Key) Reset()                    { *m = Key{} }
func (m *Key) String() string            { return proto.CompactTextString(m) }
func (*Key) ProtoMessage()               {}
func (*Key) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isKey_IdType interface {
	isKey_IdType()
}

type Key_Number struct {
	Number int64 `protobuf:"varint,1,opt,name=number,oneof"`
}
type Key_Identifier struct {
	Identifier string `protobuf:"bytes,2,opt,name=identifier,oneof"`
}
type Key_Guid struct {
	Guid []byte `protobuf:"bytes,3,opt,name=guid,proto3,oneof"`
}

func (*Key_Number) isKey_IdType()     {}
func (*Key_Identifier) isKey_IdType() {}
func (*Key_Guid) isKey_IdType()       {}

func (m *Key) GetIdType() isKey_IdType {
	if m != nil {
		return m.IdType
	}
	return nil
}

func (m *Key) GetNumber() int64 {
	if x, ok := m.GetIdType().(*Key_Number); ok {
		return x.Number
	}
	return 0
}

func (m *Key) GetIdentifier() string {
	if x, ok := m.GetIdType().(*Key_Identifier); ok {
		return x.Identifier
	}
	return ""
}

func (m *Key) GetGuid() []byte {
	if x, ok := m.GetIdType().(*Key_Guid); ok {
		return x.Guid
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Key) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Key_OneofMarshaler, _Key_OneofUnmarshaler, _Key_OneofSizer, []interface{}{
		(*Key_Number)(nil),
		(*Key_Identifier)(nil),
		(*Key_Guid)(nil),
	}
}

func _Key_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Key)
	// id_type
	switch x := m.IdType.(type) {
	case *Key_Number:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Number))
	case *Key_Identifier:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Identifier)
	case *Key_Guid:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Guid)
	case nil:
	default:
		return fmt.Errorf("Key.IdType has unexpected type %T", x)
	}
	return nil
}

func _Key_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Key)
	switch tag {
	case 1: // id_type.number
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.IdType = &Key_Number{int64(x)}
		return true, err
	case 2: // id_type.identifier
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.IdType = &Key_Identifier{x}
		return true, err
	case 3: // id_type.guid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.IdType = &Key_Guid{x}
		return true, err
	default:
		return false, nil
	}
}

func _Key_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Key)
	// id_type
	switch x := m.IdType.(type) {
	case *Key_Number:
		n += proto.SizeVarint(1<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Number))
	case *Key_Identifier:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Identifier)))
		n += len(x.Identifier)
	case *Key_Guid:
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Guid)))
		n += len(x.Guid)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Key)(nil), "DataTypes.Key")
}

func init() { proto.RegisterFile("datatypes/key.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x8e, 0x31, 0x4b, 0x04, 0x31,
	0x10, 0x46, 0x37, 0x17, 0xb9, 0x63, 0x07, 0xab, 0x68, 0x91, 0x32, 0x58, 0x6d, 0xb5, 0x29, 0x2c,
	0xec, 0x4f, 0xc5, 0x80, 0x5d, 0xbc, 0xca, 0x46, 0x92, 0xcd, 0xb8, 0x0e, 0x72, 0xc9, 0x32, 0x66,
	0xc5, 0xfd, 0x3b, 0xfe, 0x52, 0xd9, 0xc3, 0x42, 0xcb, 0xf7, 0xf8, 0xe0, 0x7b, 0x70, 0x91, 0x42,
	0x0d, 0x75, 0x99, 0xf0, 0xc3, 0xbe, 0xe3, 0xd2, 0x4f, 0x5c, 0x6a, 0x51, 0xed, 0x5d, 0xa8, 0xe1,
	0xb0, 0xca, 0xab, 0x08, 0xf2, 0x11, 0x17, 0xa5, 0x61, 0x9b, 0xe7, 0x63, 0x44, 0xd6, 0xc2, 0x88,
	0x4e, 0xba, 0xc6, 0xff, 0xb2, 0x32, 0x00, 0x94, 0x30, 0x57, 0x7a, 0x25, 0x64, 0xbd, 0x31, 0xa2,
	0x6b, 0x5d, 0xe3, 0xff, 0x38, 0x75, 0x09, 0x67, 0xe3, 0x4c, 0x49, 0x4b, 0x23, 0xba, 0x73, 0xd7,
	0xf8, 0x13, 0xed, 0x5b, 0xd8, 0x51, 0x7a, 0x59, 0x9f, 0xf7, 0x0e, 0x76, 0xf8, 0xd5, 0x8f, 0x3c,
	0x0d, 0xcf, 0x37, 0x23, 0xd5, 0xb7, 0x39, 0xf6, 0x43, 0x39, 0xda, 0xfb, 0x8c, 0x91, 0x83, 0x7d,
	0x42, 0xfe, 0xa4, 0x01, 0x6f, 0x4b, 0xe1, 0x44, 0x39, 0xd4, 0xc2, 0x76, 0x9d, 0xda, 0x7f, 0xe1,
	0xdf, 0x1b, 0xe9, 0x0f, 0x0f, 0x71, 0x7b, 0xea, 0xbf, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0x35,
	0xda, 0x33, 0xc4, 0xd6, 0x00, 0x00, 0x00,
}
