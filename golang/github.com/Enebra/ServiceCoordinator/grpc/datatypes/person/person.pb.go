// Code generated by protoc-gen-go.
// source: datatypes/person.proto
// DO NOT EDIT!

/*
Package person is a generated protocol buffer package.

It is generated from these files:
	datatypes/person.proto

It has these top-level messages:
	Person
*/
package person

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import DataTypes1 "github.com/Enebra/ServiceCoordinator/grpc/datatypes/card"
import DataTypes4 "github.com/Enebra/ServiceCoordinator/grpc/datatypes/photo"
import DataTypes "github.com/Enebra/ServiceCoordinator/grpc/datatypes/key"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Gender int32

const (
	Gender_Gender_Unspecified Gender = 0
	Gender_Male               Gender = 1
	Gender_Female             Gender = 2
)

var Gender_name = map[int32]string{
	0: "Gender_Unspecified",
	1: "Male",
	2: "Female",
}
var Gender_value = map[string]int32{
	"Gender_Unspecified": 0,
	"Male":               1,
	"Female":             2,
}

func (x Gender) String() string {
	return proto.EnumName(Gender_name, int32(x))
}
func (Gender) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Rights int32

const (
	Rights_Rights_Unspecified Rights = 0
	Rights_Custom             Rights = 1
	Rights_Operator           Rights = 2
	Rights_Manager            Rights = 3
	Rights_Supervisor         Rights = 4
)

var Rights_name = map[int32]string{
	0: "Rights_Unspecified",
	1: "Custom",
	2: "Operator",
	3: "Manager",
	4: "Supervisor",
}
var Rights_value = map[string]int32{
	"Rights_Unspecified": 0,
	"Custom":             1,
	"Operator":           2,
	"Manager":            3,
	"Supervisor":         4,
}

func (x Rights) String() string {
	return proto.EnumName(Rights_name, int32(x))
}
func (Rights) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Person struct {
	Id        *DataTypes.Key      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	FirstName string              `protobuf:"bytes,2,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName  string              `protobuf:"bytes,3,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Photos    []*DataTypes4.Photo `protobuf:"bytes,4,rep,name=photos" json:"photos,omitempty"`
	Cards     []*DataTypes1.Card  `protobuf:"bytes,5,rep,name=cards" json:"cards,omitempty"`
}

func (m *Person) Reset()                    { *m = Person{} }
func (m *Person) String() string            { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()               {}
func (*Person) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Person) GetId() *DataTypes.Key {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Person) GetPhotos() []*DataTypes4.Photo {
	if m != nil {
		return m.Photos
	}
	return nil
}

func (m *Person) GetCards() []*DataTypes1.Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

func init() {
	proto.RegisterType((*Person)(nil), "DataTypes.Person")
	proto.RegisterEnum("DataTypes.Gender", Gender_name, Gender_value)
	proto.RegisterEnum("DataTypes.Rights", Rights_name, Rights_value)
}

func init() { proto.RegisterFile("datatypes/person.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 362 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x91, 0xd1, 0x8a, 0xda, 0x40,
	0x14, 0x86, 0x9b, 0x44, 0xa3, 0x39, 0x16, 0x1b, 0xa6, 0xad, 0x04, 0x4b, 0x8b, 0x14, 0x0a, 0xc1,
	0x8b, 0x04, 0x2c, 0xf4, 0xa2, 0x97, 0xb5, 0xad, 0x17, 0xe2, 0xae, 0x44, 0x97, 0x85, 0xbd, 0x91,
	0x31, 0x73, 0x8c, 0xc3, 0x9a, 0x4c, 0x98, 0x19, 0x97, 0xf5, 0x75, 0xf6, 0x1d, 0xf6, 0xfd, 0x96,
	0x49, 0xdc, 0x55, 0xbc, 0x3b, 0xfc, 0xdf, 0x77, 0xfe, 0x64, 0x38, 0xd0, 0x63, 0x54, 0x53, 0x7d,
	0x28, 0x51, 0xc5, 0x25, 0x4a, 0x25, 0x8a, 0xa8, 0x94, 0x42, 0x0b, 0xe2, 0xfd, 0xa5, 0x9a, 0x2e,
	0x4d, 0xde, 0xff, 0x74, 0x52, 0x52, 0x2a, 0x59, 0x2d, 0xf4, 0x3f, 0x9f, 0x2d, 0x6e, 0x85, 0x16,
	0xc7, 0xf8, 0xe3, 0x29, 0xbe, 0xc7, 0x43, 0x1d, 0x7e, 0x7f, 0xb6, 0xc0, 0x9d, 0x57, 0xed, 0xe4,
	0x1b, 0xd8, 0x9c, 0x05, 0xd6, 0xc0, 0x0a, 0x3b, 0xa3, 0x6e, 0xf4, 0xf6, 0x91, 0x68, 0x8a, 0x87,
	0xc4, 0xe6, 0x8c, 0x7c, 0x05, 0xd8, 0x70, 0xa9, 0xf4, 0xaa, 0xa0, 0x39, 0x06, 0xf6, 0xc0, 0x0a,
	0xbd, 0xc4, 0xab, 0x92, 0x2b, 0x9a, 0x23, 0xf9, 0x02, 0xde, 0x8e, 0xbe, 0x52, 0xa7, 0xa2, 0x6d,
	0x13, 0x54, 0x30, 0x04, 0xb7, 0xfa, 0x15, 0x15, 0x34, 0x06, 0x4e, 0xd8, 0x19, 0xf9, 0x67, 0xfd,
	0x73, 0x03, 0x92, 0x23, 0x27, 0x3f, 0xa0, 0x69, 0x9e, 0xa2, 0x82, 0x66, 0x25, 0x7e, 0x38, 0x13,
	0xc7, 0x54, 0xb2, 0xa4, 0xa6, 0xc3, 0x5f, 0xe0, 0x4e, 0xb0, 0x60, 0x28, 0x49, 0x0f, 0x48, 0x3d,
	0xad, 0x6e, 0x0a, 0x55, 0x62, 0xca, 0x37, 0x1c, 0x99, 0xff, 0x8e, 0xb4, 0xa1, 0x31, 0xa3, 0x3b,
	0xf4, 0x2d, 0x02, 0xe0, 0xfe, 0xc7, 0xdc, 0xcc, 0xf6, 0xf0, 0x16, 0xdc, 0x84, 0x67, 0x5b, 0xad,
	0xcc, 0x5e, 0x3d, 0x5d, 0xec, 0x01, 0xb8, 0xe3, 0xbd, 0xd2, 0x22, 0xf7, 0x2d, 0xf2, 0x1e, 0xda,
	0xd7, 0x25, 0x4a, 0xaa, 0x85, 0xf4, 0x6d, 0xd2, 0x81, 0xd6, 0x8c, 0x16, 0x34, 0x43, 0xe9, 0x3b,
	0xa4, 0x0b, 0xb0, 0xd8, 0x97, 0x28, 0x1f, 0xb8, 0x12, 0xd2, 0x6f, 0xfc, 0x99, 0x42, 0x0b, 0x1f,
	0xa3, 0x4c, 0x96, 0xe9, 0xdd, 0xef, 0x8c, 0xeb, 0xed, 0x7e, 0x1d, 0xa5, 0x22, 0x8f, 0xff, 0x15,
	0xb8, 0x96, 0x34, 0x5e, 0x18, 0x31, 0xc5, 0xb1, 0x10, 0x92, 0xf1, 0xc2, 0xf4, 0xc5, 0x46, 0x8d,
	0x2f, 0x4f, 0xfc, 0x64, 0x3b, 0xc9, 0x72, 0xb2, 0x76, 0xab, 0xe3, 0xfc, 0x7c, 0x09, 0x00, 0x00,
	0xff, 0xff, 0xa9, 0xfc, 0x49, 0x49, 0x03, 0x02, 0x00, 0x00,
}
