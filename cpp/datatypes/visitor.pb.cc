// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datatypes/visitor.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "datatypes/visitor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DataTypes {

namespace {

const ::google::protobuf::Descriptor* Visitor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Visitor_reflection_ = NULL;
const ::google::protobuf::Descriptor* Visitors_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Visitors_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* AccessState_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_datatypes_2fvisitor_2eproto() {
  protobuf_AddDesc_datatypes_2fvisitor_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "datatypes/visitor.proto");
  GOOGLE_CHECK(file != NULL);
  Visitor_descriptor_ = file->message_type(0);
  static const int Visitor_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Visitor, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Visitor, person_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Visitor, location_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Visitor, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Visitor, card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Visitor, state_),
  };
  Visitor_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Visitor_descriptor_,
      Visitor::default_instance_,
      Visitor_offsets_,
      -1,
      -1,
      -1,
      sizeof(Visitor),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Visitor, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Visitor, _is_default_instance_));
  Visitors_descriptor_ = file->message_type(1);
  static const int Visitors_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Visitors, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Visitors, count_),
  };
  Visitors_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Visitors_descriptor_,
      Visitors::default_instance_,
      Visitors_offsets_,
      -1,
      -1,
      -1,
      sizeof(Visitors),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Visitors, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Visitors, _is_default_instance_));
  AccessState_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_datatypes_2fvisitor_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Visitor_descriptor_, &Visitor::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Visitors_descriptor_, &Visitors::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_datatypes_2fvisitor_2eproto() {
  delete Visitor::default_instance_;
  delete Visitor_reflection_;
  delete Visitors::default_instance_;
  delete Visitors_reflection_;
}

void protobuf_AddDesc_datatypes_2fvisitor_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DataTypes::protobuf_AddDesc_datatypes_2fcard_2eproto();
  ::DataTypes::protobuf_AddDesc_datatypes_2fphoto_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027datatypes/visitor.proto\022\tDataTypes\032\024da"
    "tatypes/card.proto\032\025datatypes/photo.prot"
    "o\"\221\001\n\007Visitor\022\n\n\002id\030\001 \001(\003\022\021\n\tperson_id\030\002"
    " \001(\003\022\023\n\013location_id\030\003 \001(\003\022\014\n\004time\030\004 \001(\003\022"
    "\035\n\004card\030\005 \001(\0132\017.DataTypes.Card\022%\n\005state\030"
    "\006 \001(\0162\026.DataTypes.AccessState\"<\n\010Visitor"
    "s\022!\n\005items\030\001 \003(\0132\022.DataTypes.Visitor\022\r\n\005"
    "count\030\002 \001(\003*5\n\013AccessState\022\r\n\tNoneState\020"
    "\000\022\013\n\007Granted\020\001\022\n\n\006Denied\020\002B\017\n\007ex.grpc\242\002\003"
    "RTGb\006proto3", 371);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "datatypes/visitor.proto", &protobuf_RegisterTypes);
  Visitor::default_instance_ = new Visitor();
  Visitors::default_instance_ = new Visitors();
  Visitor::default_instance_->InitAsDefaultInstance();
  Visitors::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_datatypes_2fvisitor_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_datatypes_2fvisitor_2eproto {
  StaticDescriptorInitializer_datatypes_2fvisitor_2eproto() {
    protobuf_AddDesc_datatypes_2fvisitor_2eproto();
  }
} static_descriptor_initializer_datatypes_2fvisitor_2eproto_;
const ::google::protobuf::EnumDescriptor* AccessState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccessState_descriptor_;
}
bool AccessState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Visitor::kIdFieldNumber;
const int Visitor::kPersonIdFieldNumber;
const int Visitor::kLocationIdFieldNumber;
const int Visitor::kTimeFieldNumber;
const int Visitor::kCardFieldNumber;
const int Visitor::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Visitor::Visitor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.Visitor)
}

void Visitor::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  card_ = const_cast< ::DataTypes::Card*>(&::DataTypes::Card::default_instance());
}

Visitor::Visitor(const Visitor& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.Visitor)
}

void Visitor::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  person_id_ = GOOGLE_LONGLONG(0);
  location_id_ = GOOGLE_LONGLONG(0);
  time_ = GOOGLE_LONGLONG(0);
  card_ = NULL;
  state_ = 0;
}

Visitor::~Visitor() {
  // @@protoc_insertion_point(destructor:DataTypes.Visitor)
  SharedDtor();
}

void Visitor::SharedDtor() {
  if (this != default_instance_) {
    delete card_;
  }
}

void Visitor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Visitor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Visitor_descriptor_;
}

const Visitor& Visitor::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2fvisitor_2eproto();
  return *default_instance_;
}

Visitor* Visitor::default_instance_ = NULL;

Visitor* Visitor::New(::google::protobuf::Arena* arena) const {
  Visitor* n = new Visitor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Visitor::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.Visitor)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Visitor, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Visitor*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, time_);
  if (GetArenaNoVirtual() == NULL && card_ != NULL) delete card_;
  card_ = NULL;
  state_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool Visitor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.Visitor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_person_id;
        break;
      }

      // optional int64 person_id = 2;
      case 2: {
        if (tag == 16) {
         parse_person_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &person_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_location_id;
        break;
      }

      // optional int64 location_id = 3;
      case 3: {
        if (tag == 24) {
         parse_location_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &location_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_time;
        break;
      }

      // optional int64 time = 4;
      case 4: {
        if (tag == 32) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_card;
        break;
      }

      // optional .DataTypes.Card card = 5;
      case 5: {
        if (tag == 42) {
         parse_card:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_card()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_state;
        break;
      }

      // optional .DataTypes.AccessState state = 6;
      case 6: {
        if (tag == 48) {
         parse_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::DataTypes::AccessState >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.Visitor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.Visitor)
  return false;
#undef DO_
}

void Visitor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.Visitor)
  // optional int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional int64 person_id = 2;
  if (this->person_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->person_id(), output);
  }

  // optional int64 location_id = 3;
  if (this->location_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->location_id(), output);
  }

  // optional int64 time = 4;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->time(), output);
  }

  // optional .DataTypes.Card card = 5;
  if (this->has_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->card_, output);
  }

  // optional .DataTypes.AccessState state = 6;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->state(), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.Visitor)
}

::google::protobuf::uint8* Visitor::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.Visitor)
  // optional int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional int64 person_id = 2;
  if (this->person_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->person_id(), target);
  }

  // optional int64 location_id = 3;
  if (this->location_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->location_id(), target);
  }

  // optional int64 time = 4;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->time(), target);
  }

  // optional .DataTypes.Card card = 5;
  if (this->has_card()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->card_, target);
  }

  // optional .DataTypes.AccessState state = 6;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->state(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.Visitor)
  return target;
}

int Visitor::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.Visitor)
  int total_size = 0;

  // optional int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // optional int64 person_id = 2;
  if (this->person_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->person_id());
  }

  // optional int64 location_id = 3;
  if (this->location_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->location_id());
  }

  // optional int64 time = 4;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // optional .DataTypes.Card card = 5;
  if (this->has_card()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->card_);
  }

  // optional .DataTypes.AccessState state = 6;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Visitor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.Visitor)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Visitor* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Visitor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.Visitor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.Visitor)
    MergeFrom(*source);
  }
}

void Visitor::MergeFrom(const Visitor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.Visitor)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.person_id() != 0) {
    set_person_id(from.person_id());
  }
  if (from.location_id() != 0) {
    set_location_id(from.location_id());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.has_card()) {
    mutable_card()->::DataTypes::Card::MergeFrom(from.card());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void Visitor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.Visitor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Visitor::CopyFrom(const Visitor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.Visitor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Visitor::IsInitialized() const {

  return true;
}

void Visitor::Swap(Visitor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Visitor::InternalSwap(Visitor* other) {
  std::swap(id_, other->id_);
  std::swap(person_id_, other->person_id_);
  std::swap(location_id_, other->location_id_);
  std::swap(time_, other->time_);
  std::swap(card_, other->card_);
  std::swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Visitor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Visitor_descriptor_;
  metadata.reflection = Visitor_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Visitor

// optional int64 id = 1;
void Visitor::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Visitor::id() const {
  // @@protoc_insertion_point(field_get:DataTypes.Visitor.id)
  return id_;
}
 void Visitor::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.Visitor.id)
}

// optional int64 person_id = 2;
void Visitor::clear_person_id() {
  person_id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Visitor::person_id() const {
  // @@protoc_insertion_point(field_get:DataTypes.Visitor.person_id)
  return person_id_;
}
 void Visitor::set_person_id(::google::protobuf::int64 value) {
  
  person_id_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.Visitor.person_id)
}

// optional int64 location_id = 3;
void Visitor::clear_location_id() {
  location_id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Visitor::location_id() const {
  // @@protoc_insertion_point(field_get:DataTypes.Visitor.location_id)
  return location_id_;
}
 void Visitor::set_location_id(::google::protobuf::int64 value) {
  
  location_id_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.Visitor.location_id)
}

// optional int64 time = 4;
void Visitor::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Visitor::time() const {
  // @@protoc_insertion_point(field_get:DataTypes.Visitor.time)
  return time_;
}
 void Visitor::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.Visitor.time)
}

// optional .DataTypes.Card card = 5;
bool Visitor::has_card() const {
  return !_is_default_instance_ && card_ != NULL;
}
void Visitor::clear_card() {
  if (GetArenaNoVirtual() == NULL && card_ != NULL) delete card_;
  card_ = NULL;
}
const ::DataTypes::Card& Visitor::card() const {
  // @@protoc_insertion_point(field_get:DataTypes.Visitor.card)
  return card_ != NULL ? *card_ : *default_instance_->card_;
}
::DataTypes::Card* Visitor::mutable_card() {
  
  if (card_ == NULL) {
    card_ = new ::DataTypes::Card;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.Visitor.card)
  return card_;
}
::DataTypes::Card* Visitor::release_card() {
  // @@protoc_insertion_point(field_release:DataTypes.Visitor.card)
  
  ::DataTypes::Card* temp = card_;
  card_ = NULL;
  return temp;
}
void Visitor::set_allocated_card(::DataTypes::Card* card) {
  delete card_;
  card_ = card;
  if (card) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.Visitor.card)
}

// optional .DataTypes.AccessState state = 6;
void Visitor::clear_state() {
  state_ = 0;
}
 ::DataTypes::AccessState Visitor::state() const {
  // @@protoc_insertion_point(field_get:DataTypes.Visitor.state)
  return static_cast< ::DataTypes::AccessState >(state_);
}
 void Visitor::set_state(::DataTypes::AccessState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.Visitor.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Visitors::kItemsFieldNumber;
const int Visitors::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Visitors::Visitors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.Visitors)
}

void Visitors::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Visitors::Visitors(const Visitors& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.Visitors)
}

void Visitors::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  count_ = GOOGLE_LONGLONG(0);
}

Visitors::~Visitors() {
  // @@protoc_insertion_point(destructor:DataTypes.Visitors)
  SharedDtor();
}

void Visitors::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Visitors::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Visitors::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Visitors_descriptor_;
}

const Visitors& Visitors::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2fvisitor_2eproto();
  return *default_instance_;
}

Visitors* Visitors::default_instance_ = NULL;

Visitors* Visitors::New(::google::protobuf::Arena* arena) const {
  Visitors* n = new Visitors;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Visitors::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.Visitors)
  count_ = GOOGLE_LONGLONG(0);
  items_.Clear();
}

bool Visitors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.Visitors)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DataTypes.Visitor items = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_items;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional int64 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.Visitors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.Visitors)
  return false;
#undef DO_
}

void Visitors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.Visitors)
  // repeated .DataTypes.Visitor items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // optional int64 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.Visitors)
}

::google::protobuf::uint8* Visitors::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.Visitors)
  // repeated .DataTypes.Visitor items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  // optional int64 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.Visitors)
  return target;
}

int Visitors::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.Visitors)
  int total_size = 0;

  // optional int64 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  // repeated .DataTypes.Visitor items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Visitors::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.Visitors)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Visitors* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Visitors>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.Visitors)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.Visitors)
    MergeFrom(*source);
  }
}

void Visitors::MergeFrom(const Visitors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.Visitors)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  items_.MergeFrom(from.items_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Visitors::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.Visitors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Visitors::CopyFrom(const Visitors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.Visitors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Visitors::IsInitialized() const {

  return true;
}

void Visitors::Swap(Visitors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Visitors::InternalSwap(Visitors* other) {
  items_.UnsafeArenaSwap(&other->items_);
  std::swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Visitors::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Visitors_descriptor_;
  metadata.reflection = Visitors_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Visitors

// repeated .DataTypes.Visitor items = 1;
int Visitors::items_size() const {
  return items_.size();
}
void Visitors::clear_items() {
  items_.Clear();
}
const ::DataTypes::Visitor& Visitors::items(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.Visitors.items)
  return items_.Get(index);
}
::DataTypes::Visitor* Visitors::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.Visitors.items)
  return items_.Mutable(index);
}
::DataTypes::Visitor* Visitors::add_items() {
  // @@protoc_insertion_point(field_add:DataTypes.Visitors.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::DataTypes::Visitor >*
Visitors::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.Visitors.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::DataTypes::Visitor >&
Visitors::items() const {
  // @@protoc_insertion_point(field_list:DataTypes.Visitors.items)
  return items_;
}

// optional int64 count = 2;
void Visitors::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Visitors::count() const {
  // @@protoc_insertion_point(field_get:DataTypes.Visitors.count)
  return count_;
}
 void Visitors::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.Visitors.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace DataTypes

// @@protoc_insertion_point(global_scope)
