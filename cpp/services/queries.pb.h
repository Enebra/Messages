// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/queries.proto

#ifndef PROTOBUF_services_2fqueries_2eproto__INCLUDED
#define PROTOBUF_services_2fqueries_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "datatypes/visitor.pb.h"
// @@protoc_insertion_point(includes)

namespace Services {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_services_2fqueries_2eproto();
void protobuf_AssignDesc_services_2fqueries_2eproto();
void protobuf_ShutdownFile_services_2fqueries_2eproto();

class GetLocationRequest;
class GetPersonRequest;
class GetPhotoRequest;
class GetVisitorRequest;
class Page;

enum GetPhotoRequest_PhotoResponseType {
  GetPhotoRequest_PhotoResponseType_Undefined = 0,
  GetPhotoRequest_PhotoResponseType_Full = 1,
  GetPhotoRequest_PhotoResponseType_OnlyBytes = 2,
  GetPhotoRequest_PhotoResponseType_NoBytes = 3,
  GetPhotoRequest_PhotoResponseType_GetPhotoRequest_PhotoResponseType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetPhotoRequest_PhotoResponseType_GetPhotoRequest_PhotoResponseType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetPhotoRequest_PhotoResponseType_IsValid(int value);
const GetPhotoRequest_PhotoResponseType GetPhotoRequest_PhotoResponseType_PhotoResponseType_MIN = GetPhotoRequest_PhotoResponseType_Undefined;
const GetPhotoRequest_PhotoResponseType GetPhotoRequest_PhotoResponseType_PhotoResponseType_MAX = GetPhotoRequest_PhotoResponseType_NoBytes;
const int GetPhotoRequest_PhotoResponseType_PhotoResponseType_ARRAYSIZE = GetPhotoRequest_PhotoResponseType_PhotoResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetPhotoRequest_PhotoResponseType_descriptor();
inline const ::std::string& GetPhotoRequest_PhotoResponseType_Name(GetPhotoRequest_PhotoResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetPhotoRequest_PhotoResponseType_descriptor(), value);
}
inline bool GetPhotoRequest_PhotoResponseType_Parse(
    const ::std::string& name, GetPhotoRequest_PhotoResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetPhotoRequest_PhotoResponseType>(
    GetPhotoRequest_PhotoResponseType_descriptor(), name, value);
}
// ===================================================================

class GetPhotoRequest : public ::google::protobuf::Message {
 public:
  GetPhotoRequest();
  virtual ~GetPhotoRequest();

  GetPhotoRequest(const GetPhotoRequest& from);

  inline GetPhotoRequest& operator=(const GetPhotoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPhotoRequest& default_instance();

  void Swap(GetPhotoRequest* other);

  // implements Message ----------------------------------------------

  inline GetPhotoRequest* New() const { return New(NULL); }

  GetPhotoRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPhotoRequest& from);
  void MergeFrom(const GetPhotoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetPhotoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GetPhotoRequest_PhotoResponseType PhotoResponseType;
  static const PhotoResponseType Undefined =
    GetPhotoRequest_PhotoResponseType_Undefined;
  static const PhotoResponseType Full =
    GetPhotoRequest_PhotoResponseType_Full;
  static const PhotoResponseType OnlyBytes =
    GetPhotoRequest_PhotoResponseType_OnlyBytes;
  static const PhotoResponseType NoBytes =
    GetPhotoRequest_PhotoResponseType_NoBytes;
  static inline bool PhotoResponseType_IsValid(int value) {
    return GetPhotoRequest_PhotoResponseType_IsValid(value);
  }
  static const PhotoResponseType PhotoResponseType_MIN =
    GetPhotoRequest_PhotoResponseType_PhotoResponseType_MIN;
  static const PhotoResponseType PhotoResponseType_MAX =
    GetPhotoRequest_PhotoResponseType_PhotoResponseType_MAX;
  static const int PhotoResponseType_ARRAYSIZE =
    GetPhotoRequest_PhotoResponseType_PhotoResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PhotoResponseType_descriptor() {
    return GetPhotoRequest_PhotoResponseType_descriptor();
  }
  static inline const ::std::string& PhotoResponseType_Name(PhotoResponseType value) {
    return GetPhotoRequest_PhotoResponseType_Name(value);
  }
  static inline bool PhotoResponseType_Parse(const ::std::string& name,
      PhotoResponseType* value) {
    return GetPhotoRequest_PhotoResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .Services.GetPhotoRequest.PhotoResponseType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::Services::GetPhotoRequest_PhotoResponseType type() const;
  void set_type(::Services::GetPhotoRequest_PhotoResponseType value);

  // repeated int64 persons = 2;
  int persons_size() const;
  void clear_persons();
  static const int kPersonsFieldNumber = 2;
  ::google::protobuf::int64 persons(int index) const;
  void set_persons(int index, ::google::protobuf::int64 value);
  void add_persons(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      persons() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_persons();

  // repeated int64 photos = 3;
  int photos_size() const;
  void clear_photos();
  static const int kPhotosFieldNumber = 3;
  ::google::protobuf::int64 photos(int index) const;
  void set_photos(int index, ::google::protobuf::int64 value);
  void add_photos(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      photos() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_photos();

  // optional .Services.Page page = 4;
  bool has_page() const;
  void clear_page();
  static const int kPageFieldNumber = 4;
  const ::Services::Page& page() const;
  ::Services::Page* mutable_page();
  ::Services::Page* release_page();
  void set_allocated_page(::Services::Page* page);

  // @@protoc_insertion_point(class_scope:Services.GetPhotoRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > persons_;
  mutable int _persons_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > photos_;
  mutable int _photos_cached_byte_size_;
  ::Services::Page* page_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_services_2fqueries_2eproto();
  friend void protobuf_AssignDesc_services_2fqueries_2eproto();
  friend void protobuf_ShutdownFile_services_2fqueries_2eproto();

  void InitAsDefaultInstance();
  static GetPhotoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetPersonRequest : public ::google::protobuf::Message {
 public:
  GetPersonRequest();
  virtual ~GetPersonRequest();

  GetPersonRequest(const GetPersonRequest& from);

  inline GetPersonRequest& operator=(const GetPersonRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPersonRequest& default_instance();

  void Swap(GetPersonRequest* other);

  // implements Message ----------------------------------------------

  inline GetPersonRequest* New() const { return New(NULL); }

  GetPersonRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPersonRequest& from);
  void MergeFrom(const GetPersonRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetPersonRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string search_text = 1;
  void clear_search_text();
  static const int kSearchTextFieldNumber = 1;
  const ::std::string& search_text() const;
  void set_search_text(const ::std::string& value);
  void set_search_text(const char* value);
  void set_search_text(const char* value, size_t size);
  ::std::string* mutable_search_text();
  ::std::string* release_search_text();
  void set_allocated_search_text(::std::string* search_text);

  // optional string first_name = 2;
  void clear_first_name();
  static const int kFirstNameFieldNumber = 2;
  const ::std::string& first_name() const;
  void set_first_name(const ::std::string& value);
  void set_first_name(const char* value);
  void set_first_name(const char* value, size_t size);
  ::std::string* mutable_first_name();
  ::std::string* release_first_name();
  void set_allocated_first_name(::std::string* first_name);

  // optional string last_name = 3;
  void clear_last_name();
  static const int kLastNameFieldNumber = 3;
  const ::std::string& last_name() const;
  void set_last_name(const ::std::string& value);
  void set_last_name(const char* value);
  void set_last_name(const char* value, size_t size);
  ::std::string* mutable_last_name();
  ::std::string* release_last_name();
  void set_allocated_last_name(::std::string* last_name);

  // optional string card = 4;
  void clear_card();
  static const int kCardFieldNumber = 4;
  const ::std::string& card() const;
  void set_card(const ::std::string& value);
  void set_card(const char* value);
  void set_card(const char* value, size_t size);
  ::std::string* mutable_card();
  ::std::string* release_card();
  void set_allocated_card(::std::string* card);

  // repeated int64 locations = 5;
  int locations_size() const;
  void clear_locations();
  static const int kLocationsFieldNumber = 5;
  ::google::protobuf::int64 locations(int index) const;
  void set_locations(int index, ::google::protobuf::int64 value);
  void add_locations(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      locations() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_locations();

  // optional .Services.Page page = 6;
  bool has_page() const;
  void clear_page();
  static const int kPageFieldNumber = 6;
  const ::Services::Page& page() const;
  ::Services::Page* mutable_page();
  ::Services::Page* release_page();
  void set_allocated_page(::Services::Page* page);

  // @@protoc_insertion_point(class_scope:Services.GetPersonRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr search_text_;
  ::google::protobuf::internal::ArenaStringPtr first_name_;
  ::google::protobuf::internal::ArenaStringPtr last_name_;
  ::google::protobuf::internal::ArenaStringPtr card_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > locations_;
  mutable int _locations_cached_byte_size_;
  ::Services::Page* page_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_services_2fqueries_2eproto();
  friend void protobuf_AssignDesc_services_2fqueries_2eproto();
  friend void protobuf_ShutdownFile_services_2fqueries_2eproto();

  void InitAsDefaultInstance();
  static GetPersonRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetLocationRequest : public ::google::protobuf::Message {
 public:
  GetLocationRequest();
  virtual ~GetLocationRequest();

  GetLocationRequest(const GetLocationRequest& from);

  inline GetLocationRequest& operator=(const GetLocationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLocationRequest& default_instance();

  void Swap(GetLocationRequest* other);

  // implements Message ----------------------------------------------

  inline GetLocationRequest* New() const { return New(NULL); }

  GetLocationRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetLocationRequest& from);
  void MergeFrom(const GetLocationRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetLocationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string search_text = 1;
  void clear_search_text();
  static const int kSearchTextFieldNumber = 1;
  const ::std::string& search_text() const;
  void set_search_text(const ::std::string& value);
  void set_search_text(const char* value);
  void set_search_text(const char* value, size_t size);
  ::std::string* mutable_search_text();
  ::std::string* release_search_text();
  void set_allocated_search_text(::std::string* search_text);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string mac_address = 3;
  void clear_mac_address();
  static const int kMacAddressFieldNumber = 3;
  const ::std::string& mac_address() const;
  void set_mac_address(const ::std::string& value);
  void set_mac_address(const char* value);
  void set_mac_address(const char* value, size_t size);
  ::std::string* mutable_mac_address();
  ::std::string* release_mac_address();
  void set_allocated_mac_address(::std::string* mac_address);

  // optional string device_name = 4;
  void clear_device_name();
  static const int kDeviceNameFieldNumber = 4;
  const ::std::string& device_name() const;
  void set_device_name(const ::std::string& value);
  void set_device_name(const char* value);
  void set_device_name(const char* value, size_t size);
  ::std::string* mutable_device_name();
  ::std::string* release_device_name();
  void set_allocated_device_name(::std::string* device_name);

  // optional .Services.Page page = 5;
  bool has_page() const;
  void clear_page();
  static const int kPageFieldNumber = 5;
  const ::Services::Page& page() const;
  ::Services::Page* mutable_page();
  ::Services::Page* release_page();
  void set_allocated_page(::Services::Page* page);

  // @@protoc_insertion_point(class_scope:Services.GetLocationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr search_text_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr mac_address_;
  ::google::protobuf::internal::ArenaStringPtr device_name_;
  ::Services::Page* page_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_services_2fqueries_2eproto();
  friend void protobuf_AssignDesc_services_2fqueries_2eproto();
  friend void protobuf_ShutdownFile_services_2fqueries_2eproto();

  void InitAsDefaultInstance();
  static GetLocationRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetVisitorRequest : public ::google::protobuf::Message {
 public:
  GetVisitorRequest();
  virtual ~GetVisitorRequest();

  GetVisitorRequest(const GetVisitorRequest& from);

  inline GetVisitorRequest& operator=(const GetVisitorRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVisitorRequest& default_instance();

  void Swap(GetVisitorRequest* other);

  // implements Message ----------------------------------------------

  inline GetVisitorRequest* New() const { return New(NULL); }

  GetVisitorRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetVisitorRequest& from);
  void MergeFrom(const GetVisitorRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetVisitorRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string search_text = 1;
  void clear_search_text();
  static const int kSearchTextFieldNumber = 1;
  const ::std::string& search_text() const;
  void set_search_text(const ::std::string& value);
  void set_search_text(const char* value);
  void set_search_text(const char* value, size_t size);
  ::std::string* mutable_search_text();
  ::std::string* release_search_text();
  void set_allocated_search_text(::std::string* search_text);

  // optional .DataTypes.AccessState state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::DataTypes::AccessState state() const;
  void set_state(::DataTypes::AccessState value);

  // repeated int64 locations = 3;
  int locations_size() const;
  void clear_locations();
  static const int kLocationsFieldNumber = 3;
  ::google::protobuf::int64 locations(int index) const;
  void set_locations(int index, ::google::protobuf::int64 value);
  void add_locations(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      locations() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_locations();

  // repeated int64 persons = 4;
  int persons_size() const;
  void clear_persons();
  static const int kPersonsFieldNumber = 4;
  ::google::protobuf::int64 persons(int index) const;
  void set_persons(int index, ::google::protobuf::int64 value);
  void add_persons(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      persons() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_persons();

  // optional int64 datetime_from = 5;
  void clear_datetime_from();
  static const int kDatetimeFromFieldNumber = 5;
  ::google::protobuf::int64 datetime_from() const;
  void set_datetime_from(::google::protobuf::int64 value);

  // optional int64 datetime_to = 6;
  void clear_datetime_to();
  static const int kDatetimeToFieldNumber = 6;
  ::google::protobuf::int64 datetime_to() const;
  void set_datetime_to(::google::protobuf::int64 value);

  // optional string card = 7;
  void clear_card();
  static const int kCardFieldNumber = 7;
  const ::std::string& card() const;
  void set_card(const ::std::string& value);
  void set_card(const char* value);
  void set_card(const char* value, size_t size);
  ::std::string* mutable_card();
  ::std::string* release_card();
  void set_allocated_card(::std::string* card);

  // optional .Services.Page page = 8;
  bool has_page() const;
  void clear_page();
  static const int kPageFieldNumber = 8;
  const ::Services::Page& page() const;
  ::Services::Page* mutable_page();
  ::Services::Page* release_page();
  void set_allocated_page(::Services::Page* page);

  // @@protoc_insertion_point(class_scope:Services.GetVisitorRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr search_text_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > locations_;
  mutable int _locations_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > persons_;
  mutable int _persons_cached_byte_size_;
  ::google::protobuf::int64 datetime_from_;
  ::google::protobuf::int64 datetime_to_;
  ::google::protobuf::internal::ArenaStringPtr card_;
  ::Services::Page* page_;
  int state_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_services_2fqueries_2eproto();
  friend void protobuf_AssignDesc_services_2fqueries_2eproto();
  friend void protobuf_ShutdownFile_services_2fqueries_2eproto();

  void InitAsDefaultInstance();
  static GetVisitorRequest* default_instance_;
};
// -------------------------------------------------------------------

class Page : public ::google::protobuf::Message {
 public:
  Page();
  virtual ~Page();

  Page(const Page& from);

  inline Page& operator=(const Page& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Page& default_instance();

  void Swap(Page* other);

  // implements Message ----------------------------------------------

  inline Page* New() const { return New(NULL); }

  Page* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Page& from);
  void MergeFrom(const Page& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Page* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // optional int32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Services.Page)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_services_2fqueries_2eproto();
  friend void protobuf_AssignDesc_services_2fqueries_2eproto();
  friend void protobuf_ShutdownFile_services_2fqueries_2eproto();

  void InitAsDefaultInstance();
  static Page* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPhotoRequest

// optional .Services.GetPhotoRequest.PhotoResponseType type = 1;
inline void GetPhotoRequest::clear_type() {
  type_ = 0;
}
inline ::Services::GetPhotoRequest_PhotoResponseType GetPhotoRequest::type() const {
  // @@protoc_insertion_point(field_get:Services.GetPhotoRequest.type)
  return static_cast< ::Services::GetPhotoRequest_PhotoResponseType >(type_);
}
inline void GetPhotoRequest::set_type(::Services::GetPhotoRequest_PhotoResponseType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Services.GetPhotoRequest.type)
}

// repeated int64 persons = 2;
inline int GetPhotoRequest::persons_size() const {
  return persons_.size();
}
inline void GetPhotoRequest::clear_persons() {
  persons_.Clear();
}
inline ::google::protobuf::int64 GetPhotoRequest::persons(int index) const {
  // @@protoc_insertion_point(field_get:Services.GetPhotoRequest.persons)
  return persons_.Get(index);
}
inline void GetPhotoRequest::set_persons(int index, ::google::protobuf::int64 value) {
  persons_.Set(index, value);
  // @@protoc_insertion_point(field_set:Services.GetPhotoRequest.persons)
}
inline void GetPhotoRequest::add_persons(::google::protobuf::int64 value) {
  persons_.Add(value);
  // @@protoc_insertion_point(field_add:Services.GetPhotoRequest.persons)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GetPhotoRequest::persons() const {
  // @@protoc_insertion_point(field_list:Services.GetPhotoRequest.persons)
  return persons_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GetPhotoRequest::mutable_persons() {
  // @@protoc_insertion_point(field_mutable_list:Services.GetPhotoRequest.persons)
  return &persons_;
}

// repeated int64 photos = 3;
inline int GetPhotoRequest::photos_size() const {
  return photos_.size();
}
inline void GetPhotoRequest::clear_photos() {
  photos_.Clear();
}
inline ::google::protobuf::int64 GetPhotoRequest::photos(int index) const {
  // @@protoc_insertion_point(field_get:Services.GetPhotoRequest.photos)
  return photos_.Get(index);
}
inline void GetPhotoRequest::set_photos(int index, ::google::protobuf::int64 value) {
  photos_.Set(index, value);
  // @@protoc_insertion_point(field_set:Services.GetPhotoRequest.photos)
}
inline void GetPhotoRequest::add_photos(::google::protobuf::int64 value) {
  photos_.Add(value);
  // @@protoc_insertion_point(field_add:Services.GetPhotoRequest.photos)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GetPhotoRequest::photos() const {
  // @@protoc_insertion_point(field_list:Services.GetPhotoRequest.photos)
  return photos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GetPhotoRequest::mutable_photos() {
  // @@protoc_insertion_point(field_mutable_list:Services.GetPhotoRequest.photos)
  return &photos_;
}

// optional .Services.Page page = 4;
inline bool GetPhotoRequest::has_page() const {
  return !_is_default_instance_ && page_ != NULL;
}
inline void GetPhotoRequest::clear_page() {
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}
inline const ::Services::Page& GetPhotoRequest::page() const {
  // @@protoc_insertion_point(field_get:Services.GetPhotoRequest.page)
  return page_ != NULL ? *page_ : *default_instance_->page_;
}
inline ::Services::Page* GetPhotoRequest::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::Services::Page;
  }
  // @@protoc_insertion_point(field_mutable:Services.GetPhotoRequest.page)
  return page_;
}
inline ::Services::Page* GetPhotoRequest::release_page() {
  // @@protoc_insertion_point(field_release:Services.GetPhotoRequest.page)
  
  ::Services::Page* temp = page_;
  page_ = NULL;
  return temp;
}
inline void GetPhotoRequest::set_allocated_page(::Services::Page* page) {
  delete page_;
  page_ = page;
  if (page) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Services.GetPhotoRequest.page)
}

// -------------------------------------------------------------------

// GetPersonRequest

// optional string search_text = 1;
inline void GetPersonRequest::clear_search_text() {
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPersonRequest::search_text() const {
  // @@protoc_insertion_point(field_get:Services.GetPersonRequest.search_text)
  return search_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPersonRequest::set_search_text(const ::std::string& value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetPersonRequest.search_text)
}
inline void GetPersonRequest::set_search_text(const char* value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetPersonRequest.search_text)
}
inline void GetPersonRequest::set_search_text(const char* value, size_t size) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetPersonRequest.search_text)
}
inline ::std::string* GetPersonRequest::mutable_search_text() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetPersonRequest.search_text)
  return search_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPersonRequest::release_search_text() {
  // @@protoc_insertion_point(field_release:Services.GetPersonRequest.search_text)
  
  return search_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPersonRequest::set_allocated_search_text(::std::string* search_text) {
  if (search_text != NULL) {
    
  } else {
    
  }
  search_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_text);
  // @@protoc_insertion_point(field_set_allocated:Services.GetPersonRequest.search_text)
}

// optional string first_name = 2;
inline void GetPersonRequest::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPersonRequest::first_name() const {
  // @@protoc_insertion_point(field_get:Services.GetPersonRequest.first_name)
  return first_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPersonRequest::set_first_name(const ::std::string& value) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetPersonRequest.first_name)
}
inline void GetPersonRequest::set_first_name(const char* value) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetPersonRequest.first_name)
}
inline void GetPersonRequest::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetPersonRequest.first_name)
}
inline ::std::string* GetPersonRequest::mutable_first_name() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetPersonRequest.first_name)
  return first_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPersonRequest::release_first_name() {
  // @@protoc_insertion_point(field_release:Services.GetPersonRequest.first_name)
  
  return first_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPersonRequest::set_allocated_first_name(::std::string* first_name) {
  if (first_name != NULL) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:Services.GetPersonRequest.first_name)
}

// optional string last_name = 3;
inline void GetPersonRequest::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPersonRequest::last_name() const {
  // @@protoc_insertion_point(field_get:Services.GetPersonRequest.last_name)
  return last_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPersonRequest::set_last_name(const ::std::string& value) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetPersonRequest.last_name)
}
inline void GetPersonRequest::set_last_name(const char* value) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetPersonRequest.last_name)
}
inline void GetPersonRequest::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetPersonRequest.last_name)
}
inline ::std::string* GetPersonRequest::mutable_last_name() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetPersonRequest.last_name)
  return last_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPersonRequest::release_last_name() {
  // @@protoc_insertion_point(field_release:Services.GetPersonRequest.last_name)
  
  return last_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPersonRequest::set_allocated_last_name(::std::string* last_name) {
  if (last_name != NULL) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:Services.GetPersonRequest.last_name)
}

// optional string card = 4;
inline void GetPersonRequest::clear_card() {
  card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPersonRequest::card() const {
  // @@protoc_insertion_point(field_get:Services.GetPersonRequest.card)
  return card_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPersonRequest::set_card(const ::std::string& value) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetPersonRequest.card)
}
inline void GetPersonRequest::set_card(const char* value) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetPersonRequest.card)
}
inline void GetPersonRequest::set_card(const char* value, size_t size) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetPersonRequest.card)
}
inline ::std::string* GetPersonRequest::mutable_card() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetPersonRequest.card)
  return card_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPersonRequest::release_card() {
  // @@protoc_insertion_point(field_release:Services.GetPersonRequest.card)
  
  return card_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPersonRequest::set_allocated_card(::std::string* card) {
  if (card != NULL) {
    
  } else {
    
  }
  card_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card);
  // @@protoc_insertion_point(field_set_allocated:Services.GetPersonRequest.card)
}

// repeated int64 locations = 5;
inline int GetPersonRequest::locations_size() const {
  return locations_.size();
}
inline void GetPersonRequest::clear_locations() {
  locations_.Clear();
}
inline ::google::protobuf::int64 GetPersonRequest::locations(int index) const {
  // @@protoc_insertion_point(field_get:Services.GetPersonRequest.locations)
  return locations_.Get(index);
}
inline void GetPersonRequest::set_locations(int index, ::google::protobuf::int64 value) {
  locations_.Set(index, value);
  // @@protoc_insertion_point(field_set:Services.GetPersonRequest.locations)
}
inline void GetPersonRequest::add_locations(::google::protobuf::int64 value) {
  locations_.Add(value);
  // @@protoc_insertion_point(field_add:Services.GetPersonRequest.locations)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GetPersonRequest::locations() const {
  // @@protoc_insertion_point(field_list:Services.GetPersonRequest.locations)
  return locations_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GetPersonRequest::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:Services.GetPersonRequest.locations)
  return &locations_;
}

// optional .Services.Page page = 6;
inline bool GetPersonRequest::has_page() const {
  return !_is_default_instance_ && page_ != NULL;
}
inline void GetPersonRequest::clear_page() {
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}
inline const ::Services::Page& GetPersonRequest::page() const {
  // @@protoc_insertion_point(field_get:Services.GetPersonRequest.page)
  return page_ != NULL ? *page_ : *default_instance_->page_;
}
inline ::Services::Page* GetPersonRequest::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::Services::Page;
  }
  // @@protoc_insertion_point(field_mutable:Services.GetPersonRequest.page)
  return page_;
}
inline ::Services::Page* GetPersonRequest::release_page() {
  // @@protoc_insertion_point(field_release:Services.GetPersonRequest.page)
  
  ::Services::Page* temp = page_;
  page_ = NULL;
  return temp;
}
inline void GetPersonRequest::set_allocated_page(::Services::Page* page) {
  delete page_;
  page_ = page;
  if (page) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Services.GetPersonRequest.page)
}

// -------------------------------------------------------------------

// GetLocationRequest

// optional string search_text = 1;
inline void GetLocationRequest::clear_search_text() {
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetLocationRequest::search_text() const {
  // @@protoc_insertion_point(field_get:Services.GetLocationRequest.search_text)
  return search_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLocationRequest::set_search_text(const ::std::string& value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetLocationRequest.search_text)
}
inline void GetLocationRequest::set_search_text(const char* value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetLocationRequest.search_text)
}
inline void GetLocationRequest::set_search_text(const char* value, size_t size) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetLocationRequest.search_text)
}
inline ::std::string* GetLocationRequest::mutable_search_text() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetLocationRequest.search_text)
  return search_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLocationRequest::release_search_text() {
  // @@protoc_insertion_point(field_release:Services.GetLocationRequest.search_text)
  
  return search_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLocationRequest::set_allocated_search_text(::std::string* search_text) {
  if (search_text != NULL) {
    
  } else {
    
  }
  search_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_text);
  // @@protoc_insertion_point(field_set_allocated:Services.GetLocationRequest.search_text)
}

// optional string name = 2;
inline void GetLocationRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetLocationRequest::name() const {
  // @@protoc_insertion_point(field_get:Services.GetLocationRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLocationRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetLocationRequest.name)
}
inline void GetLocationRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetLocationRequest.name)
}
inline void GetLocationRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetLocationRequest.name)
}
inline ::std::string* GetLocationRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetLocationRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLocationRequest::release_name() {
  // @@protoc_insertion_point(field_release:Services.GetLocationRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLocationRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Services.GetLocationRequest.name)
}

// optional string mac_address = 3;
inline void GetLocationRequest::clear_mac_address() {
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetLocationRequest::mac_address() const {
  // @@protoc_insertion_point(field_get:Services.GetLocationRequest.mac_address)
  return mac_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLocationRequest::set_mac_address(const ::std::string& value) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetLocationRequest.mac_address)
}
inline void GetLocationRequest::set_mac_address(const char* value) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetLocationRequest.mac_address)
}
inline void GetLocationRequest::set_mac_address(const char* value, size_t size) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetLocationRequest.mac_address)
}
inline ::std::string* GetLocationRequest::mutable_mac_address() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetLocationRequest.mac_address)
  return mac_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLocationRequest::release_mac_address() {
  // @@protoc_insertion_point(field_release:Services.GetLocationRequest.mac_address)
  
  return mac_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLocationRequest::set_allocated_mac_address(::std::string* mac_address) {
  if (mac_address != NULL) {
    
  } else {
    
  }
  mac_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_address);
  // @@protoc_insertion_point(field_set_allocated:Services.GetLocationRequest.mac_address)
}

// optional string device_name = 4;
inline void GetLocationRequest::clear_device_name() {
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetLocationRequest::device_name() const {
  // @@protoc_insertion_point(field_get:Services.GetLocationRequest.device_name)
  return device_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLocationRequest::set_device_name(const ::std::string& value) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetLocationRequest.device_name)
}
inline void GetLocationRequest::set_device_name(const char* value) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetLocationRequest.device_name)
}
inline void GetLocationRequest::set_device_name(const char* value, size_t size) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetLocationRequest.device_name)
}
inline ::std::string* GetLocationRequest::mutable_device_name() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetLocationRequest.device_name)
  return device_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLocationRequest::release_device_name() {
  // @@protoc_insertion_point(field_release:Services.GetLocationRequest.device_name)
  
  return device_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLocationRequest::set_allocated_device_name(::std::string* device_name) {
  if (device_name != NULL) {
    
  } else {
    
  }
  device_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_name);
  // @@protoc_insertion_point(field_set_allocated:Services.GetLocationRequest.device_name)
}

// optional .Services.Page page = 5;
inline bool GetLocationRequest::has_page() const {
  return !_is_default_instance_ && page_ != NULL;
}
inline void GetLocationRequest::clear_page() {
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}
inline const ::Services::Page& GetLocationRequest::page() const {
  // @@protoc_insertion_point(field_get:Services.GetLocationRequest.page)
  return page_ != NULL ? *page_ : *default_instance_->page_;
}
inline ::Services::Page* GetLocationRequest::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::Services::Page;
  }
  // @@protoc_insertion_point(field_mutable:Services.GetLocationRequest.page)
  return page_;
}
inline ::Services::Page* GetLocationRequest::release_page() {
  // @@protoc_insertion_point(field_release:Services.GetLocationRequest.page)
  
  ::Services::Page* temp = page_;
  page_ = NULL;
  return temp;
}
inline void GetLocationRequest::set_allocated_page(::Services::Page* page) {
  delete page_;
  page_ = page;
  if (page) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Services.GetLocationRequest.page)
}

// -------------------------------------------------------------------

// GetVisitorRequest

// optional string search_text = 1;
inline void GetVisitorRequest::clear_search_text() {
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetVisitorRequest::search_text() const {
  // @@protoc_insertion_point(field_get:Services.GetVisitorRequest.search_text)
  return search_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetVisitorRequest::set_search_text(const ::std::string& value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetVisitorRequest.search_text)
}
inline void GetVisitorRequest::set_search_text(const char* value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetVisitorRequest.search_text)
}
inline void GetVisitorRequest::set_search_text(const char* value, size_t size) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetVisitorRequest.search_text)
}
inline ::std::string* GetVisitorRequest::mutable_search_text() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetVisitorRequest.search_text)
  return search_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetVisitorRequest::release_search_text() {
  // @@protoc_insertion_point(field_release:Services.GetVisitorRequest.search_text)
  
  return search_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetVisitorRequest::set_allocated_search_text(::std::string* search_text) {
  if (search_text != NULL) {
    
  } else {
    
  }
  search_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_text);
  // @@protoc_insertion_point(field_set_allocated:Services.GetVisitorRequest.search_text)
}

// optional .DataTypes.AccessState state = 2;
inline void GetVisitorRequest::clear_state() {
  state_ = 0;
}
inline ::DataTypes::AccessState GetVisitorRequest::state() const {
  // @@protoc_insertion_point(field_get:Services.GetVisitorRequest.state)
  return static_cast< ::DataTypes::AccessState >(state_);
}
inline void GetVisitorRequest::set_state(::DataTypes::AccessState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:Services.GetVisitorRequest.state)
}

// repeated int64 locations = 3;
inline int GetVisitorRequest::locations_size() const {
  return locations_.size();
}
inline void GetVisitorRequest::clear_locations() {
  locations_.Clear();
}
inline ::google::protobuf::int64 GetVisitorRequest::locations(int index) const {
  // @@protoc_insertion_point(field_get:Services.GetVisitorRequest.locations)
  return locations_.Get(index);
}
inline void GetVisitorRequest::set_locations(int index, ::google::protobuf::int64 value) {
  locations_.Set(index, value);
  // @@protoc_insertion_point(field_set:Services.GetVisitorRequest.locations)
}
inline void GetVisitorRequest::add_locations(::google::protobuf::int64 value) {
  locations_.Add(value);
  // @@protoc_insertion_point(field_add:Services.GetVisitorRequest.locations)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GetVisitorRequest::locations() const {
  // @@protoc_insertion_point(field_list:Services.GetVisitorRequest.locations)
  return locations_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GetVisitorRequest::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:Services.GetVisitorRequest.locations)
  return &locations_;
}

// repeated int64 persons = 4;
inline int GetVisitorRequest::persons_size() const {
  return persons_.size();
}
inline void GetVisitorRequest::clear_persons() {
  persons_.Clear();
}
inline ::google::protobuf::int64 GetVisitorRequest::persons(int index) const {
  // @@protoc_insertion_point(field_get:Services.GetVisitorRequest.persons)
  return persons_.Get(index);
}
inline void GetVisitorRequest::set_persons(int index, ::google::protobuf::int64 value) {
  persons_.Set(index, value);
  // @@protoc_insertion_point(field_set:Services.GetVisitorRequest.persons)
}
inline void GetVisitorRequest::add_persons(::google::protobuf::int64 value) {
  persons_.Add(value);
  // @@protoc_insertion_point(field_add:Services.GetVisitorRequest.persons)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GetVisitorRequest::persons() const {
  // @@protoc_insertion_point(field_list:Services.GetVisitorRequest.persons)
  return persons_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GetVisitorRequest::mutable_persons() {
  // @@protoc_insertion_point(field_mutable_list:Services.GetVisitorRequest.persons)
  return &persons_;
}

// optional int64 datetime_from = 5;
inline void GetVisitorRequest::clear_datetime_from() {
  datetime_from_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetVisitorRequest::datetime_from() const {
  // @@protoc_insertion_point(field_get:Services.GetVisitorRequest.datetime_from)
  return datetime_from_;
}
inline void GetVisitorRequest::set_datetime_from(::google::protobuf::int64 value) {
  
  datetime_from_ = value;
  // @@protoc_insertion_point(field_set:Services.GetVisitorRequest.datetime_from)
}

// optional int64 datetime_to = 6;
inline void GetVisitorRequest::clear_datetime_to() {
  datetime_to_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetVisitorRequest::datetime_to() const {
  // @@protoc_insertion_point(field_get:Services.GetVisitorRequest.datetime_to)
  return datetime_to_;
}
inline void GetVisitorRequest::set_datetime_to(::google::protobuf::int64 value) {
  
  datetime_to_ = value;
  // @@protoc_insertion_point(field_set:Services.GetVisitorRequest.datetime_to)
}

// optional string card = 7;
inline void GetVisitorRequest::clear_card() {
  card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetVisitorRequest::card() const {
  // @@protoc_insertion_point(field_get:Services.GetVisitorRequest.card)
  return card_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetVisitorRequest::set_card(const ::std::string& value) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetVisitorRequest.card)
}
inline void GetVisitorRequest::set_card(const char* value) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetVisitorRequest.card)
}
inline void GetVisitorRequest::set_card(const char* value, size_t size) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetVisitorRequest.card)
}
inline ::std::string* GetVisitorRequest::mutable_card() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetVisitorRequest.card)
  return card_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetVisitorRequest::release_card() {
  // @@protoc_insertion_point(field_release:Services.GetVisitorRequest.card)
  
  return card_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetVisitorRequest::set_allocated_card(::std::string* card) {
  if (card != NULL) {
    
  } else {
    
  }
  card_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card);
  // @@protoc_insertion_point(field_set_allocated:Services.GetVisitorRequest.card)
}

// optional .Services.Page page = 8;
inline bool GetVisitorRequest::has_page() const {
  return !_is_default_instance_ && page_ != NULL;
}
inline void GetVisitorRequest::clear_page() {
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}
inline const ::Services::Page& GetVisitorRequest::page() const {
  // @@protoc_insertion_point(field_get:Services.GetVisitorRequest.page)
  return page_ != NULL ? *page_ : *default_instance_->page_;
}
inline ::Services::Page* GetVisitorRequest::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::Services::Page;
  }
  // @@protoc_insertion_point(field_mutable:Services.GetVisitorRequest.page)
  return page_;
}
inline ::Services::Page* GetVisitorRequest::release_page() {
  // @@protoc_insertion_point(field_release:Services.GetVisitorRequest.page)
  
  ::Services::Page* temp = page_;
  page_ = NULL;
  return temp;
}
inline void GetVisitorRequest::set_allocated_page(::Services::Page* page) {
  delete page_;
  page_ = page;
  if (page) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Services.GetVisitorRequest.page)
}

// -------------------------------------------------------------------

// Page

// optional int32 index = 1;
inline void Page::clear_index() {
  index_ = 0;
}
inline ::google::protobuf::int32 Page::index() const {
  // @@protoc_insertion_point(field_get:Services.Page.index)
  return index_;
}
inline void Page::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:Services.Page.index)
}

// optional int32 size = 2;
inline void Page::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 Page::size() const {
  // @@protoc_insertion_point(field_get:Services.Page.size)
  return size_;
}
inline void Page::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:Services.Page.size)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Services

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Services::GetPhotoRequest_PhotoResponseType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Services::GetPhotoRequest_PhotoResponseType>() {
  return ::Services::GetPhotoRequest_PhotoResponseType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_services_2fqueries_2eproto__INCLUDED
