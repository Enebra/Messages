// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/queries.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "services/queries.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Services {

namespace {

const ::google::protobuf::Descriptor* GetPersonRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetPersonRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetLocationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLocationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetVisitRecordRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetVisitRecordRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* Page_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Page_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetCardRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetCardRequest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_services_2fqueries_2eproto() {
  protobuf_AddDesc_services_2fqueries_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "services/queries.proto");
  GOOGLE_CHECK(file != NULL);
  GetPersonRequest_descriptor_ = file->message_type(0);
  static const int GetPersonRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, search_text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, first_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, last_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, locations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, page_),
  };
  GetPersonRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetPersonRequest_descriptor_,
      GetPersonRequest::default_instance_,
      GetPersonRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetPersonRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, _is_default_instance_));
  GetLocationRequest_descriptor_ = file->message_type(1);
  static const int GetLocationRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, search_text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, mac_address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, device_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, page_),
  };
  GetLocationRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetLocationRequest_descriptor_,
      GetLocationRequest::default_instance_,
      GetLocationRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetLocationRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, _is_default_instance_));
  GetVisitRecordRequest_descriptor_ = file->message_type(2);
  static const int GetVisitRecordRequest_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, search_text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, locations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, persons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, datetime_from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, datetime_to_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, page_),
  };
  GetVisitRecordRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetVisitRecordRequest_descriptor_,
      GetVisitRecordRequest::default_instance_,
      GetVisitRecordRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetVisitRecordRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, _is_default_instance_));
  Page_descriptor_ = file->message_type(3);
  static const int Page_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, size_),
  };
  Page_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Page_descriptor_,
      Page::default_instance_,
      Page_offsets_,
      -1,
      -1,
      -1,
      sizeof(Page),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, _is_default_instance_));
  GetCardRequest_descriptor_ = file->message_type(4);
  static const int GetCardRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCardRequest, search_text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCardRequest, unique_identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCardRequest, owners_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCardRequest, page_),
  };
  GetCardRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetCardRequest_descriptor_,
      GetCardRequest::default_instance_,
      GetCardRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetCardRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCardRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCardRequest, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_services_2fqueries_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetPersonRequest_descriptor_, &GetPersonRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetLocationRequest_descriptor_, &GetLocationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetVisitRecordRequest_descriptor_, &GetVisitRecordRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Page_descriptor_, &Page::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetCardRequest_descriptor_, &GetCardRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_services_2fqueries_2eproto() {
  delete GetPersonRequest::default_instance_;
  delete GetPersonRequest_reflection_;
  delete GetLocationRequest::default_instance_;
  delete GetLocationRequest_reflection_;
  delete GetVisitRecordRequest::default_instance_;
  delete GetVisitRecordRequest_reflection_;
  delete Page::default_instance_;
  delete Page_reflection_;
  delete GetCardRequest::default_instance_;
  delete GetCardRequest_reflection_;
}

void protobuf_AddDesc_services_2fqueries_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DataTypes::protobuf_AddDesc_datatypes_2fvisit_5frecord_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026services/queries.proto\022\010Services\032\034data"
    "types/visit_record.proto\"\215\001\n\020GetPersonRe"
    "quest\022\023\n\013search_text\030\001 \001(\t\022\022\n\nfirst_name"
    "\030\002 \001(\t\022\021\n\tlast_name\030\003 \001(\t\022\014\n\004card\030\004 \001(\t\022"
    "\021\n\tlocations\030\005 \003(\t\022\034\n\004page\030\006 \001(\0132\016.Servi"
    "ces.Page\"\177\n\022GetLocationRequest\022\023\n\013search"
    "_text\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\023\n\013mac_address"
    "\030\003 \001(\t\022\023\n\013device_name\030\004 \001(\t\022\034\n\004page\030\005 \001("
    "\0132\016.Services.Page\"\317\001\n\025GetVisitRecordRequ"
    "est\022\023\n\013search_text\030\001 \001(\t\022%\n\005state\030\002 \001(\0162"
    "\026.DataTypes.AccessState\022\021\n\tlocations\030\003 \003"
    "(\t\022\017\n\007persons\030\004 \003(\t\022\025\n\rdatetime_from\030\005 \001"
    "(\003\022\023\n\013datetime_to\030\006 \001(\003\022\014\n\004card\030\007 \001(\t\022\034\n"
    "\004page\030\010 \001(\0132\016.Services.Page\"#\n\004Page\022\r\n\005i"
    "ndex\030\001 \001(\005\022\014\n\004size\030\002 \001(\005\"n\n\016GetCardReque"
    "st\022\023\n\013search_text\030\001 \001(\t\022\031\n\021unique_identi"
    "fier\030\002 \001(\t\022\016\n\006owners\030\003 \003(\t\022\034\n\004page\030\004 \001(\013"
    "2\016.Services.PageB\017\n\007ex.grpc\242\002\003RTGb\006proto"
    "3", 721);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "services/queries.proto", &protobuf_RegisterTypes);
  GetPersonRequest::default_instance_ = new GetPersonRequest();
  GetLocationRequest::default_instance_ = new GetLocationRequest();
  GetVisitRecordRequest::default_instance_ = new GetVisitRecordRequest();
  Page::default_instance_ = new Page();
  GetCardRequest::default_instance_ = new GetCardRequest();
  GetPersonRequest::default_instance_->InitAsDefaultInstance();
  GetLocationRequest::default_instance_->InitAsDefaultInstance();
  GetVisitRecordRequest::default_instance_->InitAsDefaultInstance();
  Page::default_instance_->InitAsDefaultInstance();
  GetCardRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_services_2fqueries_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_services_2fqueries_2eproto {
  StaticDescriptorInitializer_services_2fqueries_2eproto() {
    protobuf_AddDesc_services_2fqueries_2eproto();
  }
} static_descriptor_initializer_services_2fqueries_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPersonRequest::kSearchTextFieldNumber;
const int GetPersonRequest::kFirstNameFieldNumber;
const int GetPersonRequest::kLastNameFieldNumber;
const int GetPersonRequest::kCardFieldNumber;
const int GetPersonRequest::kLocationsFieldNumber;
const int GetPersonRequest::kPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPersonRequest::GetPersonRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Services.GetPersonRequest)
}

void GetPersonRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  page_ = const_cast< ::Services::Page*>(&::Services::Page::default_instance());
}

GetPersonRequest::GetPersonRequest(const GetPersonRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Services.GetPersonRequest)
}

void GetPersonRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  search_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  first_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_ = NULL;
}

GetPersonRequest::~GetPersonRequest() {
  // @@protoc_insertion_point(destructor:Services.GetPersonRequest)
  SharedDtor();
}

void GetPersonRequest::SharedDtor() {
  search_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  first_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete page_;
  }
}

void GetPersonRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPersonRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetPersonRequest_descriptor_;
}

const GetPersonRequest& GetPersonRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_services_2fqueries_2eproto();
  return *default_instance_;
}

GetPersonRequest* GetPersonRequest::default_instance_ = NULL;

GetPersonRequest* GetPersonRequest::New(::google::protobuf::Arena* arena) const {
  GetPersonRequest* n = new GetPersonRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPersonRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Services.GetPersonRequest)
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
  locations_.Clear();
}

bool GetPersonRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Services.GetPersonRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string search_text = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search_text().data(), this->search_text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetPersonRequest.search_text"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_first_name;
        break;
      }

      // optional string first_name = 2;
      case 2: {
        if (tag == 18) {
         parse_first_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_first_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->first_name().data(), this->first_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetPersonRequest.first_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_last_name;
        break;
      }

      // optional string last_name = 3;
      case 3: {
        if (tag == 26) {
         parse_last_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_name().data(), this->last_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetPersonRequest.last_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_card;
        break;
      }

      // optional string card = 4;
      case 4: {
        if (tag == 34) {
         parse_card:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_card()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->card().data(), this->card().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetPersonRequest.card"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_locations;
        break;
      }

      // repeated string locations = 5;
      case 5: {
        if (tag == 42) {
         parse_locations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_locations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locations(this->locations_size() - 1).data(),
            this->locations(this->locations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetPersonRequest.locations"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_locations;
        if (input->ExpectTag(50)) goto parse_page;
        break;
      }

      // optional .Services.Page page = 6;
      case 6: {
        if (tag == 50) {
         parse_page:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_page()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Services.GetPersonRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Services.GetPersonRequest)
  return false;
#undef DO_
}

void GetPersonRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Services.GetPersonRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetPersonRequest.search_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->search_text(), output);
  }

  // optional string first_name = 2;
  if (this->first_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->first_name().data(), this->first_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetPersonRequest.first_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->first_name(), output);
  }

  // optional string last_name = 3;
  if (this->last_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_name().data(), this->last_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetPersonRequest.last_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->last_name(), output);
  }

  // optional string card = 4;
  if (this->card().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card().data(), this->card().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetPersonRequest.card");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->card(), output);
  }

  // repeated string locations = 5;
  for (int i = 0; i < this->locations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), this->locations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetPersonRequest.locations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->locations(i), output);
  }

  // optional .Services.Page page = 6;
  if (this->has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->page_, output);
  }

  // @@protoc_insertion_point(serialize_end:Services.GetPersonRequest)
}

::google::protobuf::uint8* GetPersonRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Services.GetPersonRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetPersonRequest.search_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->search_text(), target);
  }

  // optional string first_name = 2;
  if (this->first_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->first_name().data(), this->first_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetPersonRequest.first_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->first_name(), target);
  }

  // optional string last_name = 3;
  if (this->last_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_name().data(), this->last_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetPersonRequest.last_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->last_name(), target);
  }

  // optional string card = 4;
  if (this->card().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card().data(), this->card().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetPersonRequest.card");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->card(), target);
  }

  // repeated string locations = 5;
  for (int i = 0; i < this->locations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), this->locations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetPersonRequest.locations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->locations(i), target);
  }

  // optional .Services.Page page = 6;
  if (this->has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *this->page_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Services.GetPersonRequest)
  return target;
}

int GetPersonRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Services.GetPersonRequest)
  int total_size = 0;

  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->search_text());
  }

  // optional string first_name = 2;
  if (this->first_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->first_name());
  }

  // optional string last_name = 3;
  if (this->last_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_name());
  }

  // optional string card = 4;
  if (this->card().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->card());
  }

  // optional .Services.Page page = 6;
  if (this->has_page()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->page_);
  }

  // repeated string locations = 5;
  total_size += 1 * this->locations_size();
  for (int i = 0; i < this->locations_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->locations(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPersonRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Services.GetPersonRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetPersonRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPersonRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Services.GetPersonRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Services.GetPersonRequest)
    MergeFrom(*source);
  }
}

void GetPersonRequest::MergeFrom(const GetPersonRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Services.GetPersonRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  locations_.MergeFrom(from.locations_);
  if (from.search_text().size() > 0) {

    search_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_text_);
  }
  if (from.first_name().size() > 0) {

    first_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.first_name_);
  }
  if (from.last_name().size() > 0) {

    last_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_name_);
  }
  if (from.card().size() > 0) {

    card_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_);
  }
  if (from.has_page()) {
    mutable_page()->::Services::Page::MergeFrom(from.page());
  }
}

void GetPersonRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Services.GetPersonRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPersonRequest::CopyFrom(const GetPersonRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Services.GetPersonRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPersonRequest::IsInitialized() const {

  return true;
}

void GetPersonRequest::Swap(GetPersonRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPersonRequest::InternalSwap(GetPersonRequest* other) {
  search_text_.Swap(&other->search_text_);
  first_name_.Swap(&other->first_name_);
  last_name_.Swap(&other->last_name_);
  card_.Swap(&other->card_);
  locations_.UnsafeArenaSwap(&other->locations_);
  std::swap(page_, other->page_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPersonRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetPersonRequest_descriptor_;
  metadata.reflection = GetPersonRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPersonRequest

// optional string search_text = 1;
void GetPersonRequest::clear_search_text() {
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetPersonRequest::search_text() const {
  // @@protoc_insertion_point(field_get:Services.GetPersonRequest.search_text)
  return search_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_search_text(const ::std::string& value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetPersonRequest.search_text)
}
 void GetPersonRequest::set_search_text(const char* value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetPersonRequest.search_text)
}
 void GetPersonRequest::set_search_text(const char* value, size_t size) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetPersonRequest.search_text)
}
 ::std::string* GetPersonRequest::mutable_search_text() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetPersonRequest.search_text)
  return search_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetPersonRequest::release_search_text() {
  // @@protoc_insertion_point(field_release:Services.GetPersonRequest.search_text)
  
  return search_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_allocated_search_text(::std::string* search_text) {
  if (search_text != NULL) {
    
  } else {
    
  }
  search_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_text);
  // @@protoc_insertion_point(field_set_allocated:Services.GetPersonRequest.search_text)
}

// optional string first_name = 2;
void GetPersonRequest::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetPersonRequest::first_name() const {
  // @@protoc_insertion_point(field_get:Services.GetPersonRequest.first_name)
  return first_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_first_name(const ::std::string& value) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetPersonRequest.first_name)
}
 void GetPersonRequest::set_first_name(const char* value) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetPersonRequest.first_name)
}
 void GetPersonRequest::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetPersonRequest.first_name)
}
 ::std::string* GetPersonRequest::mutable_first_name() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetPersonRequest.first_name)
  return first_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetPersonRequest::release_first_name() {
  // @@protoc_insertion_point(field_release:Services.GetPersonRequest.first_name)
  
  return first_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_allocated_first_name(::std::string* first_name) {
  if (first_name != NULL) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:Services.GetPersonRequest.first_name)
}

// optional string last_name = 3;
void GetPersonRequest::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetPersonRequest::last_name() const {
  // @@protoc_insertion_point(field_get:Services.GetPersonRequest.last_name)
  return last_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_last_name(const ::std::string& value) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetPersonRequest.last_name)
}
 void GetPersonRequest::set_last_name(const char* value) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetPersonRequest.last_name)
}
 void GetPersonRequest::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetPersonRequest.last_name)
}
 ::std::string* GetPersonRequest::mutable_last_name() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetPersonRequest.last_name)
  return last_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetPersonRequest::release_last_name() {
  // @@protoc_insertion_point(field_release:Services.GetPersonRequest.last_name)
  
  return last_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_allocated_last_name(::std::string* last_name) {
  if (last_name != NULL) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:Services.GetPersonRequest.last_name)
}

// optional string card = 4;
void GetPersonRequest::clear_card() {
  card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetPersonRequest::card() const {
  // @@protoc_insertion_point(field_get:Services.GetPersonRequest.card)
  return card_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_card(const ::std::string& value) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetPersonRequest.card)
}
 void GetPersonRequest::set_card(const char* value) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetPersonRequest.card)
}
 void GetPersonRequest::set_card(const char* value, size_t size) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetPersonRequest.card)
}
 ::std::string* GetPersonRequest::mutable_card() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetPersonRequest.card)
  return card_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetPersonRequest::release_card() {
  // @@protoc_insertion_point(field_release:Services.GetPersonRequest.card)
  
  return card_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_allocated_card(::std::string* card) {
  if (card != NULL) {
    
  } else {
    
  }
  card_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card);
  // @@protoc_insertion_point(field_set_allocated:Services.GetPersonRequest.card)
}

// repeated string locations = 5;
int GetPersonRequest::locations_size() const {
  return locations_.size();
}
void GetPersonRequest::clear_locations() {
  locations_.Clear();
}
 const ::std::string& GetPersonRequest::locations(int index) const {
  // @@protoc_insertion_point(field_get:Services.GetPersonRequest.locations)
  return locations_.Get(index);
}
 ::std::string* GetPersonRequest::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:Services.GetPersonRequest.locations)
  return locations_.Mutable(index);
}
 void GetPersonRequest::set_locations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Services.GetPersonRequest.locations)
  locations_.Mutable(index)->assign(value);
}
 void GetPersonRequest::set_locations(int index, const char* value) {
  locations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Services.GetPersonRequest.locations)
}
 void GetPersonRequest::set_locations(int index, const char* value, size_t size) {
  locations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Services.GetPersonRequest.locations)
}
 ::std::string* GetPersonRequest::add_locations() {
  // @@protoc_insertion_point(field_add_mutable:Services.GetPersonRequest.locations)
  return locations_.Add();
}
 void GetPersonRequest::add_locations(const ::std::string& value) {
  locations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Services.GetPersonRequest.locations)
}
 void GetPersonRequest::add_locations(const char* value) {
  locations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Services.GetPersonRequest.locations)
}
 void GetPersonRequest::add_locations(const char* value, size_t size) {
  locations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Services.GetPersonRequest.locations)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetPersonRequest::locations() const {
  // @@protoc_insertion_point(field_list:Services.GetPersonRequest.locations)
  return locations_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
GetPersonRequest::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:Services.GetPersonRequest.locations)
  return &locations_;
}

// optional .Services.Page page = 6;
bool GetPersonRequest::has_page() const {
  return !_is_default_instance_ && page_ != NULL;
}
void GetPersonRequest::clear_page() {
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}
const ::Services::Page& GetPersonRequest::page() const {
  // @@protoc_insertion_point(field_get:Services.GetPersonRequest.page)
  return page_ != NULL ? *page_ : *default_instance_->page_;
}
::Services::Page* GetPersonRequest::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::Services::Page;
  }
  // @@protoc_insertion_point(field_mutable:Services.GetPersonRequest.page)
  return page_;
}
::Services::Page* GetPersonRequest::release_page() {
  // @@protoc_insertion_point(field_release:Services.GetPersonRequest.page)
  
  ::Services::Page* temp = page_;
  page_ = NULL;
  return temp;
}
void GetPersonRequest::set_allocated_page(::Services::Page* page) {
  delete page_;
  page_ = page;
  if (page) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Services.GetPersonRequest.page)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLocationRequest::kSearchTextFieldNumber;
const int GetLocationRequest::kNameFieldNumber;
const int GetLocationRequest::kMacAddressFieldNumber;
const int GetLocationRequest::kDeviceNameFieldNumber;
const int GetLocationRequest::kPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLocationRequest::GetLocationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Services.GetLocationRequest)
}

void GetLocationRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  page_ = const_cast< ::Services::Page*>(&::Services::Page::default_instance());
}

GetLocationRequest::GetLocationRequest(const GetLocationRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Services.GetLocationRequest)
}

void GetLocationRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  search_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_ = NULL;
}

GetLocationRequest::~GetLocationRequest() {
  // @@protoc_insertion_point(destructor:Services.GetLocationRequest)
  SharedDtor();
}

void GetLocationRequest::SharedDtor() {
  search_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete page_;
  }
}

void GetLocationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLocationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLocationRequest_descriptor_;
}

const GetLocationRequest& GetLocationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_services_2fqueries_2eproto();
  return *default_instance_;
}

GetLocationRequest* GetLocationRequest::default_instance_ = NULL;

GetLocationRequest* GetLocationRequest::New(::google::protobuf::Arena* arena) const {
  GetLocationRequest* n = new GetLocationRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Services.GetLocationRequest)
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}

bool GetLocationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Services.GetLocationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string search_text = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search_text().data(), this->search_text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetLocationRequest.search_text"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetLocationRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mac_address;
        break;
      }

      // optional string mac_address = 3;
      case 3: {
        if (tag == 26) {
         parse_mac_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac_address().data(), this->mac_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetLocationRequest.mac_address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_device_name;
        break;
      }

      // optional string device_name = 4;
      case 4: {
        if (tag == 34) {
         parse_device_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_name().data(), this->device_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetLocationRequest.device_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_page;
        break;
      }

      // optional .Services.Page page = 5;
      case 5: {
        if (tag == 42) {
         parse_page:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_page()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Services.GetLocationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Services.GetLocationRequest)
  return false;
#undef DO_
}

void GetLocationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Services.GetLocationRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetLocationRequest.search_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->search_text(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetLocationRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string mac_address = 3;
  if (this->mac_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_address().data(), this->mac_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetLocationRequest.mac_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mac_address(), output);
  }

  // optional string device_name = 4;
  if (this->device_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name().data(), this->device_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetLocationRequest.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->device_name(), output);
  }

  // optional .Services.Page page = 5;
  if (this->has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->page_, output);
  }

  // @@protoc_insertion_point(serialize_end:Services.GetLocationRequest)
}

::google::protobuf::uint8* GetLocationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Services.GetLocationRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetLocationRequest.search_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->search_text(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetLocationRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string mac_address = 3;
  if (this->mac_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_address().data(), this->mac_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetLocationRequest.mac_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mac_address(), target);
  }

  // optional string device_name = 4;
  if (this->device_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name().data(), this->device_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetLocationRequest.device_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->device_name(), target);
  }

  // optional .Services.Page page = 5;
  if (this->has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->page_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Services.GetLocationRequest)
  return target;
}

int GetLocationRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Services.GetLocationRequest)
  int total_size = 0;

  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->search_text());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string mac_address = 3;
  if (this->mac_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac_address());
  }

  // optional string device_name = 4;
  if (this->device_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_name());
  }

  // optional .Services.Page page = 5;
  if (this->has_page()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->page_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLocationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Services.GetLocationRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetLocationRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLocationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Services.GetLocationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Services.GetLocationRequest)
    MergeFrom(*source);
  }
}

void GetLocationRequest::MergeFrom(const GetLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Services.GetLocationRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.search_text().size() > 0) {

    search_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_text_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.mac_address().size() > 0) {

    mac_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_address_);
  }
  if (from.device_name().size() > 0) {

    device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  if (from.has_page()) {
    mutable_page()->::Services::Page::MergeFrom(from.page());
  }
}

void GetLocationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Services.GetLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLocationRequest::CopyFrom(const GetLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Services.GetLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLocationRequest::IsInitialized() const {

  return true;
}

void GetLocationRequest::Swap(GetLocationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLocationRequest::InternalSwap(GetLocationRequest* other) {
  search_text_.Swap(&other->search_text_);
  name_.Swap(&other->name_);
  mac_address_.Swap(&other->mac_address_);
  device_name_.Swap(&other->device_name_);
  std::swap(page_, other->page_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLocationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLocationRequest_descriptor_;
  metadata.reflection = GetLocationRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetLocationRequest

// optional string search_text = 1;
void GetLocationRequest::clear_search_text() {
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetLocationRequest::search_text() const {
  // @@protoc_insertion_point(field_get:Services.GetLocationRequest.search_text)
  return search_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_search_text(const ::std::string& value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetLocationRequest.search_text)
}
 void GetLocationRequest::set_search_text(const char* value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetLocationRequest.search_text)
}
 void GetLocationRequest::set_search_text(const char* value, size_t size) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetLocationRequest.search_text)
}
 ::std::string* GetLocationRequest::mutable_search_text() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetLocationRequest.search_text)
  return search_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetLocationRequest::release_search_text() {
  // @@protoc_insertion_point(field_release:Services.GetLocationRequest.search_text)
  
  return search_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_allocated_search_text(::std::string* search_text) {
  if (search_text != NULL) {
    
  } else {
    
  }
  search_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_text);
  // @@protoc_insertion_point(field_set_allocated:Services.GetLocationRequest.search_text)
}

// optional string name = 2;
void GetLocationRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetLocationRequest::name() const {
  // @@protoc_insertion_point(field_get:Services.GetLocationRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetLocationRequest.name)
}
 void GetLocationRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetLocationRequest.name)
}
 void GetLocationRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetLocationRequest.name)
}
 ::std::string* GetLocationRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetLocationRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetLocationRequest::release_name() {
  // @@protoc_insertion_point(field_release:Services.GetLocationRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Services.GetLocationRequest.name)
}

// optional string mac_address = 3;
void GetLocationRequest::clear_mac_address() {
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetLocationRequest::mac_address() const {
  // @@protoc_insertion_point(field_get:Services.GetLocationRequest.mac_address)
  return mac_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_mac_address(const ::std::string& value) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetLocationRequest.mac_address)
}
 void GetLocationRequest::set_mac_address(const char* value) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetLocationRequest.mac_address)
}
 void GetLocationRequest::set_mac_address(const char* value, size_t size) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetLocationRequest.mac_address)
}
 ::std::string* GetLocationRequest::mutable_mac_address() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetLocationRequest.mac_address)
  return mac_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetLocationRequest::release_mac_address() {
  // @@protoc_insertion_point(field_release:Services.GetLocationRequest.mac_address)
  
  return mac_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_allocated_mac_address(::std::string* mac_address) {
  if (mac_address != NULL) {
    
  } else {
    
  }
  mac_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_address);
  // @@protoc_insertion_point(field_set_allocated:Services.GetLocationRequest.mac_address)
}

// optional string device_name = 4;
void GetLocationRequest::clear_device_name() {
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetLocationRequest::device_name() const {
  // @@protoc_insertion_point(field_get:Services.GetLocationRequest.device_name)
  return device_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_device_name(const ::std::string& value) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetLocationRequest.device_name)
}
 void GetLocationRequest::set_device_name(const char* value) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetLocationRequest.device_name)
}
 void GetLocationRequest::set_device_name(const char* value, size_t size) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetLocationRequest.device_name)
}
 ::std::string* GetLocationRequest::mutable_device_name() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetLocationRequest.device_name)
  return device_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetLocationRequest::release_device_name() {
  // @@protoc_insertion_point(field_release:Services.GetLocationRequest.device_name)
  
  return device_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_allocated_device_name(::std::string* device_name) {
  if (device_name != NULL) {
    
  } else {
    
  }
  device_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_name);
  // @@protoc_insertion_point(field_set_allocated:Services.GetLocationRequest.device_name)
}

// optional .Services.Page page = 5;
bool GetLocationRequest::has_page() const {
  return !_is_default_instance_ && page_ != NULL;
}
void GetLocationRequest::clear_page() {
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}
const ::Services::Page& GetLocationRequest::page() const {
  // @@protoc_insertion_point(field_get:Services.GetLocationRequest.page)
  return page_ != NULL ? *page_ : *default_instance_->page_;
}
::Services::Page* GetLocationRequest::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::Services::Page;
  }
  // @@protoc_insertion_point(field_mutable:Services.GetLocationRequest.page)
  return page_;
}
::Services::Page* GetLocationRequest::release_page() {
  // @@protoc_insertion_point(field_release:Services.GetLocationRequest.page)
  
  ::Services::Page* temp = page_;
  page_ = NULL;
  return temp;
}
void GetLocationRequest::set_allocated_page(::Services::Page* page) {
  delete page_;
  page_ = page;
  if (page) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Services.GetLocationRequest.page)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVisitRecordRequest::kSearchTextFieldNumber;
const int GetVisitRecordRequest::kStateFieldNumber;
const int GetVisitRecordRequest::kLocationsFieldNumber;
const int GetVisitRecordRequest::kPersonsFieldNumber;
const int GetVisitRecordRequest::kDatetimeFromFieldNumber;
const int GetVisitRecordRequest::kDatetimeToFieldNumber;
const int GetVisitRecordRequest::kCardFieldNumber;
const int GetVisitRecordRequest::kPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVisitRecordRequest::GetVisitRecordRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Services.GetVisitRecordRequest)
}

void GetVisitRecordRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  page_ = const_cast< ::Services::Page*>(&::Services::Page::default_instance());
}

GetVisitRecordRequest::GetVisitRecordRequest(const GetVisitRecordRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Services.GetVisitRecordRequest)
}

void GetVisitRecordRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  search_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  datetime_from_ = GOOGLE_LONGLONG(0);
  datetime_to_ = GOOGLE_LONGLONG(0);
  card_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_ = NULL;
}

GetVisitRecordRequest::~GetVisitRecordRequest() {
  // @@protoc_insertion_point(destructor:Services.GetVisitRecordRequest)
  SharedDtor();
}

void GetVisitRecordRequest::SharedDtor() {
  search_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete page_;
  }
}

void GetVisitRecordRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetVisitRecordRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetVisitRecordRequest_descriptor_;
}

const GetVisitRecordRequest& GetVisitRecordRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_services_2fqueries_2eproto();
  return *default_instance_;
}

GetVisitRecordRequest* GetVisitRecordRequest::default_instance_ = NULL;

GetVisitRecordRequest* GetVisitRecordRequest::New(::google::protobuf::Arena* arena) const {
  GetVisitRecordRequest* n = new GetVisitRecordRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetVisitRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Services.GetVisitRecordRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GetVisitRecordRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetVisitRecordRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(datetime_from_, datetime_to_);
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  locations_.Clear();
  persons_.Clear();
}

bool GetVisitRecordRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Services.GetVisitRecordRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string search_text = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search_text().data(), this->search_text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetVisitRecordRequest.search_text"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // optional .DataTypes.AccessState state = 2;
      case 2: {
        if (tag == 16) {
         parse_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::DataTypes::AccessState >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_locations;
        break;
      }

      // repeated string locations = 3;
      case 3: {
        if (tag == 26) {
         parse_locations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_locations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locations(this->locations_size() - 1).data(),
            this->locations(this->locations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetVisitRecordRequest.locations"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_locations;
        if (input->ExpectTag(34)) goto parse_persons;
        break;
      }

      // repeated string persons = 4;
      case 4: {
        if (tag == 34) {
         parse_persons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_persons()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->persons(this->persons_size() - 1).data(),
            this->persons(this->persons_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetVisitRecordRequest.persons"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_persons;
        if (input->ExpectTag(40)) goto parse_datetime_from;
        break;
      }

      // optional int64 datetime_from = 5;
      case 5: {
        if (tag == 40) {
         parse_datetime_from:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &datetime_from_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_datetime_to;
        break;
      }

      // optional int64 datetime_to = 6;
      case 6: {
        if (tag == 48) {
         parse_datetime_to:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &datetime_to_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_card;
        break;
      }

      // optional string card = 7;
      case 7: {
        if (tag == 58) {
         parse_card:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_card()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->card().data(), this->card().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetVisitRecordRequest.card"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_page;
        break;
      }

      // optional .Services.Page page = 8;
      case 8: {
        if (tag == 66) {
         parse_page:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_page()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Services.GetVisitRecordRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Services.GetVisitRecordRequest)
  return false;
#undef DO_
}

void GetVisitRecordRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Services.GetVisitRecordRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetVisitRecordRequest.search_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->search_text(), output);
  }

  // optional .DataTypes.AccessState state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // repeated string locations = 3;
  for (int i = 0; i < this->locations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), this->locations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetVisitRecordRequest.locations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->locations(i), output);
  }

  // repeated string persons = 4;
  for (int i = 0; i < this->persons_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->persons(i).data(), this->persons(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetVisitRecordRequest.persons");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->persons(i), output);
  }

  // optional int64 datetime_from = 5;
  if (this->datetime_from() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->datetime_from(), output);
  }

  // optional int64 datetime_to = 6;
  if (this->datetime_to() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->datetime_to(), output);
  }

  // optional string card = 7;
  if (this->card().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card().data(), this->card().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetVisitRecordRequest.card");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->card(), output);
  }

  // optional .Services.Page page = 8;
  if (this->has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->page_, output);
  }

  // @@protoc_insertion_point(serialize_end:Services.GetVisitRecordRequest)
}

::google::protobuf::uint8* GetVisitRecordRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Services.GetVisitRecordRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetVisitRecordRequest.search_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->search_text(), target);
  }

  // optional .DataTypes.AccessState state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // repeated string locations = 3;
  for (int i = 0; i < this->locations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locations(i).data(), this->locations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetVisitRecordRequest.locations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->locations(i), target);
  }

  // repeated string persons = 4;
  for (int i = 0; i < this->persons_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->persons(i).data(), this->persons(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetVisitRecordRequest.persons");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->persons(i), target);
  }

  // optional int64 datetime_from = 5;
  if (this->datetime_from() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->datetime_from(), target);
  }

  // optional int64 datetime_to = 6;
  if (this->datetime_to() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->datetime_to(), target);
  }

  // optional string card = 7;
  if (this->card().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card().data(), this->card().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetVisitRecordRequest.card");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->card(), target);
  }

  // optional .Services.Page page = 8;
  if (this->has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, *this->page_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Services.GetVisitRecordRequest)
  return target;
}

int GetVisitRecordRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Services.GetVisitRecordRequest)
  int total_size = 0;

  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->search_text());
  }

  // optional .DataTypes.AccessState state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // optional int64 datetime_from = 5;
  if (this->datetime_from() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->datetime_from());
  }

  // optional int64 datetime_to = 6;
  if (this->datetime_to() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->datetime_to());
  }

  // optional string card = 7;
  if (this->card().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->card());
  }

  // optional .Services.Page page = 8;
  if (this->has_page()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->page_);
  }

  // repeated string locations = 3;
  total_size += 1 * this->locations_size();
  for (int i = 0; i < this->locations_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->locations(i));
  }

  // repeated string persons = 4;
  total_size += 1 * this->persons_size();
  for (int i = 0; i < this->persons_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->persons(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetVisitRecordRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Services.GetVisitRecordRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetVisitRecordRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVisitRecordRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Services.GetVisitRecordRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Services.GetVisitRecordRequest)
    MergeFrom(*source);
  }
}

void GetVisitRecordRequest::MergeFrom(const GetVisitRecordRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Services.GetVisitRecordRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  locations_.MergeFrom(from.locations_);
  persons_.MergeFrom(from.persons_);
  if (from.search_text().size() > 0) {

    search_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_text_);
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.datetime_from() != 0) {
    set_datetime_from(from.datetime_from());
  }
  if (from.datetime_to() != 0) {
    set_datetime_to(from.datetime_to());
  }
  if (from.card().size() > 0) {

    card_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_);
  }
  if (from.has_page()) {
    mutable_page()->::Services::Page::MergeFrom(from.page());
  }
}

void GetVisitRecordRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Services.GetVisitRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVisitRecordRequest::CopyFrom(const GetVisitRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Services.GetVisitRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVisitRecordRequest::IsInitialized() const {

  return true;
}

void GetVisitRecordRequest::Swap(GetVisitRecordRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVisitRecordRequest::InternalSwap(GetVisitRecordRequest* other) {
  search_text_.Swap(&other->search_text_);
  std::swap(state_, other->state_);
  locations_.UnsafeArenaSwap(&other->locations_);
  persons_.UnsafeArenaSwap(&other->persons_);
  std::swap(datetime_from_, other->datetime_from_);
  std::swap(datetime_to_, other->datetime_to_);
  card_.Swap(&other->card_);
  std::swap(page_, other->page_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetVisitRecordRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetVisitRecordRequest_descriptor_;
  metadata.reflection = GetVisitRecordRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetVisitRecordRequest

// optional string search_text = 1;
void GetVisitRecordRequest::clear_search_text() {
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetVisitRecordRequest::search_text() const {
  // @@protoc_insertion_point(field_get:Services.GetVisitRecordRequest.search_text)
  return search_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetVisitRecordRequest::set_search_text(const ::std::string& value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetVisitRecordRequest.search_text)
}
 void GetVisitRecordRequest::set_search_text(const char* value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetVisitRecordRequest.search_text)
}
 void GetVisitRecordRequest::set_search_text(const char* value, size_t size) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetVisitRecordRequest.search_text)
}
 ::std::string* GetVisitRecordRequest::mutable_search_text() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetVisitRecordRequest.search_text)
  return search_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetVisitRecordRequest::release_search_text() {
  // @@protoc_insertion_point(field_release:Services.GetVisitRecordRequest.search_text)
  
  return search_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetVisitRecordRequest::set_allocated_search_text(::std::string* search_text) {
  if (search_text != NULL) {
    
  } else {
    
  }
  search_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_text);
  // @@protoc_insertion_point(field_set_allocated:Services.GetVisitRecordRequest.search_text)
}

// optional .DataTypes.AccessState state = 2;
void GetVisitRecordRequest::clear_state() {
  state_ = 0;
}
 ::DataTypes::AccessState GetVisitRecordRequest::state() const {
  // @@protoc_insertion_point(field_get:Services.GetVisitRecordRequest.state)
  return static_cast< ::DataTypes::AccessState >(state_);
}
 void GetVisitRecordRequest::set_state(::DataTypes::AccessState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:Services.GetVisitRecordRequest.state)
}

// repeated string locations = 3;
int GetVisitRecordRequest::locations_size() const {
  return locations_.size();
}
void GetVisitRecordRequest::clear_locations() {
  locations_.Clear();
}
 const ::std::string& GetVisitRecordRequest::locations(int index) const {
  // @@protoc_insertion_point(field_get:Services.GetVisitRecordRequest.locations)
  return locations_.Get(index);
}
 ::std::string* GetVisitRecordRequest::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:Services.GetVisitRecordRequest.locations)
  return locations_.Mutable(index);
}
 void GetVisitRecordRequest::set_locations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Services.GetVisitRecordRequest.locations)
  locations_.Mutable(index)->assign(value);
}
 void GetVisitRecordRequest::set_locations(int index, const char* value) {
  locations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Services.GetVisitRecordRequest.locations)
}
 void GetVisitRecordRequest::set_locations(int index, const char* value, size_t size) {
  locations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Services.GetVisitRecordRequest.locations)
}
 ::std::string* GetVisitRecordRequest::add_locations() {
  // @@protoc_insertion_point(field_add_mutable:Services.GetVisitRecordRequest.locations)
  return locations_.Add();
}
 void GetVisitRecordRequest::add_locations(const ::std::string& value) {
  locations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Services.GetVisitRecordRequest.locations)
}
 void GetVisitRecordRequest::add_locations(const char* value) {
  locations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Services.GetVisitRecordRequest.locations)
}
 void GetVisitRecordRequest::add_locations(const char* value, size_t size) {
  locations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Services.GetVisitRecordRequest.locations)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetVisitRecordRequest::locations() const {
  // @@protoc_insertion_point(field_list:Services.GetVisitRecordRequest.locations)
  return locations_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
GetVisitRecordRequest::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:Services.GetVisitRecordRequest.locations)
  return &locations_;
}

// repeated string persons = 4;
int GetVisitRecordRequest::persons_size() const {
  return persons_.size();
}
void GetVisitRecordRequest::clear_persons() {
  persons_.Clear();
}
 const ::std::string& GetVisitRecordRequest::persons(int index) const {
  // @@protoc_insertion_point(field_get:Services.GetVisitRecordRequest.persons)
  return persons_.Get(index);
}
 ::std::string* GetVisitRecordRequest::mutable_persons(int index) {
  // @@protoc_insertion_point(field_mutable:Services.GetVisitRecordRequest.persons)
  return persons_.Mutable(index);
}
 void GetVisitRecordRequest::set_persons(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Services.GetVisitRecordRequest.persons)
  persons_.Mutable(index)->assign(value);
}
 void GetVisitRecordRequest::set_persons(int index, const char* value) {
  persons_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Services.GetVisitRecordRequest.persons)
}
 void GetVisitRecordRequest::set_persons(int index, const char* value, size_t size) {
  persons_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Services.GetVisitRecordRequest.persons)
}
 ::std::string* GetVisitRecordRequest::add_persons() {
  // @@protoc_insertion_point(field_add_mutable:Services.GetVisitRecordRequest.persons)
  return persons_.Add();
}
 void GetVisitRecordRequest::add_persons(const ::std::string& value) {
  persons_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Services.GetVisitRecordRequest.persons)
}
 void GetVisitRecordRequest::add_persons(const char* value) {
  persons_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Services.GetVisitRecordRequest.persons)
}
 void GetVisitRecordRequest::add_persons(const char* value, size_t size) {
  persons_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Services.GetVisitRecordRequest.persons)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetVisitRecordRequest::persons() const {
  // @@protoc_insertion_point(field_list:Services.GetVisitRecordRequest.persons)
  return persons_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
GetVisitRecordRequest::mutable_persons() {
  // @@protoc_insertion_point(field_mutable_list:Services.GetVisitRecordRequest.persons)
  return &persons_;
}

// optional int64 datetime_from = 5;
void GetVisitRecordRequest::clear_datetime_from() {
  datetime_from_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 GetVisitRecordRequest::datetime_from() const {
  // @@protoc_insertion_point(field_get:Services.GetVisitRecordRequest.datetime_from)
  return datetime_from_;
}
 void GetVisitRecordRequest::set_datetime_from(::google::protobuf::int64 value) {
  
  datetime_from_ = value;
  // @@protoc_insertion_point(field_set:Services.GetVisitRecordRequest.datetime_from)
}

// optional int64 datetime_to = 6;
void GetVisitRecordRequest::clear_datetime_to() {
  datetime_to_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 GetVisitRecordRequest::datetime_to() const {
  // @@protoc_insertion_point(field_get:Services.GetVisitRecordRequest.datetime_to)
  return datetime_to_;
}
 void GetVisitRecordRequest::set_datetime_to(::google::protobuf::int64 value) {
  
  datetime_to_ = value;
  // @@protoc_insertion_point(field_set:Services.GetVisitRecordRequest.datetime_to)
}

// optional string card = 7;
void GetVisitRecordRequest::clear_card() {
  card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetVisitRecordRequest::card() const {
  // @@protoc_insertion_point(field_get:Services.GetVisitRecordRequest.card)
  return card_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetVisitRecordRequest::set_card(const ::std::string& value) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetVisitRecordRequest.card)
}
 void GetVisitRecordRequest::set_card(const char* value) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetVisitRecordRequest.card)
}
 void GetVisitRecordRequest::set_card(const char* value, size_t size) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetVisitRecordRequest.card)
}
 ::std::string* GetVisitRecordRequest::mutable_card() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetVisitRecordRequest.card)
  return card_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetVisitRecordRequest::release_card() {
  // @@protoc_insertion_point(field_release:Services.GetVisitRecordRequest.card)
  
  return card_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetVisitRecordRequest::set_allocated_card(::std::string* card) {
  if (card != NULL) {
    
  } else {
    
  }
  card_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card);
  // @@protoc_insertion_point(field_set_allocated:Services.GetVisitRecordRequest.card)
}

// optional .Services.Page page = 8;
bool GetVisitRecordRequest::has_page() const {
  return !_is_default_instance_ && page_ != NULL;
}
void GetVisitRecordRequest::clear_page() {
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}
const ::Services::Page& GetVisitRecordRequest::page() const {
  // @@protoc_insertion_point(field_get:Services.GetVisitRecordRequest.page)
  return page_ != NULL ? *page_ : *default_instance_->page_;
}
::Services::Page* GetVisitRecordRequest::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::Services::Page;
  }
  // @@protoc_insertion_point(field_mutable:Services.GetVisitRecordRequest.page)
  return page_;
}
::Services::Page* GetVisitRecordRequest::release_page() {
  // @@protoc_insertion_point(field_release:Services.GetVisitRecordRequest.page)
  
  ::Services::Page* temp = page_;
  page_ = NULL;
  return temp;
}
void GetVisitRecordRequest::set_allocated_page(::Services::Page* page) {
  delete page_;
  page_ = page;
  if (page) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Services.GetVisitRecordRequest.page)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Page::kIndexFieldNumber;
const int Page::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Page::Page()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Services.Page)
}

void Page::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Page::Page(const Page& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Services.Page)
}

void Page::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  index_ = 0;
  size_ = 0;
}

Page::~Page() {
  // @@protoc_insertion_point(destructor:Services.Page)
  SharedDtor();
}

void Page::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Page::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Page::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Page_descriptor_;
}

const Page& Page::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_services_2fqueries_2eproto();
  return *default_instance_;
}

Page* Page::default_instance_ = NULL;

Page* Page::New(::google::protobuf::Arena* arena) const {
  Page* n = new Page;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Page::Clear() {
// @@protoc_insertion_point(message_clear_start:Services.Page)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Page, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Page*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(index_, size_);

#undef ZR_HELPER_
#undef ZR_

}

bool Page::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Services.Page)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_size;
        break;
      }

      // optional int32 size = 2;
      case 2: {
        if (tag == 16) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Services.Page)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Services.Page)
  return false;
#undef DO_
}

void Page::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Services.Page)
  // optional int32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // optional int32 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }

  // @@protoc_insertion_point(serialize_end:Services.Page)
}

::google::protobuf::uint8* Page::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Services.Page)
  // optional int32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // optional int32 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Services.Page)
  return target;
}

int Page::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Services.Page)
  int total_size = 0;

  // optional int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  // optional int32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Page::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Services.Page)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Page* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Page>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Services.Page)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Services.Page)
    MergeFrom(*source);
  }
}

void Page::MergeFrom(const Page& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Services.Page)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void Page::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Services.Page)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Page::CopyFrom(const Page& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Services.Page)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Page::IsInitialized() const {

  return true;
}

void Page::Swap(Page* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Page::InternalSwap(Page* other) {
  std::swap(index_, other->index_);
  std::swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Page::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Page_descriptor_;
  metadata.reflection = Page_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Page

// optional int32 index = 1;
void Page::clear_index() {
  index_ = 0;
}
 ::google::protobuf::int32 Page::index() const {
  // @@protoc_insertion_point(field_get:Services.Page.index)
  return index_;
}
 void Page::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:Services.Page.index)
}

// optional int32 size = 2;
void Page::clear_size() {
  size_ = 0;
}
 ::google::protobuf::int32 Page::size() const {
  // @@protoc_insertion_point(field_get:Services.Page.size)
  return size_;
}
 void Page::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:Services.Page.size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCardRequest::kSearchTextFieldNumber;
const int GetCardRequest::kUniqueIdentifierFieldNumber;
const int GetCardRequest::kOwnersFieldNumber;
const int GetCardRequest::kPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCardRequest::GetCardRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Services.GetCardRequest)
}

void GetCardRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  page_ = const_cast< ::Services::Page*>(&::Services::Page::default_instance());
}

GetCardRequest::GetCardRequest(const GetCardRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Services.GetCardRequest)
}

void GetCardRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  search_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unique_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_ = NULL;
}

GetCardRequest::~GetCardRequest() {
  // @@protoc_insertion_point(destructor:Services.GetCardRequest)
  SharedDtor();
}

void GetCardRequest::SharedDtor() {
  search_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unique_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete page_;
  }
}

void GetCardRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCardRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetCardRequest_descriptor_;
}

const GetCardRequest& GetCardRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_services_2fqueries_2eproto();
  return *default_instance_;
}

GetCardRequest* GetCardRequest::default_instance_ = NULL;

GetCardRequest* GetCardRequest::New(::google::protobuf::Arena* arena) const {
  GetCardRequest* n = new GetCardRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetCardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Services.GetCardRequest)
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unique_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
  owners_.Clear();
}

bool GetCardRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Services.GetCardRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string search_text = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search_text().data(), this->search_text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetCardRequest.search_text"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_unique_identifier;
        break;
      }

      // optional string unique_identifier = 2;
      case 2: {
        if (tag == 18) {
         parse_unique_identifier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unique_identifier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unique_identifier().data(), this->unique_identifier().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetCardRequest.unique_identifier"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_owners;
        break;
      }

      // repeated string owners = 3;
      case 3: {
        if (tag == 26) {
         parse_owners:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_owners()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->owners(this->owners_size() - 1).data(),
            this->owners(this->owners_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetCardRequest.owners"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_owners;
        if (input->ExpectTag(34)) goto parse_page;
        break;
      }

      // optional .Services.Page page = 4;
      case 4: {
        if (tag == 34) {
         parse_page:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_page()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Services.GetCardRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Services.GetCardRequest)
  return false;
#undef DO_
}

void GetCardRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Services.GetCardRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetCardRequest.search_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->search_text(), output);
  }

  // optional string unique_identifier = 2;
  if (this->unique_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unique_identifier().data(), this->unique_identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetCardRequest.unique_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->unique_identifier(), output);
  }

  // repeated string owners = 3;
  for (int i = 0; i < this->owners_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owners(i).data(), this->owners(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetCardRequest.owners");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->owners(i), output);
  }

  // optional .Services.Page page = 4;
  if (this->has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->page_, output);
  }

  // @@protoc_insertion_point(serialize_end:Services.GetCardRequest)
}

::google::protobuf::uint8* GetCardRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Services.GetCardRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetCardRequest.search_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->search_text(), target);
  }

  // optional string unique_identifier = 2;
  if (this->unique_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unique_identifier().data(), this->unique_identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetCardRequest.unique_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->unique_identifier(), target);
  }

  // repeated string owners = 3;
  for (int i = 0; i < this->owners_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owners(i).data(), this->owners(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetCardRequest.owners");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->owners(i), target);
  }

  // optional .Services.Page page = 4;
  if (this->has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->page_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Services.GetCardRequest)
  return target;
}

int GetCardRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Services.GetCardRequest)
  int total_size = 0;

  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->search_text());
  }

  // optional string unique_identifier = 2;
  if (this->unique_identifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unique_identifier());
  }

  // optional .Services.Page page = 4;
  if (this->has_page()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->page_);
  }

  // repeated string owners = 3;
  total_size += 1 * this->owners_size();
  for (int i = 0; i < this->owners_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->owners(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCardRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Services.GetCardRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetCardRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCardRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Services.GetCardRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Services.GetCardRequest)
    MergeFrom(*source);
  }
}

void GetCardRequest::MergeFrom(const GetCardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Services.GetCardRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  owners_.MergeFrom(from.owners_);
  if (from.search_text().size() > 0) {

    search_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_text_);
  }
  if (from.unique_identifier().size() > 0) {

    unique_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unique_identifier_);
  }
  if (from.has_page()) {
    mutable_page()->::Services::Page::MergeFrom(from.page());
  }
}

void GetCardRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Services.GetCardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCardRequest::CopyFrom(const GetCardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Services.GetCardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCardRequest::IsInitialized() const {

  return true;
}

void GetCardRequest::Swap(GetCardRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCardRequest::InternalSwap(GetCardRequest* other) {
  search_text_.Swap(&other->search_text_);
  unique_identifier_.Swap(&other->unique_identifier_);
  owners_.UnsafeArenaSwap(&other->owners_);
  std::swap(page_, other->page_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetCardRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetCardRequest_descriptor_;
  metadata.reflection = GetCardRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetCardRequest

// optional string search_text = 1;
void GetCardRequest::clear_search_text() {
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetCardRequest::search_text() const {
  // @@protoc_insertion_point(field_get:Services.GetCardRequest.search_text)
  return search_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCardRequest::set_search_text(const ::std::string& value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetCardRequest.search_text)
}
 void GetCardRequest::set_search_text(const char* value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetCardRequest.search_text)
}
 void GetCardRequest::set_search_text(const char* value, size_t size) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetCardRequest.search_text)
}
 ::std::string* GetCardRequest::mutable_search_text() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetCardRequest.search_text)
  return search_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetCardRequest::release_search_text() {
  // @@protoc_insertion_point(field_release:Services.GetCardRequest.search_text)
  
  return search_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCardRequest::set_allocated_search_text(::std::string* search_text) {
  if (search_text != NULL) {
    
  } else {
    
  }
  search_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_text);
  // @@protoc_insertion_point(field_set_allocated:Services.GetCardRequest.search_text)
}

// optional string unique_identifier = 2;
void GetCardRequest::clear_unique_identifier() {
  unique_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetCardRequest::unique_identifier() const {
  // @@protoc_insertion_point(field_get:Services.GetCardRequest.unique_identifier)
  return unique_identifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCardRequest::set_unique_identifier(const ::std::string& value) {
  
  unique_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetCardRequest.unique_identifier)
}
 void GetCardRequest::set_unique_identifier(const char* value) {
  
  unique_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetCardRequest.unique_identifier)
}
 void GetCardRequest::set_unique_identifier(const char* value, size_t size) {
  
  unique_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetCardRequest.unique_identifier)
}
 ::std::string* GetCardRequest::mutable_unique_identifier() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetCardRequest.unique_identifier)
  return unique_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetCardRequest::release_unique_identifier() {
  // @@protoc_insertion_point(field_release:Services.GetCardRequest.unique_identifier)
  
  return unique_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCardRequest::set_allocated_unique_identifier(::std::string* unique_identifier) {
  if (unique_identifier != NULL) {
    
  } else {
    
  }
  unique_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unique_identifier);
  // @@protoc_insertion_point(field_set_allocated:Services.GetCardRequest.unique_identifier)
}

// repeated string owners = 3;
int GetCardRequest::owners_size() const {
  return owners_.size();
}
void GetCardRequest::clear_owners() {
  owners_.Clear();
}
 const ::std::string& GetCardRequest::owners(int index) const {
  // @@protoc_insertion_point(field_get:Services.GetCardRequest.owners)
  return owners_.Get(index);
}
 ::std::string* GetCardRequest::mutable_owners(int index) {
  // @@protoc_insertion_point(field_mutable:Services.GetCardRequest.owners)
  return owners_.Mutable(index);
}
 void GetCardRequest::set_owners(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Services.GetCardRequest.owners)
  owners_.Mutable(index)->assign(value);
}
 void GetCardRequest::set_owners(int index, const char* value) {
  owners_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Services.GetCardRequest.owners)
}
 void GetCardRequest::set_owners(int index, const char* value, size_t size) {
  owners_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Services.GetCardRequest.owners)
}
 ::std::string* GetCardRequest::add_owners() {
  // @@protoc_insertion_point(field_add_mutable:Services.GetCardRequest.owners)
  return owners_.Add();
}
 void GetCardRequest::add_owners(const ::std::string& value) {
  owners_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Services.GetCardRequest.owners)
}
 void GetCardRequest::add_owners(const char* value) {
  owners_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Services.GetCardRequest.owners)
}
 void GetCardRequest::add_owners(const char* value, size_t size) {
  owners_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Services.GetCardRequest.owners)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetCardRequest::owners() const {
  // @@protoc_insertion_point(field_list:Services.GetCardRequest.owners)
  return owners_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
GetCardRequest::mutable_owners() {
  // @@protoc_insertion_point(field_mutable_list:Services.GetCardRequest.owners)
  return &owners_;
}

// optional .Services.Page page = 4;
bool GetCardRequest::has_page() const {
  return !_is_default_instance_ && page_ != NULL;
}
void GetCardRequest::clear_page() {
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}
const ::Services::Page& GetCardRequest::page() const {
  // @@protoc_insertion_point(field_get:Services.GetCardRequest.page)
  return page_ != NULL ? *page_ : *default_instance_->page_;
}
::Services::Page* GetCardRequest::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::Services::Page;
  }
  // @@protoc_insertion_point(field_mutable:Services.GetCardRequest.page)
  return page_;
}
::Services::Page* GetCardRequest::release_page() {
  // @@protoc_insertion_point(field_release:Services.GetCardRequest.page)
  
  ::Services::Page* temp = page_;
  page_ = NULL;
  return temp;
}
void GetCardRequest::set_allocated_page(::Services::Page* page) {
  delete page_;
  page_ = page;
  if (page) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Services.GetCardRequest.page)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Services

// @@protoc_insertion_point(global_scope)
