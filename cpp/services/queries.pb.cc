// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/queries.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "services/queries.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Services {

namespace {

const ::google::protobuf::Descriptor* GetPhotoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetPhotoRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* GetPhotoRequest_PhotoResponseType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* GetPersonRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetPersonRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetLocationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLocationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetVisitorRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetVisitorRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* Page_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Page_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_services_2fqueries_2eproto() {
  protobuf_AddDesc_services_2fqueries_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "services/queries.proto");
  GOOGLE_CHECK(file != NULL);
  GetPhotoRequest_descriptor_ = file->message_type(0);
  static const int GetPhotoRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPhotoRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPhotoRequest, persons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPhotoRequest, photos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPhotoRequest, page_),
  };
  GetPhotoRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetPhotoRequest_descriptor_,
      GetPhotoRequest::default_instance_,
      GetPhotoRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetPhotoRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPhotoRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPhotoRequest, _is_default_instance_));
  GetPhotoRequest_PhotoResponseType_descriptor_ = GetPhotoRequest_descriptor_->enum_type(0);
  GetPersonRequest_descriptor_ = file->message_type(1);
  static const int GetPersonRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, search_text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, first_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, last_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, page_),
  };
  GetPersonRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetPersonRequest_descriptor_,
      GetPersonRequest::default_instance_,
      GetPersonRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetPersonRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, _is_default_instance_));
  GetLocationRequest_descriptor_ = file->message_type(2);
  static const int GetLocationRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, search_text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, mac_address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, device_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, page_),
  };
  GetLocationRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetLocationRequest_descriptor_,
      GetLocationRequest::default_instance_,
      GetLocationRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetLocationRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, _is_default_instance_));
  GetVisitorRequest_descriptor_ = file->message_type(3);
  static const int GetVisitorRequest_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitorRequest, search_text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitorRequest, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitorRequest, locations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitorRequest, persons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitorRequest, datetime_from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitorRequest, datetime_to_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitorRequest, page_),
  };
  GetVisitorRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetVisitorRequest_descriptor_,
      GetVisitorRequest::default_instance_,
      GetVisitorRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetVisitorRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitorRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitorRequest, _is_default_instance_));
  Page_descriptor_ = file->message_type(4);
  static const int Page_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, size_),
  };
  Page_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Page_descriptor_,
      Page::default_instance_,
      Page_offsets_,
      -1,
      -1,
      -1,
      sizeof(Page),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_services_2fqueries_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetPhotoRequest_descriptor_, &GetPhotoRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetPersonRequest_descriptor_, &GetPersonRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetLocationRequest_descriptor_, &GetLocationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetVisitorRequest_descriptor_, &GetVisitorRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Page_descriptor_, &Page::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_services_2fqueries_2eproto() {
  delete GetPhotoRequest::default_instance_;
  delete GetPhotoRequest_reflection_;
  delete GetPersonRequest::default_instance_;
  delete GetPersonRequest_reflection_;
  delete GetLocationRequest::default_instance_;
  delete GetLocationRequest_reflection_;
  delete GetVisitorRequest::default_instance_;
  delete GetVisitorRequest_reflection_;
  delete Page::default_instance_;
  delete Page_reflection_;
}

void protobuf_AddDesc_services_2fqueries_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DataTypes::protobuf_AddDesc_datatypes_2fvisitor_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026services/queries.proto\022\010Services\032\027data"
    "types/visitor.proto\"\325\001\n\017GetPhotoRequest\022"
    "9\n\004type\030\001 \001(\0162+.Services.GetPhotoRequest"
    ".PhotoResponseType\022\017\n\007persons\030\002 \003(\003\022\016\n\006p"
    "hotos\030\003 \003(\003\022\034\n\004page\030\004 \001(\0132\016.Services.Pag"
    "e\"H\n\021PhotoResponseType\022\r\n\tUndefined\020\000\022\010\n"
    "\004Full\020\001\022\r\n\tOnlyBytes\020\002\022\013\n\007NoBytes\020\003\"l\n\020G"
    "etPersonRequest\022\023\n\013search_text\030\001 \001(\t\022\022\n\n"
    "first_name\030\002 \001(\t\022\021\n\tlast_name\030\003 \001(\t\022\034\n\004p"
    "age\030\004 \001(\0132\016.Services.Page\"\177\n\022GetLocation"
    "Request\022\023\n\013search_text\030\001 \001(\t\022\014\n\004name\030\002 \001"
    "(\t\022\023\n\013mac_address\030\003 \001(\t\022\023\n\013device_name\030\004"
    " \001(\t\022\034\n\004page\030\005 \001(\0132\016.Services.Page\"\275\001\n\021G"
    "etVisitorRequest\022\023\n\013search_text\030\001 \001(\t\022%\n"
    "\005state\030\002 \001(\0162\026.DataTypes.AccessState\022\021\n\t"
    "locations\030\003 \003(\003\022\017\n\007persons\030\004 \003(\003\022\025\n\rdate"
    "time_from\030\005 \001(\003\022\023\n\013datetime_to\030\006 \001(\003\022\034\n\004"
    "page\030\007 \001(\0132\016.Services.Page\"#\n\004Page\022\r\n\005in"
    "dex\030\001 \001(\005\022\014\n\004size\030\002 \001(\005B\017\n\007ex.grpc\242\002\003RTG"
    "b\006proto3", 768);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "services/queries.proto", &protobuf_RegisterTypes);
  GetPhotoRequest::default_instance_ = new GetPhotoRequest();
  GetPersonRequest::default_instance_ = new GetPersonRequest();
  GetLocationRequest::default_instance_ = new GetLocationRequest();
  GetVisitorRequest::default_instance_ = new GetVisitorRequest();
  Page::default_instance_ = new Page();
  GetPhotoRequest::default_instance_->InitAsDefaultInstance();
  GetPersonRequest::default_instance_->InitAsDefaultInstance();
  GetLocationRequest::default_instance_->InitAsDefaultInstance();
  GetVisitorRequest::default_instance_->InitAsDefaultInstance();
  Page::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_services_2fqueries_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_services_2fqueries_2eproto {
  StaticDescriptorInitializer_services_2fqueries_2eproto() {
    protobuf_AddDesc_services_2fqueries_2eproto();
  }
} static_descriptor_initializer_services_2fqueries_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* GetPhotoRequest_PhotoResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetPhotoRequest_PhotoResponseType_descriptor_;
}
bool GetPhotoRequest_PhotoResponseType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetPhotoRequest_PhotoResponseType GetPhotoRequest::Undefined;
const GetPhotoRequest_PhotoResponseType GetPhotoRequest::Full;
const GetPhotoRequest_PhotoResponseType GetPhotoRequest::OnlyBytes;
const GetPhotoRequest_PhotoResponseType GetPhotoRequest::NoBytes;
const GetPhotoRequest_PhotoResponseType GetPhotoRequest::PhotoResponseType_MIN;
const GetPhotoRequest_PhotoResponseType GetPhotoRequest::PhotoResponseType_MAX;
const int GetPhotoRequest::PhotoResponseType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPhotoRequest::kTypeFieldNumber;
const int GetPhotoRequest::kPersonsFieldNumber;
const int GetPhotoRequest::kPhotosFieldNumber;
const int GetPhotoRequest::kPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPhotoRequest::GetPhotoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Services.GetPhotoRequest)
}

void GetPhotoRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  page_ = const_cast< ::Services::Page*>(&::Services::Page::default_instance());
}

GetPhotoRequest::GetPhotoRequest(const GetPhotoRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Services.GetPhotoRequest)
}

void GetPhotoRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  type_ = 0;
  page_ = NULL;
}

GetPhotoRequest::~GetPhotoRequest() {
  // @@protoc_insertion_point(destructor:Services.GetPhotoRequest)
  SharedDtor();
}

void GetPhotoRequest::SharedDtor() {
  if (this != default_instance_) {
    delete page_;
  }
}

void GetPhotoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPhotoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetPhotoRequest_descriptor_;
}

const GetPhotoRequest& GetPhotoRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_services_2fqueries_2eproto();
  return *default_instance_;
}

GetPhotoRequest* GetPhotoRequest::default_instance_ = NULL;

GetPhotoRequest* GetPhotoRequest::New(::google::protobuf::Arena* arena) const {
  GetPhotoRequest* n = new GetPhotoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPhotoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Services.GetPhotoRequest)
  type_ = 0;
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
  persons_.Clear();
  photos_.Clear();
}

bool GetPhotoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Services.GetPhotoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Services.GetPhotoRequest.PhotoResponseType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::Services::GetPhotoRequest_PhotoResponseType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_persons;
        break;
      }

      // repeated int64 persons = 2;
      case 2: {
        if (tag == 18) {
         parse_persons:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_persons())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18, input, this->mutable_persons())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_photos;
        break;
      }

      // repeated int64 photos = 3;
      case 3: {
        if (tag == 26) {
         parse_photos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_photos())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26, input, this->mutable_photos())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_page;
        break;
      }

      // optional .Services.Page page = 4;
      case 4: {
        if (tag == 34) {
         parse_page:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_page()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Services.GetPhotoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Services.GetPhotoRequest)
  return false;
#undef DO_
}

void GetPhotoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Services.GetPhotoRequest)
  // optional .Services.GetPhotoRequest.PhotoResponseType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // repeated int64 persons = 2;
  if (this->persons_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_persons_cached_byte_size_);
  }
  for (int i = 0; i < this->persons_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->persons(i), output);
  }

  // repeated int64 photos = 3;
  if (this->photos_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_photos_cached_byte_size_);
  }
  for (int i = 0; i < this->photos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->photos(i), output);
  }

  // optional .Services.Page page = 4;
  if (this->has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->page_, output);
  }

  // @@protoc_insertion_point(serialize_end:Services.GetPhotoRequest)
}

::google::protobuf::uint8* GetPhotoRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Services.GetPhotoRequest)
  // optional .Services.GetPhotoRequest.PhotoResponseType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // repeated int64 persons = 2;
  if (this->persons_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _persons_cached_byte_size_, target);
  }
  for (int i = 0; i < this->persons_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->persons(i), target);
  }

  // repeated int64 photos = 3;
  if (this->photos_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _photos_cached_byte_size_, target);
  }
  for (int i = 0; i < this->photos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->photos(i), target);
  }

  // optional .Services.Page page = 4;
  if (this->has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->page_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Services.GetPhotoRequest)
  return target;
}

int GetPhotoRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Services.GetPhotoRequest)
  int total_size = 0;

  // optional .Services.GetPhotoRequest.PhotoResponseType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional .Services.Page page = 4;
  if (this->has_page()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->page_);
  }

  // repeated int64 persons = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->persons_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->persons(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _persons_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 photos = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->photos_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->photos(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _photos_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPhotoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Services.GetPhotoRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetPhotoRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPhotoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Services.GetPhotoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Services.GetPhotoRequest)
    MergeFrom(*source);
  }
}

void GetPhotoRequest::MergeFrom(const GetPhotoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Services.GetPhotoRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  persons_.MergeFrom(from.persons_);
  photos_.MergeFrom(from.photos_);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.has_page()) {
    mutable_page()->::Services::Page::MergeFrom(from.page());
  }
}

void GetPhotoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Services.GetPhotoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPhotoRequest::CopyFrom(const GetPhotoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Services.GetPhotoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPhotoRequest::IsInitialized() const {

  return true;
}

void GetPhotoRequest::Swap(GetPhotoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPhotoRequest::InternalSwap(GetPhotoRequest* other) {
  std::swap(type_, other->type_);
  persons_.UnsafeArenaSwap(&other->persons_);
  photos_.UnsafeArenaSwap(&other->photos_);
  std::swap(page_, other->page_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPhotoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetPhotoRequest_descriptor_;
  metadata.reflection = GetPhotoRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPhotoRequest

// optional .Services.GetPhotoRequest.PhotoResponseType type = 1;
void GetPhotoRequest::clear_type() {
  type_ = 0;
}
 ::Services::GetPhotoRequest_PhotoResponseType GetPhotoRequest::type() const {
  // @@protoc_insertion_point(field_get:Services.GetPhotoRequest.type)
  return static_cast< ::Services::GetPhotoRequest_PhotoResponseType >(type_);
}
 void GetPhotoRequest::set_type(::Services::GetPhotoRequest_PhotoResponseType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Services.GetPhotoRequest.type)
}

// repeated int64 persons = 2;
int GetPhotoRequest::persons_size() const {
  return persons_.size();
}
void GetPhotoRequest::clear_persons() {
  persons_.Clear();
}
 ::google::protobuf::int64 GetPhotoRequest::persons(int index) const {
  // @@protoc_insertion_point(field_get:Services.GetPhotoRequest.persons)
  return persons_.Get(index);
}
 void GetPhotoRequest::set_persons(int index, ::google::protobuf::int64 value) {
  persons_.Set(index, value);
  // @@protoc_insertion_point(field_set:Services.GetPhotoRequest.persons)
}
 void GetPhotoRequest::add_persons(::google::protobuf::int64 value) {
  persons_.Add(value);
  // @@protoc_insertion_point(field_add:Services.GetPhotoRequest.persons)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GetPhotoRequest::persons() const {
  // @@protoc_insertion_point(field_list:Services.GetPhotoRequest.persons)
  return persons_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GetPhotoRequest::mutable_persons() {
  // @@protoc_insertion_point(field_mutable_list:Services.GetPhotoRequest.persons)
  return &persons_;
}

// repeated int64 photos = 3;
int GetPhotoRequest::photos_size() const {
  return photos_.size();
}
void GetPhotoRequest::clear_photos() {
  photos_.Clear();
}
 ::google::protobuf::int64 GetPhotoRequest::photos(int index) const {
  // @@protoc_insertion_point(field_get:Services.GetPhotoRequest.photos)
  return photos_.Get(index);
}
 void GetPhotoRequest::set_photos(int index, ::google::protobuf::int64 value) {
  photos_.Set(index, value);
  // @@protoc_insertion_point(field_set:Services.GetPhotoRequest.photos)
}
 void GetPhotoRequest::add_photos(::google::protobuf::int64 value) {
  photos_.Add(value);
  // @@protoc_insertion_point(field_add:Services.GetPhotoRequest.photos)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GetPhotoRequest::photos() const {
  // @@protoc_insertion_point(field_list:Services.GetPhotoRequest.photos)
  return photos_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GetPhotoRequest::mutable_photos() {
  // @@protoc_insertion_point(field_mutable_list:Services.GetPhotoRequest.photos)
  return &photos_;
}

// optional .Services.Page page = 4;
bool GetPhotoRequest::has_page() const {
  return !_is_default_instance_ && page_ != NULL;
}
void GetPhotoRequest::clear_page() {
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}
const ::Services::Page& GetPhotoRequest::page() const {
  // @@protoc_insertion_point(field_get:Services.GetPhotoRequest.page)
  return page_ != NULL ? *page_ : *default_instance_->page_;
}
::Services::Page* GetPhotoRequest::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::Services::Page;
  }
  // @@protoc_insertion_point(field_mutable:Services.GetPhotoRequest.page)
  return page_;
}
::Services::Page* GetPhotoRequest::release_page() {
  // @@protoc_insertion_point(field_release:Services.GetPhotoRequest.page)
  
  ::Services::Page* temp = page_;
  page_ = NULL;
  return temp;
}
void GetPhotoRequest::set_allocated_page(::Services::Page* page) {
  delete page_;
  page_ = page;
  if (page) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Services.GetPhotoRequest.page)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPersonRequest::kSearchTextFieldNumber;
const int GetPersonRequest::kFirstNameFieldNumber;
const int GetPersonRequest::kLastNameFieldNumber;
const int GetPersonRequest::kPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPersonRequest::GetPersonRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Services.GetPersonRequest)
}

void GetPersonRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  page_ = const_cast< ::Services::Page*>(&::Services::Page::default_instance());
}

GetPersonRequest::GetPersonRequest(const GetPersonRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Services.GetPersonRequest)
}

void GetPersonRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  search_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  first_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_ = NULL;
}

GetPersonRequest::~GetPersonRequest() {
  // @@protoc_insertion_point(destructor:Services.GetPersonRequest)
  SharedDtor();
}

void GetPersonRequest::SharedDtor() {
  search_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  first_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete page_;
  }
}

void GetPersonRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPersonRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetPersonRequest_descriptor_;
}

const GetPersonRequest& GetPersonRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_services_2fqueries_2eproto();
  return *default_instance_;
}

GetPersonRequest* GetPersonRequest::default_instance_ = NULL;

GetPersonRequest* GetPersonRequest::New(::google::protobuf::Arena* arena) const {
  GetPersonRequest* n = new GetPersonRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPersonRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Services.GetPersonRequest)
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}

bool GetPersonRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Services.GetPersonRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string search_text = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search_text().data(), this->search_text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetPersonRequest.search_text"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_first_name;
        break;
      }

      // optional string first_name = 2;
      case 2: {
        if (tag == 18) {
         parse_first_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_first_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->first_name().data(), this->first_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetPersonRequest.first_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_last_name;
        break;
      }

      // optional string last_name = 3;
      case 3: {
        if (tag == 26) {
         parse_last_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_name().data(), this->last_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetPersonRequest.last_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_page;
        break;
      }

      // optional .Services.Page page = 4;
      case 4: {
        if (tag == 34) {
         parse_page:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_page()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Services.GetPersonRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Services.GetPersonRequest)
  return false;
#undef DO_
}

void GetPersonRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Services.GetPersonRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetPersonRequest.search_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->search_text(), output);
  }

  // optional string first_name = 2;
  if (this->first_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->first_name().data(), this->first_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetPersonRequest.first_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->first_name(), output);
  }

  // optional string last_name = 3;
  if (this->last_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_name().data(), this->last_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetPersonRequest.last_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->last_name(), output);
  }

  // optional .Services.Page page = 4;
  if (this->has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->page_, output);
  }

  // @@protoc_insertion_point(serialize_end:Services.GetPersonRequest)
}

::google::protobuf::uint8* GetPersonRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Services.GetPersonRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetPersonRequest.search_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->search_text(), target);
  }

  // optional string first_name = 2;
  if (this->first_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->first_name().data(), this->first_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetPersonRequest.first_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->first_name(), target);
  }

  // optional string last_name = 3;
  if (this->last_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_name().data(), this->last_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetPersonRequest.last_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->last_name(), target);
  }

  // optional .Services.Page page = 4;
  if (this->has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->page_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Services.GetPersonRequest)
  return target;
}

int GetPersonRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Services.GetPersonRequest)
  int total_size = 0;

  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->search_text());
  }

  // optional string first_name = 2;
  if (this->first_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->first_name());
  }

  // optional string last_name = 3;
  if (this->last_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_name());
  }

  // optional .Services.Page page = 4;
  if (this->has_page()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->page_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPersonRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Services.GetPersonRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetPersonRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPersonRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Services.GetPersonRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Services.GetPersonRequest)
    MergeFrom(*source);
  }
}

void GetPersonRequest::MergeFrom(const GetPersonRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Services.GetPersonRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.search_text().size() > 0) {

    search_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_text_);
  }
  if (from.first_name().size() > 0) {

    first_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.first_name_);
  }
  if (from.last_name().size() > 0) {

    last_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_name_);
  }
  if (from.has_page()) {
    mutable_page()->::Services::Page::MergeFrom(from.page());
  }
}

void GetPersonRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Services.GetPersonRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPersonRequest::CopyFrom(const GetPersonRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Services.GetPersonRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPersonRequest::IsInitialized() const {

  return true;
}

void GetPersonRequest::Swap(GetPersonRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPersonRequest::InternalSwap(GetPersonRequest* other) {
  search_text_.Swap(&other->search_text_);
  first_name_.Swap(&other->first_name_);
  last_name_.Swap(&other->last_name_);
  std::swap(page_, other->page_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPersonRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetPersonRequest_descriptor_;
  metadata.reflection = GetPersonRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPersonRequest

// optional string search_text = 1;
void GetPersonRequest::clear_search_text() {
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetPersonRequest::search_text() const {
  // @@protoc_insertion_point(field_get:Services.GetPersonRequest.search_text)
  return search_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_search_text(const ::std::string& value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetPersonRequest.search_text)
}
 void GetPersonRequest::set_search_text(const char* value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetPersonRequest.search_text)
}
 void GetPersonRequest::set_search_text(const char* value, size_t size) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetPersonRequest.search_text)
}
 ::std::string* GetPersonRequest::mutable_search_text() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetPersonRequest.search_text)
  return search_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetPersonRequest::release_search_text() {
  // @@protoc_insertion_point(field_release:Services.GetPersonRequest.search_text)
  
  return search_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_allocated_search_text(::std::string* search_text) {
  if (search_text != NULL) {
    
  } else {
    
  }
  search_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_text);
  // @@protoc_insertion_point(field_set_allocated:Services.GetPersonRequest.search_text)
}

// optional string first_name = 2;
void GetPersonRequest::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetPersonRequest::first_name() const {
  // @@protoc_insertion_point(field_get:Services.GetPersonRequest.first_name)
  return first_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_first_name(const ::std::string& value) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetPersonRequest.first_name)
}
 void GetPersonRequest::set_first_name(const char* value) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetPersonRequest.first_name)
}
 void GetPersonRequest::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetPersonRequest.first_name)
}
 ::std::string* GetPersonRequest::mutable_first_name() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetPersonRequest.first_name)
  return first_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetPersonRequest::release_first_name() {
  // @@protoc_insertion_point(field_release:Services.GetPersonRequest.first_name)
  
  return first_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_allocated_first_name(::std::string* first_name) {
  if (first_name != NULL) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:Services.GetPersonRequest.first_name)
}

// optional string last_name = 3;
void GetPersonRequest::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetPersonRequest::last_name() const {
  // @@protoc_insertion_point(field_get:Services.GetPersonRequest.last_name)
  return last_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_last_name(const ::std::string& value) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetPersonRequest.last_name)
}
 void GetPersonRequest::set_last_name(const char* value) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetPersonRequest.last_name)
}
 void GetPersonRequest::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetPersonRequest.last_name)
}
 ::std::string* GetPersonRequest::mutable_last_name() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetPersonRequest.last_name)
  return last_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetPersonRequest::release_last_name() {
  // @@protoc_insertion_point(field_release:Services.GetPersonRequest.last_name)
  
  return last_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_allocated_last_name(::std::string* last_name) {
  if (last_name != NULL) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:Services.GetPersonRequest.last_name)
}

// optional .Services.Page page = 4;
bool GetPersonRequest::has_page() const {
  return !_is_default_instance_ && page_ != NULL;
}
void GetPersonRequest::clear_page() {
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}
const ::Services::Page& GetPersonRequest::page() const {
  // @@protoc_insertion_point(field_get:Services.GetPersonRequest.page)
  return page_ != NULL ? *page_ : *default_instance_->page_;
}
::Services::Page* GetPersonRequest::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::Services::Page;
  }
  // @@protoc_insertion_point(field_mutable:Services.GetPersonRequest.page)
  return page_;
}
::Services::Page* GetPersonRequest::release_page() {
  // @@protoc_insertion_point(field_release:Services.GetPersonRequest.page)
  
  ::Services::Page* temp = page_;
  page_ = NULL;
  return temp;
}
void GetPersonRequest::set_allocated_page(::Services::Page* page) {
  delete page_;
  page_ = page;
  if (page) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Services.GetPersonRequest.page)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLocationRequest::kSearchTextFieldNumber;
const int GetLocationRequest::kNameFieldNumber;
const int GetLocationRequest::kMacAddressFieldNumber;
const int GetLocationRequest::kDeviceNameFieldNumber;
const int GetLocationRequest::kPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLocationRequest::GetLocationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Services.GetLocationRequest)
}

void GetLocationRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  page_ = const_cast< ::Services::Page*>(&::Services::Page::default_instance());
}

GetLocationRequest::GetLocationRequest(const GetLocationRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Services.GetLocationRequest)
}

void GetLocationRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  search_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_ = NULL;
}

GetLocationRequest::~GetLocationRequest() {
  // @@protoc_insertion_point(destructor:Services.GetLocationRequest)
  SharedDtor();
}

void GetLocationRequest::SharedDtor() {
  search_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete page_;
  }
}

void GetLocationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLocationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLocationRequest_descriptor_;
}

const GetLocationRequest& GetLocationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_services_2fqueries_2eproto();
  return *default_instance_;
}

GetLocationRequest* GetLocationRequest::default_instance_ = NULL;

GetLocationRequest* GetLocationRequest::New(::google::protobuf::Arena* arena) const {
  GetLocationRequest* n = new GetLocationRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Services.GetLocationRequest)
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}

bool GetLocationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Services.GetLocationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string search_text = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search_text().data(), this->search_text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetLocationRequest.search_text"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetLocationRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mac_address;
        break;
      }

      // optional string mac_address = 3;
      case 3: {
        if (tag == 26) {
         parse_mac_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac_address().data(), this->mac_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetLocationRequest.mac_address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_device_name;
        break;
      }

      // optional string device_name = 4;
      case 4: {
        if (tag == 34) {
         parse_device_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_name().data(), this->device_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetLocationRequest.device_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_page;
        break;
      }

      // optional .Services.Page page = 5;
      case 5: {
        if (tag == 42) {
         parse_page:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_page()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Services.GetLocationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Services.GetLocationRequest)
  return false;
#undef DO_
}

void GetLocationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Services.GetLocationRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetLocationRequest.search_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->search_text(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetLocationRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string mac_address = 3;
  if (this->mac_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_address().data(), this->mac_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetLocationRequest.mac_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mac_address(), output);
  }

  // optional string device_name = 4;
  if (this->device_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name().data(), this->device_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetLocationRequest.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->device_name(), output);
  }

  // optional .Services.Page page = 5;
  if (this->has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->page_, output);
  }

  // @@protoc_insertion_point(serialize_end:Services.GetLocationRequest)
}

::google::protobuf::uint8* GetLocationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Services.GetLocationRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetLocationRequest.search_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->search_text(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetLocationRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string mac_address = 3;
  if (this->mac_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_address().data(), this->mac_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetLocationRequest.mac_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mac_address(), target);
  }

  // optional string device_name = 4;
  if (this->device_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name().data(), this->device_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetLocationRequest.device_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->device_name(), target);
  }

  // optional .Services.Page page = 5;
  if (this->has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->page_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Services.GetLocationRequest)
  return target;
}

int GetLocationRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Services.GetLocationRequest)
  int total_size = 0;

  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->search_text());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string mac_address = 3;
  if (this->mac_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac_address());
  }

  // optional string device_name = 4;
  if (this->device_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_name());
  }

  // optional .Services.Page page = 5;
  if (this->has_page()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->page_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLocationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Services.GetLocationRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetLocationRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLocationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Services.GetLocationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Services.GetLocationRequest)
    MergeFrom(*source);
  }
}

void GetLocationRequest::MergeFrom(const GetLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Services.GetLocationRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.search_text().size() > 0) {

    search_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_text_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.mac_address().size() > 0) {

    mac_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_address_);
  }
  if (from.device_name().size() > 0) {

    device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  if (from.has_page()) {
    mutable_page()->::Services::Page::MergeFrom(from.page());
  }
}

void GetLocationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Services.GetLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLocationRequest::CopyFrom(const GetLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Services.GetLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLocationRequest::IsInitialized() const {

  return true;
}

void GetLocationRequest::Swap(GetLocationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLocationRequest::InternalSwap(GetLocationRequest* other) {
  search_text_.Swap(&other->search_text_);
  name_.Swap(&other->name_);
  mac_address_.Swap(&other->mac_address_);
  device_name_.Swap(&other->device_name_);
  std::swap(page_, other->page_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLocationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLocationRequest_descriptor_;
  metadata.reflection = GetLocationRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetLocationRequest

// optional string search_text = 1;
void GetLocationRequest::clear_search_text() {
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetLocationRequest::search_text() const {
  // @@protoc_insertion_point(field_get:Services.GetLocationRequest.search_text)
  return search_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_search_text(const ::std::string& value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetLocationRequest.search_text)
}
 void GetLocationRequest::set_search_text(const char* value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetLocationRequest.search_text)
}
 void GetLocationRequest::set_search_text(const char* value, size_t size) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetLocationRequest.search_text)
}
 ::std::string* GetLocationRequest::mutable_search_text() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetLocationRequest.search_text)
  return search_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetLocationRequest::release_search_text() {
  // @@protoc_insertion_point(field_release:Services.GetLocationRequest.search_text)
  
  return search_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_allocated_search_text(::std::string* search_text) {
  if (search_text != NULL) {
    
  } else {
    
  }
  search_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_text);
  // @@protoc_insertion_point(field_set_allocated:Services.GetLocationRequest.search_text)
}

// optional string name = 2;
void GetLocationRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetLocationRequest::name() const {
  // @@protoc_insertion_point(field_get:Services.GetLocationRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetLocationRequest.name)
}
 void GetLocationRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetLocationRequest.name)
}
 void GetLocationRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetLocationRequest.name)
}
 ::std::string* GetLocationRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetLocationRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetLocationRequest::release_name() {
  // @@protoc_insertion_point(field_release:Services.GetLocationRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Services.GetLocationRequest.name)
}

// optional string mac_address = 3;
void GetLocationRequest::clear_mac_address() {
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetLocationRequest::mac_address() const {
  // @@protoc_insertion_point(field_get:Services.GetLocationRequest.mac_address)
  return mac_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_mac_address(const ::std::string& value) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetLocationRequest.mac_address)
}
 void GetLocationRequest::set_mac_address(const char* value) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetLocationRequest.mac_address)
}
 void GetLocationRequest::set_mac_address(const char* value, size_t size) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetLocationRequest.mac_address)
}
 ::std::string* GetLocationRequest::mutable_mac_address() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetLocationRequest.mac_address)
  return mac_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetLocationRequest::release_mac_address() {
  // @@protoc_insertion_point(field_release:Services.GetLocationRequest.mac_address)
  
  return mac_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_allocated_mac_address(::std::string* mac_address) {
  if (mac_address != NULL) {
    
  } else {
    
  }
  mac_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_address);
  // @@protoc_insertion_point(field_set_allocated:Services.GetLocationRequest.mac_address)
}

// optional string device_name = 4;
void GetLocationRequest::clear_device_name() {
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetLocationRequest::device_name() const {
  // @@protoc_insertion_point(field_get:Services.GetLocationRequest.device_name)
  return device_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_device_name(const ::std::string& value) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetLocationRequest.device_name)
}
 void GetLocationRequest::set_device_name(const char* value) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetLocationRequest.device_name)
}
 void GetLocationRequest::set_device_name(const char* value, size_t size) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetLocationRequest.device_name)
}
 ::std::string* GetLocationRequest::mutable_device_name() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetLocationRequest.device_name)
  return device_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetLocationRequest::release_device_name() {
  // @@protoc_insertion_point(field_release:Services.GetLocationRequest.device_name)
  
  return device_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_allocated_device_name(::std::string* device_name) {
  if (device_name != NULL) {
    
  } else {
    
  }
  device_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_name);
  // @@protoc_insertion_point(field_set_allocated:Services.GetLocationRequest.device_name)
}

// optional .Services.Page page = 5;
bool GetLocationRequest::has_page() const {
  return !_is_default_instance_ && page_ != NULL;
}
void GetLocationRequest::clear_page() {
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}
const ::Services::Page& GetLocationRequest::page() const {
  // @@protoc_insertion_point(field_get:Services.GetLocationRequest.page)
  return page_ != NULL ? *page_ : *default_instance_->page_;
}
::Services::Page* GetLocationRequest::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::Services::Page;
  }
  // @@protoc_insertion_point(field_mutable:Services.GetLocationRequest.page)
  return page_;
}
::Services::Page* GetLocationRequest::release_page() {
  // @@protoc_insertion_point(field_release:Services.GetLocationRequest.page)
  
  ::Services::Page* temp = page_;
  page_ = NULL;
  return temp;
}
void GetLocationRequest::set_allocated_page(::Services::Page* page) {
  delete page_;
  page_ = page;
  if (page) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Services.GetLocationRequest.page)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVisitorRequest::kSearchTextFieldNumber;
const int GetVisitorRequest::kStateFieldNumber;
const int GetVisitorRequest::kLocationsFieldNumber;
const int GetVisitorRequest::kPersonsFieldNumber;
const int GetVisitorRequest::kDatetimeFromFieldNumber;
const int GetVisitorRequest::kDatetimeToFieldNumber;
const int GetVisitorRequest::kPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVisitorRequest::GetVisitorRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Services.GetVisitorRequest)
}

void GetVisitorRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  page_ = const_cast< ::Services::Page*>(&::Services::Page::default_instance());
}

GetVisitorRequest::GetVisitorRequest(const GetVisitorRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Services.GetVisitorRequest)
}

void GetVisitorRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  search_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  datetime_from_ = GOOGLE_LONGLONG(0);
  datetime_to_ = GOOGLE_LONGLONG(0);
  page_ = NULL;
}

GetVisitorRequest::~GetVisitorRequest() {
  // @@protoc_insertion_point(destructor:Services.GetVisitorRequest)
  SharedDtor();
}

void GetVisitorRequest::SharedDtor() {
  search_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete page_;
  }
}

void GetVisitorRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetVisitorRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetVisitorRequest_descriptor_;
}

const GetVisitorRequest& GetVisitorRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_services_2fqueries_2eproto();
  return *default_instance_;
}

GetVisitorRequest* GetVisitorRequest::default_instance_ = NULL;

GetVisitorRequest* GetVisitorRequest::New(::google::protobuf::Arena* arena) const {
  GetVisitorRequest* n = new GetVisitorRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetVisitorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Services.GetVisitorRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GetVisitorRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetVisitorRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(datetime_from_, datetime_to_);
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  locations_.Clear();
  persons_.Clear();
}

bool GetVisitorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Services.GetVisitorRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string search_text = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search_text().data(), this->search_text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.GetVisitorRequest.search_text"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // optional .DataTypes.AccessState state = 2;
      case 2: {
        if (tag == 16) {
         parse_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::DataTypes::AccessState >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_locations;
        break;
      }

      // repeated int64 locations = 3;
      case 3: {
        if (tag == 26) {
         parse_locations:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_locations())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26, input, this->mutable_locations())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_persons;
        break;
      }

      // repeated int64 persons = 4;
      case 4: {
        if (tag == 34) {
         parse_persons:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_persons())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34, input, this->mutable_persons())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_datetime_from;
        break;
      }

      // optional int64 datetime_from = 5;
      case 5: {
        if (tag == 40) {
         parse_datetime_from:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &datetime_from_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_datetime_to;
        break;
      }

      // optional int64 datetime_to = 6;
      case 6: {
        if (tag == 48) {
         parse_datetime_to:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &datetime_to_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_page;
        break;
      }

      // optional .Services.Page page = 7;
      case 7: {
        if (tag == 58) {
         parse_page:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_page()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Services.GetVisitorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Services.GetVisitorRequest)
  return false;
#undef DO_
}

void GetVisitorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Services.GetVisitorRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetVisitorRequest.search_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->search_text(), output);
  }

  // optional .DataTypes.AccessState state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // repeated int64 locations = 3;
  if (this->locations_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_locations_cached_byte_size_);
  }
  for (int i = 0; i < this->locations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->locations(i), output);
  }

  // repeated int64 persons = 4;
  if (this->persons_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_persons_cached_byte_size_);
  }
  for (int i = 0; i < this->persons_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->persons(i), output);
  }

  // optional int64 datetime_from = 5;
  if (this->datetime_from() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->datetime_from(), output);
  }

  // optional int64 datetime_to = 6;
  if (this->datetime_to() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->datetime_to(), output);
  }

  // optional .Services.Page page = 7;
  if (this->has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->page_, output);
  }

  // @@protoc_insertion_point(serialize_end:Services.GetVisitorRequest)
}

::google::protobuf::uint8* GetVisitorRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Services.GetVisitorRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.GetVisitorRequest.search_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->search_text(), target);
  }

  // optional .DataTypes.AccessState state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // repeated int64 locations = 3;
  if (this->locations_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _locations_cached_byte_size_, target);
  }
  for (int i = 0; i < this->locations_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->locations(i), target);
  }

  // repeated int64 persons = 4;
  if (this->persons_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _persons_cached_byte_size_, target);
  }
  for (int i = 0; i < this->persons_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->persons(i), target);
  }

  // optional int64 datetime_from = 5;
  if (this->datetime_from() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->datetime_from(), target);
  }

  // optional int64 datetime_to = 6;
  if (this->datetime_to() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->datetime_to(), target);
  }

  // optional .Services.Page page = 7;
  if (this->has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, *this->page_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Services.GetVisitorRequest)
  return target;
}

int GetVisitorRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Services.GetVisitorRequest)
  int total_size = 0;

  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->search_text());
  }

  // optional .DataTypes.AccessState state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // optional int64 datetime_from = 5;
  if (this->datetime_from() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->datetime_from());
  }

  // optional int64 datetime_to = 6;
  if (this->datetime_to() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->datetime_to());
  }

  // optional .Services.Page page = 7;
  if (this->has_page()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->page_);
  }

  // repeated int64 locations = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->locations_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->locations(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _locations_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 persons = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->persons_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->persons(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _persons_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetVisitorRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Services.GetVisitorRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetVisitorRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVisitorRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Services.GetVisitorRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Services.GetVisitorRequest)
    MergeFrom(*source);
  }
}

void GetVisitorRequest::MergeFrom(const GetVisitorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Services.GetVisitorRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  locations_.MergeFrom(from.locations_);
  persons_.MergeFrom(from.persons_);
  if (from.search_text().size() > 0) {

    search_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_text_);
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.datetime_from() != 0) {
    set_datetime_from(from.datetime_from());
  }
  if (from.datetime_to() != 0) {
    set_datetime_to(from.datetime_to());
  }
  if (from.has_page()) {
    mutable_page()->::Services::Page::MergeFrom(from.page());
  }
}

void GetVisitorRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Services.GetVisitorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVisitorRequest::CopyFrom(const GetVisitorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Services.GetVisitorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVisitorRequest::IsInitialized() const {

  return true;
}

void GetVisitorRequest::Swap(GetVisitorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVisitorRequest::InternalSwap(GetVisitorRequest* other) {
  search_text_.Swap(&other->search_text_);
  std::swap(state_, other->state_);
  locations_.UnsafeArenaSwap(&other->locations_);
  persons_.UnsafeArenaSwap(&other->persons_);
  std::swap(datetime_from_, other->datetime_from_);
  std::swap(datetime_to_, other->datetime_to_);
  std::swap(page_, other->page_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetVisitorRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetVisitorRequest_descriptor_;
  metadata.reflection = GetVisitorRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetVisitorRequest

// optional string search_text = 1;
void GetVisitorRequest::clear_search_text() {
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetVisitorRequest::search_text() const {
  // @@protoc_insertion_point(field_get:Services.GetVisitorRequest.search_text)
  return search_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetVisitorRequest::set_search_text(const ::std::string& value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.GetVisitorRequest.search_text)
}
 void GetVisitorRequest::set_search_text(const char* value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.GetVisitorRequest.search_text)
}
 void GetVisitorRequest::set_search_text(const char* value, size_t size) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.GetVisitorRequest.search_text)
}
 ::std::string* GetVisitorRequest::mutable_search_text() {
  
  // @@protoc_insertion_point(field_mutable:Services.GetVisitorRequest.search_text)
  return search_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetVisitorRequest::release_search_text() {
  // @@protoc_insertion_point(field_release:Services.GetVisitorRequest.search_text)
  
  return search_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetVisitorRequest::set_allocated_search_text(::std::string* search_text) {
  if (search_text != NULL) {
    
  } else {
    
  }
  search_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_text);
  // @@protoc_insertion_point(field_set_allocated:Services.GetVisitorRequest.search_text)
}

// optional .DataTypes.AccessState state = 2;
void GetVisitorRequest::clear_state() {
  state_ = 0;
}
 ::DataTypes::AccessState GetVisitorRequest::state() const {
  // @@protoc_insertion_point(field_get:Services.GetVisitorRequest.state)
  return static_cast< ::DataTypes::AccessState >(state_);
}
 void GetVisitorRequest::set_state(::DataTypes::AccessState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:Services.GetVisitorRequest.state)
}

// repeated int64 locations = 3;
int GetVisitorRequest::locations_size() const {
  return locations_.size();
}
void GetVisitorRequest::clear_locations() {
  locations_.Clear();
}
 ::google::protobuf::int64 GetVisitorRequest::locations(int index) const {
  // @@protoc_insertion_point(field_get:Services.GetVisitorRequest.locations)
  return locations_.Get(index);
}
 void GetVisitorRequest::set_locations(int index, ::google::protobuf::int64 value) {
  locations_.Set(index, value);
  // @@protoc_insertion_point(field_set:Services.GetVisitorRequest.locations)
}
 void GetVisitorRequest::add_locations(::google::protobuf::int64 value) {
  locations_.Add(value);
  // @@protoc_insertion_point(field_add:Services.GetVisitorRequest.locations)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GetVisitorRequest::locations() const {
  // @@protoc_insertion_point(field_list:Services.GetVisitorRequest.locations)
  return locations_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GetVisitorRequest::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:Services.GetVisitorRequest.locations)
  return &locations_;
}

// repeated int64 persons = 4;
int GetVisitorRequest::persons_size() const {
  return persons_.size();
}
void GetVisitorRequest::clear_persons() {
  persons_.Clear();
}
 ::google::protobuf::int64 GetVisitorRequest::persons(int index) const {
  // @@protoc_insertion_point(field_get:Services.GetVisitorRequest.persons)
  return persons_.Get(index);
}
 void GetVisitorRequest::set_persons(int index, ::google::protobuf::int64 value) {
  persons_.Set(index, value);
  // @@protoc_insertion_point(field_set:Services.GetVisitorRequest.persons)
}
 void GetVisitorRequest::add_persons(::google::protobuf::int64 value) {
  persons_.Add(value);
  // @@protoc_insertion_point(field_add:Services.GetVisitorRequest.persons)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GetVisitorRequest::persons() const {
  // @@protoc_insertion_point(field_list:Services.GetVisitorRequest.persons)
  return persons_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GetVisitorRequest::mutable_persons() {
  // @@protoc_insertion_point(field_mutable_list:Services.GetVisitorRequest.persons)
  return &persons_;
}

// optional int64 datetime_from = 5;
void GetVisitorRequest::clear_datetime_from() {
  datetime_from_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 GetVisitorRequest::datetime_from() const {
  // @@protoc_insertion_point(field_get:Services.GetVisitorRequest.datetime_from)
  return datetime_from_;
}
 void GetVisitorRequest::set_datetime_from(::google::protobuf::int64 value) {
  
  datetime_from_ = value;
  // @@protoc_insertion_point(field_set:Services.GetVisitorRequest.datetime_from)
}

// optional int64 datetime_to = 6;
void GetVisitorRequest::clear_datetime_to() {
  datetime_to_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 GetVisitorRequest::datetime_to() const {
  // @@protoc_insertion_point(field_get:Services.GetVisitorRequest.datetime_to)
  return datetime_to_;
}
 void GetVisitorRequest::set_datetime_to(::google::protobuf::int64 value) {
  
  datetime_to_ = value;
  // @@protoc_insertion_point(field_set:Services.GetVisitorRequest.datetime_to)
}

// optional .Services.Page page = 7;
bool GetVisitorRequest::has_page() const {
  return !_is_default_instance_ && page_ != NULL;
}
void GetVisitorRequest::clear_page() {
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}
const ::Services::Page& GetVisitorRequest::page() const {
  // @@protoc_insertion_point(field_get:Services.GetVisitorRequest.page)
  return page_ != NULL ? *page_ : *default_instance_->page_;
}
::Services::Page* GetVisitorRequest::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::Services::Page;
  }
  // @@protoc_insertion_point(field_mutable:Services.GetVisitorRequest.page)
  return page_;
}
::Services::Page* GetVisitorRequest::release_page() {
  // @@protoc_insertion_point(field_release:Services.GetVisitorRequest.page)
  
  ::Services::Page* temp = page_;
  page_ = NULL;
  return temp;
}
void GetVisitorRequest::set_allocated_page(::Services::Page* page) {
  delete page_;
  page_ = page;
  if (page) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Services.GetVisitorRequest.page)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Page::kIndexFieldNumber;
const int Page::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Page::Page()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Services.Page)
}

void Page::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Page::Page(const Page& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Services.Page)
}

void Page::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  index_ = 0;
  size_ = 0;
}

Page::~Page() {
  // @@protoc_insertion_point(destructor:Services.Page)
  SharedDtor();
}

void Page::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Page::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Page::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Page_descriptor_;
}

const Page& Page::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_services_2fqueries_2eproto();
  return *default_instance_;
}

Page* Page::default_instance_ = NULL;

Page* Page::New(::google::protobuf::Arena* arena) const {
  Page* n = new Page;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Page::Clear() {
// @@protoc_insertion_point(message_clear_start:Services.Page)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Page, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Page*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(index_, size_);

#undef ZR_HELPER_
#undef ZR_

}

bool Page::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Services.Page)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_size;
        break;
      }

      // optional int32 size = 2;
      case 2: {
        if (tag == 16) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Services.Page)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Services.Page)
  return false;
#undef DO_
}

void Page::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Services.Page)
  // optional int32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // optional int32 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }

  // @@protoc_insertion_point(serialize_end:Services.Page)
}

::google::protobuf::uint8* Page::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Services.Page)
  // optional int32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // optional int32 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Services.Page)
  return target;
}

int Page::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Services.Page)
  int total_size = 0;

  // optional int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  // optional int32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Page::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Services.Page)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Page* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Page>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Services.Page)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Services.Page)
    MergeFrom(*source);
  }
}

void Page::MergeFrom(const Page& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Services.Page)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void Page::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Services.Page)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Page::CopyFrom(const Page& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Services.Page)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Page::IsInitialized() const {

  return true;
}

void Page::Swap(Page* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Page::InternalSwap(Page* other) {
  std::swap(index_, other->index_);
  std::swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Page::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Page_descriptor_;
  metadata.reflection = Page_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Page

// optional int32 index = 1;
void Page::clear_index() {
  index_ = 0;
}
 ::google::protobuf::int32 Page::index() const {
  // @@protoc_insertion_point(field_get:Services.Page.index)
  return index_;
}
 void Page::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:Services.Page.index)
}

// optional int32 size = 2;
void Page::clear_size() {
  size_ = 0;
}
 ::google::protobuf::int32 Page::size() const {
  // @@protoc_insertion_point(field_get:Services.Page.size)
  return size_;
}
 void Page::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:Services.Page.size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Services

// @@protoc_insertion_point(global_scope)
