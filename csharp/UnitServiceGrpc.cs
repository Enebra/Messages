// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/unit_service.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Services {
  public static class UnitService
  {
    static readonly string __ServiceName = "Services.UnitService";

    static readonly Marshaller<global::DataTypes.Location> __Marshaller_Location = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DataTypes.Location.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly Marshaller<global::Services.FrameBytes> __Marshaller_FrameBytes = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Services.FrameBytes.Parser.ParseFrom);

    static readonly Method<global::DataTypes.Location, global::Google.Protobuf.WellKnownTypes.Empty> __Method_OpenDoor = new Method<global::DataTypes.Location, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "OpenDoor",
        __Marshaller_Location,
        __Marshaller_Empty);

    static readonly Method<global::DataTypes.Location, global::Services.FrameBytes> __Method_GetVideoStream = new Method<global::DataTypes.Location, global::Services.FrameBytes>(
        MethodType.ServerStreaming,
        __ServiceName,
        "GetVideoStream",
        __Marshaller_Location,
        __Marshaller_FrameBytes);

    static readonly Method<global::DataTypes.Location, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateLocation = new Method<global::DataTypes.Location, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "UpdateLocation",
        __Marshaller_Location,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Services.UnitServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of UnitService</summary>
    public abstract class UnitServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> OpenDoor(global::DataTypes.Location request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetVideoStream(global::DataTypes.Location request, IServerStreamWriter<global::Services.FrameBytes> responseStream, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> UpdateLocation(global::DataTypes.Location request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for UnitService</summary>
    public class UnitServiceClient : ClientBase<UnitServiceClient>
    {
      /// <summary>Creates a new client for UnitService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public UnitServiceClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for UnitService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public UnitServiceClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected UnitServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected UnitServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty OpenDoor(global::DataTypes.Location request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return OpenDoor(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty OpenDoor(global::DataTypes.Location request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OpenDoor, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> OpenDoorAsync(global::DataTypes.Location request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return OpenDoorAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> OpenDoorAsync(global::DataTypes.Location request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OpenDoor, null, options, request);
      }
      public virtual AsyncServerStreamingCall<global::Services.FrameBytes> GetVideoStream(global::DataTypes.Location request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetVideoStream(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncServerStreamingCall<global::Services.FrameBytes> GetVideoStream(global::DataTypes.Location request, CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetVideoStream, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateLocation(global::DataTypes.Location request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateLocation(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateLocation(global::DataTypes.Location request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateLocation, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateLocationAsync(global::DataTypes.Location request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateLocationAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateLocationAsync(global::DataTypes.Location request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateLocation, null, options, request);
      }
      protected override UnitServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new UnitServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(UnitServiceBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_OpenDoor, serviceImpl.OpenDoor)
          .AddMethod(__Method_GetVideoStream, serviceImpl.GetVideoStream)
          .AddMethod(__Method_UpdateLocation, serviceImpl.UpdateLocation).Build();
    }

  }
}
#endregion
