// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datatypes/commands.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DataTypes {

  /// <summary>Holder for reflection information generated from datatypes/commands.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class CommandsReflection {

    #region Descriptor
    /// <summary>File descriptor for datatypes/commands.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommandsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhkYXRhdHlwZXMvY29tbWFuZHMucHJvdG8SCURhdGFUeXBlcxoUZGF0YXR5",
            "cGVzL2RhdGEucHJvdG8iNwoNQ29tbWl0UmVxdWVzdBImCgltdXRhdGlvbnMY",
            "ASADKAsyEy5EYXRhVHlwZXMuTXV0YXRpb24iRQoOQ29tbWl0UmVzcG9uc2US",
            "MwoQbXV0YXRpb25fcmVzdWx0cxgBIAMoCzIZLkRhdGFUeXBlcy5NdXRhdGlv",
            "blJlc3VsdEJNCgdleC5ncnBjWjxnaXRodWIuY29tL0VuZWJyYS9TZXJ2aWNl",
            "Q29vcmRpbmF0b3IvZ3JwYy9kYXRhdHlwZXMvY29tbWFuZHOiAgNSVEdiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::DataTypes.DataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DataTypes.CommitRequest), global::DataTypes.CommitRequest.Parser, new[]{ "Mutations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DataTypes.CommitResponse), global::DataTypes.CommitResponse.Parser, new[]{ "MutationResults" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CommitRequest : pb::IMessage<CommitRequest> {
    private static readonly pb::MessageParser<CommitRequest> _parser = new pb::MessageParser<CommitRequest>(() => new CommitRequest());
    public static pb::MessageParser<CommitRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::DataTypes.CommandsReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public CommitRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public CommitRequest(CommitRequest other) : this() {
      mutations_ = other.mutations_.Clone();
    }

    public CommitRequest Clone() {
      return new CommitRequest(this);
    }

    /// <summary>Field number for the "mutations" field.</summary>
    public const int MutationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::DataTypes.Mutation> _repeated_mutations_codec
        = pb::FieldCodec.ForMessage(10, global::DataTypes.Mutation.Parser);
    private readonly pbc::RepeatedField<global::DataTypes.Mutation> mutations_ = new pbc::RepeatedField<global::DataTypes.Mutation>();
    public pbc::RepeatedField<global::DataTypes.Mutation> Mutations {
      get { return mutations_; }
    }

    public override bool Equals(object other) {
      return Equals(other as CommitRequest);
    }

    public bool Equals(CommitRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mutations_.Equals(other.mutations_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= mutations_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      mutations_.WriteTo(output, _repeated_mutations_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += mutations_.CalculateSize(_repeated_mutations_codec);
      return size;
    }

    public void MergeFrom(CommitRequest other) {
      if (other == null) {
        return;
      }
      mutations_.Add(other.mutations_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            mutations_.AddEntriesFrom(input, _repeated_mutations_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CommitResponse : pb::IMessage<CommitResponse> {
    private static readonly pb::MessageParser<CommitResponse> _parser = new pb::MessageParser<CommitResponse>(() => new CommitResponse());
    public static pb::MessageParser<CommitResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::DataTypes.CommandsReflection.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public CommitResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public CommitResponse(CommitResponse other) : this() {
      mutationResults_ = other.mutationResults_.Clone();
    }

    public CommitResponse Clone() {
      return new CommitResponse(this);
    }

    /// <summary>Field number for the "mutation_results" field.</summary>
    public const int MutationResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::DataTypes.MutationResult> _repeated_mutationResults_codec
        = pb::FieldCodec.ForMessage(10, global::DataTypes.MutationResult.Parser);
    private readonly pbc::RepeatedField<global::DataTypes.MutationResult> mutationResults_ = new pbc::RepeatedField<global::DataTypes.MutationResult>();
    public pbc::RepeatedField<global::DataTypes.MutationResult> MutationResults {
      get { return mutationResults_; }
    }

    public override bool Equals(object other) {
      return Equals(other as CommitResponse);
    }

    public bool Equals(CommitResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mutationResults_.Equals(other.mutationResults_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= mutationResults_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      mutationResults_.WriteTo(output, _repeated_mutationResults_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += mutationResults_.CalculateSize(_repeated_mutationResults_codec);
      return size;
    }

    public void MergeFrom(CommitResponse other) {
      if (other == null) {
        return;
      }
      mutationResults_.Add(other.mutationResults_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            mutationResults_.AddEntriesFrom(input, _repeated_mutationResults_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
