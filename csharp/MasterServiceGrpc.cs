// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/master_service.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Services {
  public static class MasterService
  {
    static readonly string __ServiceName = "Services.MasterService";

    static readonly Marshaller<global::DataTypes.ConnectedUnit> __Marshaller_ConnectedUnit = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DataTypes.ConnectedUnit.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly Marshaller<global::DataTypes.Locations> __Marshaller_Locations = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DataTypes.Locations.Parser.ParseFrom);
    static readonly Marshaller<global::DataTypes.VisitRecords> __Marshaller_VisitRecords = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DataTypes.VisitRecords.Parser.ParseFrom);
    static readonly Marshaller<global::DataTypes.UnitLocationState> __Marshaller_UnitLocationState = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DataTypes.UnitLocationState.Parser.ParseFrom);
    static readonly Marshaller<global::DataTypes.Units> __Marshaller_Units = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DataTypes.Units.Parser.ParseFrom);

    static readonly Method<global::DataTypes.ConnectedUnit, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Connect = new Method<global::DataTypes.ConnectedUnit, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "Connect",
        __Marshaller_ConnectedUnit,
        __Marshaller_Empty);

    static readonly Method<global::DataTypes.ConnectedUnit, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Heartbeat = new Method<global::DataTypes.ConnectedUnit, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "Heartbeat",
        __Marshaller_ConnectedUnit,
        __Marshaller_Empty);

    static readonly Method<global::DataTypes.Locations, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SendLocations = new Method<global::DataTypes.Locations, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "SendLocations",
        __Marshaller_Locations,
        __Marshaller_Empty);

    static readonly Method<global::DataTypes.VisitRecords, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SendActivity = new Method<global::DataTypes.VisitRecords, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "SendActivity",
        __Marshaller_VisitRecords,
        __Marshaller_Empty);

    static readonly Method<global::DataTypes.UnitLocationState, global::Google.Protobuf.WellKnownTypes.Empty> __Method_NotifyLocationState = new Method<global::DataTypes.UnitLocationState, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "NotifyLocationState",
        __Marshaller_UnitLocationState,
        __Marshaller_Empty);

    static readonly Method<global::Google.Protobuf.WellKnownTypes.Empty, global::DataTypes.Units> __Method_GetUnits = new Method<global::Google.Protobuf.WellKnownTypes.Empty, global::DataTypes.Units>(
        MethodType.Unary,
        __ServiceName,
        "GetUnits",
        __Marshaller_Empty,
        __Marshaller_Units);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Services.MasterServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MasterService</summary>
    public abstract class MasterServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> Connect(global::DataTypes.ConnectedUnit request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> Heartbeat(global::DataTypes.ConnectedUnit request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SendLocations(global::DataTypes.Locations request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SendActivity(global::DataTypes.VisitRecords request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> NotifyLocationState(global::DataTypes.UnitLocationState request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::DataTypes.Units> GetUnits(global::Google.Protobuf.WellKnownTypes.Empty request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for MasterService</summary>
    public class MasterServiceClient : ClientBase<MasterServiceClient>
    {
      /// <summary>Creates a new client for MasterService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public MasterServiceClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MasterService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public MasterServiceClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected MasterServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected MasterServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Connect(global::DataTypes.ConnectedUnit request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Connect(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Connect(global::DataTypes.ConnectedUnit request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Connect, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ConnectAsync(global::DataTypes.ConnectedUnit request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ConnectAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ConnectAsync(global::DataTypes.ConnectedUnit request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Connect, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Heartbeat(global::DataTypes.ConnectedUnit request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Heartbeat(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Heartbeat(global::DataTypes.ConnectedUnit request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Heartbeat, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> HeartbeatAsync(global::DataTypes.ConnectedUnit request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return HeartbeatAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> HeartbeatAsync(global::DataTypes.ConnectedUnit request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Heartbeat, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SendLocations(global::DataTypes.Locations request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendLocations(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SendLocations(global::DataTypes.Locations request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendLocations, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SendLocationsAsync(global::DataTypes.Locations request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendLocationsAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SendLocationsAsync(global::DataTypes.Locations request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendLocations, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SendActivity(global::DataTypes.VisitRecords request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendActivity(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SendActivity(global::DataTypes.VisitRecords request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendActivity, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SendActivityAsync(global::DataTypes.VisitRecords request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendActivityAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SendActivityAsync(global::DataTypes.VisitRecords request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendActivity, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty NotifyLocationState(global::DataTypes.UnitLocationState request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return NotifyLocationState(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty NotifyLocationState(global::DataTypes.UnitLocationState request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_NotifyLocationState, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> NotifyLocationStateAsync(global::DataTypes.UnitLocationState request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return NotifyLocationStateAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> NotifyLocationStateAsync(global::DataTypes.UnitLocationState request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_NotifyLocationState, null, options, request);
      }
      public virtual global::DataTypes.Units GetUnits(global::Google.Protobuf.WellKnownTypes.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetUnits(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::DataTypes.Units GetUnits(global::Google.Protobuf.WellKnownTypes.Empty request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUnits, null, options, request);
      }
      public virtual AsyncUnaryCall<global::DataTypes.Units> GetUnitsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetUnitsAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::DataTypes.Units> GetUnitsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUnits, null, options, request);
      }
      protected override MasterServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MasterServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(MasterServiceBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Connect, serviceImpl.Connect)
          .AddMethod(__Method_Heartbeat, serviceImpl.Heartbeat)
          .AddMethod(__Method_SendLocations, serviceImpl.SendLocations)
          .AddMethod(__Method_SendActivity, serviceImpl.SendActivity)
          .AddMethod(__Method_NotifyLocationState, serviceImpl.NotifyLocationState)
          .AddMethod(__Method_GetUnits, serviceImpl.GetUnits).Build();
    }

  }
}
#endregion
