// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datatypes/person.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DataTypes {

  /// <summary>Holder for reflection information generated from datatypes/person.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class PersonReflection {

    #region Descriptor
    /// <summary>File descriptor for datatypes/person.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PersonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZkYXRhdHlwZXMvcGVyc29uLnByb3RvEglEYXRhVHlwZXMaFGRhdGF0eXBl",
            "cy9jYXJkLnByb3RvGhVkYXRhdHlwZXMvcGhvdG8ucHJvdG8aE2RhdGF0eXBl",
            "cy9rZXkucHJvdG8ijQEKBlBlcnNvbhIaCgJpZBgBIAEoCzIOLkRhdGFUeXBl",
            "cy5LZXkSEgoKZmlyc3RfbmFtZRgCIAEoCRIRCglsYXN0X25hbWUYAyABKAkS",
            "IAoGcGhvdG9zGAQgAygLMhAuRGF0YVR5cGVzLlBob3RvEh4KBWNhcmRzGAUg",
            "AygLMg8uRGF0YVR5cGVzLkNhcmQqNgoGR2VuZGVyEhYKEkdlbmRlcl9VbnNw",
            "ZWNpZmllZBAAEggKBE1hbGUQARIKCgZGZW1hbGUQAipXCgZSaWdodHMSFgoS",
            "UmlnaHRzX1Vuc3BlY2lmaWVkEAASCgoGQ3VzdG9tEAESDAoIT3BlcmF0b3IQ",
            "AhILCgdNYW5hZ2VyEAMSDgoKU3VwZXJ2aXNvchAEQksKB2V4LmdycGNaOmdp",
            "dGh1Yi5jb20vRW5lYnJhL1NlcnZpY2VDb29yZGluYXRvci9ncnBjL2RhdGF0",
            "eXBlcy9wZXJzb26iAgNSVEdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::DataTypes.CardReflection.Descriptor, global::DataTypes.PhotoReflection.Descriptor, global::DataTypes.KeyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::DataTypes.Gender), typeof(global::DataTypes.Rights), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DataTypes.Person), global::DataTypes.Person.Parser, new[]{ "Id", "FirstName", "LastName", "Photos", "Cards" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Gender {
    [pbr::OriginalName("Gender_Unspecified")] Unspecified = 0,
    [pbr::OriginalName("Male")] Male = 1,
    [pbr::OriginalName("Female")] Female = 2,
  }

  public enum Rights {
    [pbr::OriginalName("Rights_Unspecified")] Unspecified = 0,
    [pbr::OriginalName("Custom")] Custom = 1,
    [pbr::OriginalName("Operator")] Operator = 2,
    [pbr::OriginalName("Manager")] Manager = 3,
    [pbr::OriginalName("Supervisor")] Supervisor = 4,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Person : pb::IMessage<Person> {
    private static readonly pb::MessageParser<Person> _parser = new pb::MessageParser<Person>(() => new Person());
    public static pb::MessageParser<Person> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::DataTypes.PersonReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Person() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Person(Person other) : this() {
      Id = other.id_ != null ? other.Id.Clone() : null;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      photos_ = other.photos_.Clone();
      cards_ = other.cards_.Clone();
    }

    public Person Clone() {
      return new Person(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::DataTypes.Key id_;
    public global::DataTypes.Key Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "first_name" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_name" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "photos" field.</summary>
    public const int PhotosFieldNumber = 4;
    private static readonly pb::FieldCodec<global::DataTypes.Photo> _repeated_photos_codec
        = pb::FieldCodec.ForMessage(34, global::DataTypes.Photo.Parser);
    private readonly pbc::RepeatedField<global::DataTypes.Photo> photos_ = new pbc::RepeatedField<global::DataTypes.Photo>();
    public pbc::RepeatedField<global::DataTypes.Photo> Photos {
      get { return photos_; }
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::DataTypes.Card> _repeated_cards_codec
        = pb::FieldCodec.ForMessage(42, global::DataTypes.Card.Parser);
    private readonly pbc::RepeatedField<global::DataTypes.Card> cards_ = new pbc::RepeatedField<global::DataTypes.Card>();
    public pbc::RepeatedField<global::DataTypes.Card> Cards {
      get { return cards_; }
    }

    public override bool Equals(object other) {
      return Equals(other as Person);
    }

    public bool Equals(Person other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if(!photos_.Equals(other.photos_)) return false;
      if(!cards_.Equals(other.cards_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      hash ^= photos_.GetHashCode();
      hash ^= cards_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
      photos_.WriteTo(output, _repeated_photos_codec);
      cards_.WriteTo(output, _repeated_cards_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      size += photos_.CalculateSize(_repeated_photos_codec);
      size += cards_.CalculateSize(_repeated_cards_codec);
      return size;
    }

    public void MergeFrom(Person other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::DataTypes.Key();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      photos_.Add(other.photos_);
      cards_.Add(other.cards_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::DataTypes.Key();
            }
            input.ReadMessage(id_);
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
          case 34: {
            photos_.AddEntriesFrom(input, _repeated_photos_codec);
            break;
          }
          case 42: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
