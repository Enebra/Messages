// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datatypes/data.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DataTypes {

  /// <summary>Holder for reflection information generated from datatypes/data.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class DataReflection {

    #region Descriptor
    /// <summary>File descriptor for datatypes/data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRkYXRhdHlwZXMvZGF0YS5wcm90bxIJRGF0YVR5cGVzGhZkYXRhdHlwZXMv",
            "ZW50aXR5LnByb3RvIj8KDE1lc3NhZ2VCeXRlcxIMCgRkYXRhGAEgASgMEiEK",
            "BHR5cGUYAiABKA4yEy5EYXRhVHlwZXMuRGF0YVR5cGUiQgoOTXV0YXRpb25S",
            "ZXN1bHQSIQoGZW50aXR5GAEgASgLMhEuRGF0YVR5cGVzLkVudGl0eRINCgVl",
            "cnJvchgCIAEoCSKGAQoITXV0YXRpb24SIwoGaW5zZXJ0GAEgASgLMhEuRGF0",
            "YVR5cGVzLkVudGl0eUgAEiMKBnVwZGF0ZRgCIAEoCzIRLkRhdGFUeXBlcy5F",
            "bnRpdHlIABIjCgZkZWxldGUYAyABKAsyES5EYXRhVHlwZXMuRW50aXR5SABC",
            "CwoJb3BlcmF0aW9uKnAKCERhdGFUeXBlEgwKCE5vbmVUeXBlEAASEgoOR2V0",
            "UmVxdWVzdFR5cGUQARITCg9HZXRSZXNwb25zZVR5cGUQAhIVChFDb21taXRS",
            "ZXF1ZXN0VHlwZRADEhYKEkNvbW1pdFJlc3BvbnNlVHlwZRAEQkkKB2V4Lmdy",
            "cGNaOGdpdGh1Yi5jb20vRW5lYnJhL1NlcnZpY2VDb29yZGluYXRvci9ncnBj",
            "L2RhdGF0eXBlcy9kYXRhogIDUlRHYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::DataTypes.EntityReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::DataTypes.DataType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DataTypes.MessageBytes), global::DataTypes.MessageBytes.Parser, new[]{ "Data", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DataTypes.MutationResult), global::DataTypes.MutationResult.Parser, new[]{ "Entity", "Error" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DataTypes.Mutation), global::DataTypes.Mutation.Parser, new[]{ "Insert", "Update", "Delete" }, new[]{ "Operation" }, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum DataType {
    [pbr::OriginalName("NoneType")] NoneType = 0,
    [pbr::OriginalName("GetRequestType")] GetRequestType = 1,
    [pbr::OriginalName("GetResponseType")] GetResponseType = 2,
    [pbr::OriginalName("CommitRequestType")] CommitRequestType = 3,
    [pbr::OriginalName("CommitResponseType")] CommitResponseType = 4,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MessageBytes : pb::IMessage<MessageBytes> {
    private static readonly pb::MessageParser<MessageBytes> _parser = new pb::MessageParser<MessageBytes>(() => new MessageBytes());
    public static pb::MessageParser<MessageBytes> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::DataTypes.DataReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public MessageBytes() {
      OnConstruction();
    }

    partial void OnConstruction();

    public MessageBytes(MessageBytes other) : this() {
      data_ = other.data_;
      type_ = other.type_;
    }

    public MessageBytes Clone() {
      return new MessageBytes(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::DataTypes.DataType type_ = 0;
    public global::DataTypes.DataType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as MessageBytes);
    }

    public bool Equals(MessageBytes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      if (Type != other.Type) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      return size;
    }

    public void MergeFrom(MessageBytes other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
          case 16: {
            type_ = (global::DataTypes.DataType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MutationResult : pb::IMessage<MutationResult> {
    private static readonly pb::MessageParser<MutationResult> _parser = new pb::MessageParser<MutationResult>(() => new MutationResult());
    public static pb::MessageParser<MutationResult> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::DataTypes.DataReflection.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public MutationResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    public MutationResult(MutationResult other) : this() {
      Entity = other.entity_ != null ? other.Entity.Clone() : null;
      error_ = other.error_;
    }

    public MutationResult Clone() {
      return new MutationResult(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private global::DataTypes.Entity entity_;
    public global::DataTypes.Entity Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as MutationResult);
    }

    public bool Equals(MutationResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entity, other.Entity)) return false;
      if (Error != other.Error) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (entity_ != null) hash ^= Entity.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      return size;
    }

    public void MergeFrom(MutationResult other) {
      if (other == null) {
        return;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          entity_ = new global::DataTypes.Entity();
        }
        Entity.MergeFrom(other.Entity);
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (entity_ == null) {
              entity_ = new global::DataTypes.Entity();
            }
            input.ReadMessage(entity_);
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Mutation : pb::IMessage<Mutation> {
    private static readonly pb::MessageParser<Mutation> _parser = new pb::MessageParser<Mutation>(() => new Mutation());
    public static pb::MessageParser<Mutation> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::DataTypes.DataReflection.Descriptor.MessageTypes[2]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Mutation() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Mutation(Mutation other) : this() {
      switch (other.OperationCase) {
        case OperationOneofCase.Insert:
          Insert = other.Insert.Clone();
          break;
        case OperationOneofCase.Update:
          Update = other.Update.Clone();
          break;
        case OperationOneofCase.Delete:
          Delete = other.Delete.Clone();
          break;
      }

    }

    public Mutation Clone() {
      return new Mutation(this);
    }

    /// <summary>Field number for the "insert" field.</summary>
    public const int InsertFieldNumber = 1;
    public global::DataTypes.Entity Insert {
      get { return operationCase_ == OperationOneofCase.Insert ? (global::DataTypes.Entity) operation_ : null; }
      set {
        operation_ = value;
        operationCase_ = value == null ? OperationOneofCase.None : OperationOneofCase.Insert;
      }
    }

    /// <summary>Field number for the "update" field.</summary>
    public const int UpdateFieldNumber = 2;
    public global::DataTypes.Entity Update {
      get { return operationCase_ == OperationOneofCase.Update ? (global::DataTypes.Entity) operation_ : null; }
      set {
        operation_ = value;
        operationCase_ = value == null ? OperationOneofCase.None : OperationOneofCase.Update;
      }
    }

    /// <summary>Field number for the "delete" field.</summary>
    public const int DeleteFieldNumber = 3;
    public global::DataTypes.Entity Delete {
      get { return operationCase_ == OperationOneofCase.Delete ? (global::DataTypes.Entity) operation_ : null; }
      set {
        operation_ = value;
        operationCase_ = value == null ? OperationOneofCase.None : OperationOneofCase.Delete;
      }
    }

    private object operation_;
    /// <summary>Enum of possible cases for the "operation" oneof.</summary>
    public enum OperationOneofCase {
      None = 0,
      Insert = 1,
      Update = 2,
      Delete = 3,
    }
    private OperationOneofCase operationCase_ = OperationOneofCase.None;
    public OperationOneofCase OperationCase {
      get { return operationCase_; }
    }

    public void ClearOperation() {
      operationCase_ = OperationOneofCase.None;
      operation_ = null;
    }

    public override bool Equals(object other) {
      return Equals(other as Mutation);
    }

    public bool Equals(Mutation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Insert, other.Insert)) return false;
      if (!object.Equals(Update, other.Update)) return false;
      if (!object.Equals(Delete, other.Delete)) return false;
      if (OperationCase != other.OperationCase) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (operationCase_ == OperationOneofCase.Insert) hash ^= Insert.GetHashCode();
      if (operationCase_ == OperationOneofCase.Update) hash ^= Update.GetHashCode();
      if (operationCase_ == OperationOneofCase.Delete) hash ^= Delete.GetHashCode();
      hash ^= (int) operationCase_;
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (operationCase_ == OperationOneofCase.Insert) {
        output.WriteRawTag(10);
        output.WriteMessage(Insert);
      }
      if (operationCase_ == OperationOneofCase.Update) {
        output.WriteRawTag(18);
        output.WriteMessage(Update);
      }
      if (operationCase_ == OperationOneofCase.Delete) {
        output.WriteRawTag(26);
        output.WriteMessage(Delete);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (operationCase_ == OperationOneofCase.Insert) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Insert);
      }
      if (operationCase_ == OperationOneofCase.Update) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Update);
      }
      if (operationCase_ == OperationOneofCase.Delete) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Delete);
      }
      return size;
    }

    public void MergeFrom(Mutation other) {
      if (other == null) {
        return;
      }
      switch (other.OperationCase) {
        case OperationOneofCase.Insert:
          Insert = other.Insert;
          break;
        case OperationOneofCase.Update:
          Update = other.Update;
          break;
        case OperationOneofCase.Delete:
          Delete = other.Delete;
          break;
      }

    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::DataTypes.Entity subBuilder = new global::DataTypes.Entity();
            if (operationCase_ == OperationOneofCase.Insert) {
              subBuilder.MergeFrom(Insert);
            }
            input.ReadMessage(subBuilder);
            Insert = subBuilder;
            break;
          }
          case 18: {
            global::DataTypes.Entity subBuilder = new global::DataTypes.Entity();
            if (operationCase_ == OperationOneofCase.Update) {
              subBuilder.MergeFrom(Update);
            }
            input.ReadMessage(subBuilder);
            Update = subBuilder;
            break;
          }
          case 26: {
            global::DataTypes.Entity subBuilder = new global::DataTypes.Entity();
            if (operationCase_ == OperationOneofCase.Delete) {
              subBuilder.MergeFrom(Delete);
            }
            input.ReadMessage(subBuilder);
            Delete = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
