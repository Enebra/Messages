// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datatypes/location.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DataTypes {

  /// <summary>Holder for reflection information generated from datatypes/location.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class LocationReflection {

    #region Descriptor
    /// <summary>File descriptor for datatypes/location.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LocationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhkYXRhdHlwZXMvbG9jYXRpb24ucHJvdG8SCURhdGFUeXBlcxoXZGF0YXR5",
            "cGVzL2RldmljZXMucHJvdG8aE2RhdGF0eXBlcy9rZXkucHJvdG8ikwEKCExv",
            "Y2F0aW9uEhoKAmlkGAEgASgLMg4uRGF0YVR5cGVzLktleRIMCgRuYW1lGAIg",
            "ASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJEhgKEHVuaXRfbWFjX2FkZHJlc3MY",
            "BCABKAkSLgoNYWNjZXNzX2RldmljZRgFIAEoCzIXLkRhdGFUeXBlcy5BY2Nl",
            "c3NEZXZpY2VCTQoHZXguZ3JwY1o8Z2l0aHViLmNvbS9FbmVicmEvU2Vydmlj",
            "ZUNvb3JkaW5hdG9yL2dycGMvZGF0YXR5cGVzL2xvY2F0aW9uogIDUlRHYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::DataTypes.DevicesReflection.Descriptor, global::DataTypes.KeyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DataTypes.Location), global::DataTypes.Location.Parser, new[]{ "Id", "Name", "Description", "UnitMacAddress", "AccessDevice" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Location : pb::IMessage<Location> {
    private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
    public static pb::MessageParser<Location> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::DataTypes.LocationReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Location() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Location(Location other) : this() {
      Id = other.id_ != null ? other.Id.Clone() : null;
      name_ = other.name_;
      description_ = other.description_;
      unitMacAddress_ = other.unitMacAddress_;
      AccessDevice = other.accessDevice_ != null ? other.AccessDevice.Clone() : null;
    }

    public Location Clone() {
      return new Location(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::DataTypes.Key id_;
    public global::DataTypes.Key Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unit_mac_address" field.</summary>
    public const int UnitMacAddressFieldNumber = 4;
    private string unitMacAddress_ = "";
    public string UnitMacAddress {
      get { return unitMacAddress_; }
      set {
        unitMacAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "access_device" field.</summary>
    public const int AccessDeviceFieldNumber = 5;
    private global::DataTypes.AccessDevice accessDevice_;
    /// <summary>
    /// TODO add capture device
    /// </summary>
    public global::DataTypes.AccessDevice AccessDevice {
      get { return accessDevice_; }
      set {
        accessDevice_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Location);
    }

    public bool Equals(Location other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (UnitMacAddress != other.UnitMacAddress) return false;
      if (!object.Equals(AccessDevice, other.AccessDevice)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (UnitMacAddress.Length != 0) hash ^= UnitMacAddress.GetHashCode();
      if (accessDevice_ != null) hash ^= AccessDevice.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (UnitMacAddress.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UnitMacAddress);
      }
      if (accessDevice_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AccessDevice);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (UnitMacAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitMacAddress);
      }
      if (accessDevice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccessDevice);
      }
      return size;
    }

    public void MergeFrom(Location other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::DataTypes.Key();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.UnitMacAddress.Length != 0) {
        UnitMacAddress = other.UnitMacAddress;
      }
      if (other.accessDevice_ != null) {
        if (accessDevice_ == null) {
          accessDevice_ = new global::DataTypes.AccessDevice();
        }
        AccessDevice.MergeFrom(other.AccessDevice);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::DataTypes.Key();
            }
            input.ReadMessage(id_);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            UnitMacAddress = input.ReadString();
            break;
          }
          case 42: {
            if (accessDevice_ == null) {
              accessDevice_ = new global::DataTypes.AccessDevice();
            }
            input.ReadMessage(accessDevice_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
