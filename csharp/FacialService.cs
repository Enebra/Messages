// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/facial_service.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Services {

  /// <summary>Holder for reflection information generated from services/facial_service.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class FacialServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for services/facial_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FacialServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1zZXJ2aWNlcy9mYWNpYWxfc2VydmljZS5wcm90bxIIU2VydmljZXMaFWRh",
            "dGF0eXBlcy9waG90by5wcm90bxoaZGF0YXR5cGVzL2Jpb21ldHJpY3MucHJv",
            "dG8iSQoaUG9wdWxhdGlvbkNyZWF0aW9uUmVzcG9uc2USCgoCaWQYASABKAMS",
            "HwoFZmFjZXMYAiADKAsyEC5EYXRhVHlwZXMuRmFjZXMihAEKEFZlcmlmaWNh",
            "dGlvbkRhdGESJgoMdGFyZ2V0X2ltYWdlGAEgASgLMhAuRGF0YVR5cGVzLlBo",
            "b3RvEioKEGNvbXBhcmlzb25faW1hZ2UYAiABKAsyEC5EYXRhVHlwZXMuUGhv",
            "dG8SHAoUY29tcGFyaXNvbl9wZXJzb25faWQYAyABKAMiUwoSSWRlbnRpZmlj",
            "YXRpb25EYXRhEiYKDHRhcmdldF9pbWFnZRgBIAEoCzIQLkRhdGFUeXBlcy5Q",
            "aG90bxIVCg1wb3B1bGF0aW9uX2lkGAIgASgDIloKEkZhY2VTZWFyY2hSZXNw",
            "b25zZRIfCgVmYWNlcxgBIAMoCzIQLkRhdGFUeXBlcy5GYWNlcxIjCgdtYXRj",
            "aGVzGAIgAygLMhIuRGF0YVR5cGVzLk1hdGNoZXMypwIKFUJpb21ldHJpY0Zh",
            "Y2lhbFNldmljZRIvCgdBY3F1aXJlEhAuRGF0YVR5cGVzLlBob3RvGhAuRGF0",
            "YVR5cGVzLkZhY2VzIgASTQoQQ3JlYXRlUG9wdWxhdGlvbhIRLkRhdGFUeXBl",
            "cy5QaG90b3MaJC5TZXJ2aWNlcy5Qb3B1bGF0aW9uQ3JlYXRpb25SZXNwb25z",
            "ZSIAEkQKBlZlcmlmeRIaLlNlcnZpY2VzLlZlcmlmaWNhdGlvbkRhdGEaHC5T",
            "ZXJ2aWNlcy5GYWNlU2VhcmNoUmVzcG9uc2UiABJICghJZGVudGlmeRIcLlNl",
            "cnZpY2VzLklkZW50aWZpY2F0aW9uRGF0YRocLlNlcnZpY2VzLkZhY2VTZWFy",
            "Y2hSZXNwb25zZSIAQg8KB2V4LmdycGOiAgNSVEdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::DataTypes.PhotoReflection.Descriptor, global::DataTypes.BiometricsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Services.PopulationCreationResponse), global::Services.PopulationCreationResponse.Parser, new[]{ "Id", "Faces" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Services.VerificationData), global::Services.VerificationData.Parser, new[]{ "TargetImage", "ComparisonImage", "ComparisonPersonId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Services.IdentificationData), global::Services.IdentificationData.Parser, new[]{ "TargetImage", "PopulationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Services.FaceSearchResponse), global::Services.FaceSearchResponse.Parser, new[]{ "Faces", "Matches" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PopulationCreationResponse : pb::IMessage<PopulationCreationResponse> {
    private static readonly pb::MessageParser<PopulationCreationResponse> _parser = new pb::MessageParser<PopulationCreationResponse>(() => new PopulationCreationResponse());
    public static pb::MessageParser<PopulationCreationResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Services.FacialServiceReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public PopulationCreationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public PopulationCreationResponse(PopulationCreationResponse other) : this() {
      id_ = other.id_;
      faces_ = other.faces_.Clone();
    }

    public PopulationCreationResponse Clone() {
      return new PopulationCreationResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "faces" field.</summary>
    public const int FacesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::DataTypes.Faces> _repeated_faces_codec
        = pb::FieldCodec.ForMessage(18, global::DataTypes.Faces.Parser);
    private readonly pbc::RepeatedField<global::DataTypes.Faces> faces_ = new pbc::RepeatedField<global::DataTypes.Faces>();
    public pbc::RepeatedField<global::DataTypes.Faces> Faces {
      get { return faces_; }
    }

    public override bool Equals(object other) {
      return Equals(other as PopulationCreationResponse);
    }

    public bool Equals(PopulationCreationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!faces_.Equals(other.faces_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      hash ^= faces_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      faces_.WriteTo(output, _repeated_faces_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      size += faces_.CalculateSize(_repeated_faces_codec);
      return size;
    }

    public void MergeFrom(PopulationCreationResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      faces_.Add(other.faces_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            faces_.AddEntriesFrom(input, _repeated_faces_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class VerificationData : pb::IMessage<VerificationData> {
    private static readonly pb::MessageParser<VerificationData> _parser = new pb::MessageParser<VerificationData>(() => new VerificationData());
    public static pb::MessageParser<VerificationData> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Services.FacialServiceReflection.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public VerificationData() {
      OnConstruction();
    }

    partial void OnConstruction();

    public VerificationData(VerificationData other) : this() {
      TargetImage = other.targetImage_ != null ? other.TargetImage.Clone() : null;
      ComparisonImage = other.comparisonImage_ != null ? other.ComparisonImage.Clone() : null;
      comparisonPersonId_ = other.comparisonPersonId_;
    }

    public VerificationData Clone() {
      return new VerificationData(this);
    }

    /// <summary>Field number for the "target_image" field.</summary>
    public const int TargetImageFieldNumber = 1;
    private global::DataTypes.Photo targetImage_;
    public global::DataTypes.Photo TargetImage {
      get { return targetImage_; }
      set {
        targetImage_ = value;
      }
    }

    /// <summary>Field number for the "comparison_image" field.</summary>
    public const int ComparisonImageFieldNumber = 2;
    private global::DataTypes.Photo comparisonImage_;
    public global::DataTypes.Photo ComparisonImage {
      get { return comparisonImage_; }
      set {
        comparisonImage_ = value;
      }
    }

    /// <summary>Field number for the "comparison_person_id" field.</summary>
    public const int ComparisonPersonIdFieldNumber = 3;
    private long comparisonPersonId_;
    public long ComparisonPersonId {
      get { return comparisonPersonId_; }
      set {
        comparisonPersonId_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as VerificationData);
    }

    public bool Equals(VerificationData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TargetImage, other.TargetImage)) return false;
      if (!object.Equals(ComparisonImage, other.ComparisonImage)) return false;
      if (ComparisonPersonId != other.ComparisonPersonId) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (targetImage_ != null) hash ^= TargetImage.GetHashCode();
      if (comparisonImage_ != null) hash ^= ComparisonImage.GetHashCode();
      if (ComparisonPersonId != 0L) hash ^= ComparisonPersonId.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (targetImage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TargetImage);
      }
      if (comparisonImage_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ComparisonImage);
      }
      if (ComparisonPersonId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ComparisonPersonId);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (targetImage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetImage);
      }
      if (comparisonImage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ComparisonImage);
      }
      if (ComparisonPersonId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ComparisonPersonId);
      }
      return size;
    }

    public void MergeFrom(VerificationData other) {
      if (other == null) {
        return;
      }
      if (other.targetImage_ != null) {
        if (targetImage_ == null) {
          targetImage_ = new global::DataTypes.Photo();
        }
        TargetImage.MergeFrom(other.TargetImage);
      }
      if (other.comparisonImage_ != null) {
        if (comparisonImage_ == null) {
          comparisonImage_ = new global::DataTypes.Photo();
        }
        ComparisonImage.MergeFrom(other.ComparisonImage);
      }
      if (other.ComparisonPersonId != 0L) {
        ComparisonPersonId = other.ComparisonPersonId;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (targetImage_ == null) {
              targetImage_ = new global::DataTypes.Photo();
            }
            input.ReadMessage(targetImage_);
            break;
          }
          case 18: {
            if (comparisonImage_ == null) {
              comparisonImage_ = new global::DataTypes.Photo();
            }
            input.ReadMessage(comparisonImage_);
            break;
          }
          case 24: {
            ComparisonPersonId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class IdentificationData : pb::IMessage<IdentificationData> {
    private static readonly pb::MessageParser<IdentificationData> _parser = new pb::MessageParser<IdentificationData>(() => new IdentificationData());
    public static pb::MessageParser<IdentificationData> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Services.FacialServiceReflection.Descriptor.MessageTypes[2]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public IdentificationData() {
      OnConstruction();
    }

    partial void OnConstruction();

    public IdentificationData(IdentificationData other) : this() {
      TargetImage = other.targetImage_ != null ? other.TargetImage.Clone() : null;
      populationId_ = other.populationId_;
    }

    public IdentificationData Clone() {
      return new IdentificationData(this);
    }

    /// <summary>Field number for the "target_image" field.</summary>
    public const int TargetImageFieldNumber = 1;
    private global::DataTypes.Photo targetImage_;
    public global::DataTypes.Photo TargetImage {
      get { return targetImage_; }
      set {
        targetImage_ = value;
      }
    }

    /// <summary>Field number for the "population_id" field.</summary>
    public const int PopulationIdFieldNumber = 2;
    private long populationId_;
    public long PopulationId {
      get { return populationId_; }
      set {
        populationId_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as IdentificationData);
    }

    public bool Equals(IdentificationData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TargetImage, other.TargetImage)) return false;
      if (PopulationId != other.PopulationId) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (targetImage_ != null) hash ^= TargetImage.GetHashCode();
      if (PopulationId != 0L) hash ^= PopulationId.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (targetImage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TargetImage);
      }
      if (PopulationId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PopulationId);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (targetImage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetImage);
      }
      if (PopulationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PopulationId);
      }
      return size;
    }

    public void MergeFrom(IdentificationData other) {
      if (other == null) {
        return;
      }
      if (other.targetImage_ != null) {
        if (targetImage_ == null) {
          targetImage_ = new global::DataTypes.Photo();
        }
        TargetImage.MergeFrom(other.TargetImage);
      }
      if (other.PopulationId != 0L) {
        PopulationId = other.PopulationId;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (targetImage_ == null) {
              targetImage_ = new global::DataTypes.Photo();
            }
            input.ReadMessage(targetImage_);
            break;
          }
          case 16: {
            PopulationId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FaceSearchResponse : pb::IMessage<FaceSearchResponse> {
    private static readonly pb::MessageParser<FaceSearchResponse> _parser = new pb::MessageParser<FaceSearchResponse>(() => new FaceSearchResponse());
    public static pb::MessageParser<FaceSearchResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Services.FacialServiceReflection.Descriptor.MessageTypes[3]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public FaceSearchResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public FaceSearchResponse(FaceSearchResponse other) : this() {
      faces_ = other.faces_.Clone();
      matches_ = other.matches_.Clone();
    }

    public FaceSearchResponse Clone() {
      return new FaceSearchResponse(this);
    }

    /// <summary>Field number for the "faces" field.</summary>
    public const int FacesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::DataTypes.Faces> _repeated_faces_codec
        = pb::FieldCodec.ForMessage(10, global::DataTypes.Faces.Parser);
    private readonly pbc::RepeatedField<global::DataTypes.Faces> faces_ = new pbc::RepeatedField<global::DataTypes.Faces>();
    public pbc::RepeatedField<global::DataTypes.Faces> Faces {
      get { return faces_; }
    }

    /// <summary>Field number for the "matches" field.</summary>
    public const int MatchesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::DataTypes.Matches> _repeated_matches_codec
        = pb::FieldCodec.ForMessage(18, global::DataTypes.Matches.Parser);
    private readonly pbc::RepeatedField<global::DataTypes.Matches> matches_ = new pbc::RepeatedField<global::DataTypes.Matches>();
    public pbc::RepeatedField<global::DataTypes.Matches> Matches {
      get { return matches_; }
    }

    public override bool Equals(object other) {
      return Equals(other as FaceSearchResponse);
    }

    public bool Equals(FaceSearchResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!faces_.Equals(other.faces_)) return false;
      if(!matches_.Equals(other.matches_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= faces_.GetHashCode();
      hash ^= matches_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      faces_.WriteTo(output, _repeated_faces_codec);
      matches_.WriteTo(output, _repeated_matches_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += faces_.CalculateSize(_repeated_faces_codec);
      size += matches_.CalculateSize(_repeated_matches_codec);
      return size;
    }

    public void MergeFrom(FaceSearchResponse other) {
      if (other == null) {
        return;
      }
      faces_.Add(other.faces_);
      matches_.Add(other.matches_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            faces_.AddEntriesFrom(input, _repeated_faces_codec);
            break;
          }
          case 18: {
            matches_.AddEntriesFrom(input, _repeated_matches_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
