syntax = "proto3";

import "datatypes/person.proto";
import "datatypes/photo.proto";
import "datatypes/key.proto";
import "datatypes/group.proto";
import "datatypes/biometrics.proto";
import "google/protobuf/empty.proto";

option java_package = "ex.grpc";
option objc_class_prefix = "RTG";
option go_package = "github.com/Enebra/ServiceCoordinator/grpc/services/facialservice";

package Services;

service BiometricFacialService
{  
  rpc Process          ( BiometricRequest   ) returns ( BiometricResponse     ) {} 
  rpc Update           ( BiometricUpdate    ) returns ( google.protobuf.Empty ) {}
}

//TODO move to queries
message BiometricRequest 
{
  DataTypes.Photo           photo  = 1;
  DataTypes.Key             person = 2;
  DataTypes.Key             group  = 3;
  DataTypes.BioActionType   action = 4;
  DataTypes.BiometricType   type   = 5;
}

message BiometricResponse
{
  DataTypes.Photo photo   = 1;
  DataTypes.Key   person  = 2;
  DataTypes.Faces faces   = 3;
  bool            success = 4;
}

message BiometricUpdate
{
  oneof update_type
  {   
	  DataTypes.Person person_updates = 2;	
	  DataTypes.Group  group_updates  = 4;
  }
}