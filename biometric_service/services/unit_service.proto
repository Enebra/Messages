syntax = "proto3";

import "google/protobuf/empty.proto";
import "datatypes/location.proto";
import "datatypes/devices.proto";
import "datatypes/biometrics.proto";

option java_package = "ex.grpc";
option objc_class_prefix = "RTG";
option go_package = "github.com/Enebra/ServiceCoordinator/grpc/services/unitservice";

package Services;

service UnitService 
{    
  rpc OpenDoor            ( DataTypes.Location          )  returns ( google.protobuf.Empty       ) {}  
  rpc GetStream           ( stream StreamMsg            )  returns ( stream DataTypes.FrameBytes ) {}
  rpc GetDevices          ( DataTypes.GetDevicesRequest )  returns ( DataTypes.Devices           ) {}
  rpc UpdateLocations     ( DataTypes.LocationUpdates   )  returns ( google.protobuf.Empty       ) {} 
  
  //on person registration       
  rpc GetCard             ( DataTypes.Device            )  returns ( DataTypes.CardMsg           ) {} 
  
  // on person registration & identification          
  rpc Enroll              ( EnrollMsg                   )  returns ( DataTypes.Faces             ) {}  
}

message StreamMsg
{
  oneof target_type
  {
    DataTypes.Device   device   = 1;
	DataTypes.Location location = 2;
  }

  DataTypes.DeviceState state          = 3;
  int64                 correlation_id = 4;
}

message EnrollMsg
{
  oneof target_type
  {
    DataTypes.Device   device    = 1;
	string             photo_url = 2;
  }
}